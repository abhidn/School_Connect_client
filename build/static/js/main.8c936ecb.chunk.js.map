{"version":3,"sources":["redux/actionTypes.js","redux/validation/is-empty.js","redux/reducer/facultyReducer.js","redux/reducer/adminReducer.js","redux/reducer/studentReducer.js","redux/reducer/errorReducerHelper.js","redux/reducer/errorReducer.js","redux/reducer/rootReducer.js","redux/store.js","redux/utils/setAuthToken.js","redux/action/facultyAction.js","redux/action/adminAction.js","redux/action/studentAction.js","Pages/LoginPage.jsx","Pages/Student/BookCard.jsx","Pages/Student/Libarary.jsx","Pages/Chat.jsx","Components/HomeHelper.jsx","Pages/StudentHome.jsx","Pages/StudentDetails.jsx","Components/FacultyHomeHelper.jsx","Pages/FacultyInterface.jsx","Pages/AttendenceFaculty.jsx","Components/AdminHomeHelper.jsx","Pages/AdminAddStudent.jsx","Pages/AdminAddFaculty.jsx","Pages/AdminAddSubject.jsx","Pages/StudentAttendencePage.jsx","Pages/FacultyStudentLoginPags.jsx","Pages/StudentUpdatePassword.jsx","Pages/FacultyUpdatePassword.jsx","Pages/ForgotPassword.jsx","Pages/RecieverUserDetails.jsx","Pages/StudentUpdateProfile.jsx","Pages/Student/StudentSubjectList.jsx","Pages/Faculty/FacultyUploadMarks.jsx","Pages/Faculty/FacultyUpdateProfile.jsx","Pages/Student/StudentTestPerformance.jsx","Pages/Admin/AdminAddAdmin.jsx","Pages/Admin/AdminGetAllFaculty.jsx","Pages/Admin/AdminGetAllStudents.jsx","Pages/Admin/AdminGetAllSubjects.jsx","Pages/Admin/AdminHome.jsx","App.js","index.js"],"names":["SET_ERRORS","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","faculty","flag","updateProfileFlag","allSubjectCodeList","fetchedStudents","fetchedStudentsHelper","facultyReducer","state","action","type","payload","admin","adminAddFacultyFlag","adminAddStudentFlag","adminAddAdminFlag","adminAddSubjectFlag","allSubject","allFaculty","allStudent","adminReducer","student","alongsideStudent","chatHistory","regNumStudent","privateChat","privateChat2","newerChats","previousChats","allSubjects","attendence","allMarks","studentReducer","setErrorsHelper","setErrors","combineReducers","error","errorReducer","errorHelper","errorReducerHelper","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","setFaculty","data","url","fetchStudentsHelper","subjectCodeListHelper","fetchStudents","classroom","year","division","dispatch","a","method","result","subjectCode","response","facultyUpdateProfileFlag","facultyUpdate","updatedData","console","log","message","facultyLogout","localStorage","removeItem","setAdmin","adminGetAllFacultyHelper","adminGetAllStudentHelper","adminGetAllSubjectHelper","adminLogout","setStudent","getStudentByRegNameHelper","privateConversation","privateConversation2","newerChatsHelper","previousChatsHelper","getAllSubjectsHelper","fetchAttendenceHelper","getMarksHelper","studentUpdate","studentLogout","LoginPage","useSelector","useDispatch","useState","registrationNumber","setRegistrationNumber","password","setPassword","setError","isLoading","setIsLoading","history","useHistory","useEffect","push","className","noValidate","onSubmit","e","adminCredential","preventDefault","setItem","decoded","jwt_decode","htmlFor","onChange","target","classnames","id","class","role","BookCard","props","book","href","link","src","imageLink","alt","width","title","Std","Medium","JsonDataDisplay","socket","bookList","JsonData","map","k","key","HomeHelper","Home","name","setName","receiverName","senderName","finalname","replace","letter","toUpperCase","srcset","style","color","fontSize","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","textDecoration","aria-haspopup","aria-labelledby","listStyle","onClick","paddingBottom","fontFamily","fontWeight","textTransform","aria-hidden","dob","gender","email","batch","studentMobileNumber","aadharCard","fatherName","fatherMobileNumber","StudentDetails","setDepartment","setYear","setSection","setResult","filterStudentHelper","filterByNameHelper","formHandler","placeholder","res","index","scope","senderRegistrationNumber","receiverRegistrationNumber","obj","FacultyInterface","FacultyHomeHelper","avatar","designation","joiningYear","facultyMobileNumber","AttendenceFaculty","setSubjectCode","checkedValue","setCheckedValue","isLoading2","setIsLoading2","handleInputChange","tempCheck","checked","indexOf","splice","classNameName","selectedStudents","alert","markAttendence","required","subjectCodeName","_id","AdminAddStudent","setEmail","setDob","setGender","setContactNumber","setFatherName","setFatherContactNumber","setAadharCard","AdminHomeHelper","studentCredential","split","reverse","join","AdminAddFaculty","setDesignation","facultyMobileNUmber","setFacultyMobileNumber","facultyCredential","AdminAddSubject","subjectName","setSubjectName","totalLectures","setTotalLectures","subjectCredential","data3","i","maxHours","lectureAttended","absentHours","totalLecturesByFaculty","BarChart","height","Bar","dataKey","fill","CartesianGrid","stroke","XAxis","YAxis","FacultyStudentLoginPags","facultyRegNum","setFacultyRegNum","facultyPassword","setFacultyPassword","studentRegNum","setStudentRegNum","studentPassword","setStudentPassword","errors","errorsHelper","isFacultyLoading","setIsFacultyLoading","isStudentLoading","setIsStudentLoading","backgroundColor","borderRadius","padding","StudentUpdatePassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","passwordData","FacultyUpdatePassword","withRouter","user","setUser","otp","setOtp","helper","setHelper","match","params","newPasswordWithOtp","submitOTPStudent","submitOTPFaculty","studentEmail","getOTPFaculty","aria-describedby","Chat","room1","setRoom1","room2","setRoom2","setReceiverRegistrationNumber","setMessage","messageArray","setMessageArray","olderMessages","setOlderMessages","ENDPOINT","temp","room","io","tempArr","input","value_1","value_2","swap","tempRoom2","roomId","getPrivateConversation2","emit","on","off","Date","createdAt","marginTop","sender","messageObj","senderId","messageobj","textAlign","overflowY","border","text","toString","substr","Dateandtime","RecieverUserDetails","getStudentByRegName","setAvatar","setModal","formData","FormData","append","accept","files","img","StudentSubjectList","FacultyUploadMarks","marks","setMarks","totalMarks","setTotalMarks","exam","setExam","setErrorHelper","uploadMarks","newMarks","findIndex","m","StudentTestPerformance","sum1","Total_sum1","sum2","Total_sum2","sum","Total_sum","CycleTest1","CycleTest2","Semester","data1","subject","data2","AdminAddAdmin","contactNumber","adminCredentails","AdminGetAllFaculty","form-inline","adminGetAllFaculty","searchCredentials","AdminGetAllSubjects","adminGetAllSubject","AdminHome","window","facultyJwtToken","currentTime","now","exp","location","studentJwtToken","setStudentUser","adminJwtToken","setAdminUser","App","exact","path","component","StudentUpdateProfile","facultyInterface","AdminGetAllStudent","AdminGetAllSubject","StudentAttendencePage","StudentTestPerformace","FacultyUpdateProfile","ForgotPassword","Libarary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"olOACaA,EAAa,aCKXC,EANC,SAAAC,GAAK,YACPC,IAAVD,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC/B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,QCCzCE,EAAe,CACjBC,iBAAiB,EACjBC,QAAS,GACTC,MAAM,EACNC,mBAAmB,EACnBC,mBAAoB,GACpBC,gBAAiB,GACjBC,uBAAuB,GA2CZC,EAvCQ,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCACrD,OAAQA,EAAOC,MACX,IFNmB,cEOf,OAAO,2BACAF,GADP,IAEIR,iBAAkBR,EAAQiB,EAAOE,SACjCV,QAASQ,EAAOE,UAGxB,IAAK,iBACD,OAAO,2BACAH,GADP,IAEIF,uBAAuB,EACvBD,gBAAiBI,EAAOE,UAGhC,IAAK,8BACD,OAAO,2BACAH,GADP,IAEIL,kBAAmBM,EAAOE,UAGlC,IAAK,uBACD,OAAO,2BACAH,GADP,IAEIJ,mBAAoBK,EAAOE,UAGnC,IAAK,SACD,OAAO,2BACAH,GADP,IAEIF,sBAAuBG,EAAOE,UAGtC,QACI,OAAOH,I,QC/CbT,EAAY,aACdC,iBAAiB,EACjBY,MAAO,GACPC,qBAAqB,EACrBC,qBAAqB,EACrBC,mBAAmB,EACnBC,qBAAqB,EACrBC,WAAY,GACZC,WAAY,GACZC,WAAY,IATE,aAUF,IAuEDC,EA/DM,WAAmC,IAAlCZ,EAAiC,uDAAzBT,EAAcU,EAAW,uCACnD,OAAQA,EAAOC,MACX,IHlBiB,YGmBb,OAAO,2BACAF,GADP,IAEIR,iBAAkBR,EAAQiB,EAAOE,SACjCC,MAAOH,EAAOE,UAEtB,IHvBoB,eGwBhB,OAAO,2BACAH,GADP,IAEIS,WAAYR,EAAOE,UAG3B,IAAK,yBACD,OAAO,2BACAH,GADP,IAEIK,oBAAqBJ,EAAOE,UAGpC,IAAK,yBACD,OAAO,2BACAH,GADP,IAEIM,oBAAqBL,EAAOE,UAGpC,IAAK,yBACD,OAAO,2BACAH,GADP,IAEIQ,oBAAqBP,EAAOE,UAGpC,IAAK,uBACD,OAAO,2BACAH,GADP,IAEIO,kBAAmBN,EAAOE,UAGlC,IAAK,kBACD,OAAO,2BACAH,GADP,IAEIU,WAAYT,EAAOE,UAG3B,IAAK,kBACD,OAAO,2BACAH,GADP,IAEIW,WAAYV,EAAOE,UAG3B,IAAK,kBACD,OAAO,2BACAH,GADP,IAEIS,WAAYR,EAAOE,UAG3B,QACI,OAAOH,IC1EbT,EAAe,CACjBC,iBAAiB,EACjBqB,QAAS,GACTC,iBAAkB,GAClBpB,MAAM,EACNqB,YAAa,GACbC,cAAe,GACfC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,cAAe,GACfC,YAAa,GACbC,WAAY,GACZC,SAAU,IAiFCC,EA7EQ,WAAmC,IAAlCxB,EAAiC,uDAAzBT,EAAcU,EAAW,uCACrD,OAAQA,EAAOC,MACX,IJRmB,cISf,OAAO,2BACAF,GADP,IAEIR,iBAAkBR,EAAQiB,EAAOE,SACjCU,QAASZ,EAAOE,UAExB,IAAK,cACD,OAAO,2BACAH,GADP,IAEIc,iBAAkBb,EAAOE,UAEjC,IJhCgB,WIiCZ,OAAO,2BACAH,GADP,IAEIN,MAAM,IAEd,IAAK,WACD,OAAO,2BACAM,GADP,IAEIe,YAAc,CAACf,EAAMe,YAAad,EAAOE,WAEjD,IAAK,yBACD,OAAO,2BACAH,GADP,IAEIgB,cAAef,EAAOE,UAG9B,IAAK,2BACD,OAAO,2BACAH,GADP,IAEIiB,YAAahB,EAAOE,UAG5B,IAAK,4BACD,OAAO,2BACAH,GADP,IAEIkB,aAAcjB,EAAOE,UAG7B,IAAK,kBACD,OAAO,2BACAH,GADP,IAEImB,WAAYlB,EAAOE,UAG3B,IAAK,qBACD,OAAO,2BACAH,GADP,IAEIoB,cAAenB,EAAOE,UAG9B,IAAK,mBACD,OAAO,2BACAH,GADP,IAEIqB,YAAapB,EAAOE,UAG5B,IAAK,iBACD,OAAO,2BACAH,GADP,IAEIsB,WAAYrB,EAAOE,UAG3B,IAAK,YACD,OAAO,2BACAH,GADP,IAEIuB,SAAUtB,EAAOE,UAGzB,QACI,OAAOH,IC5FbT,EAAe,GAYNkC,EAVS,WAAmC,IAAlCzB,EAAiC,uDAAzBT,EAAcU,EAAW,uCACtD,OAAQA,EAAOC,MACX,ILJyB,oBKKrB,OAAOD,EAAOE,QAClB,QACI,OAAOH,ICPbT,EAAe,GAWNmC,EATG,WAAmC,IAAlC1B,EAAiC,uDAAzBT,EAAcU,EAAW,uCAChD,OAAQA,EAAOC,MACX,KAAKnB,EACD,OAAOkB,EAAOE,QAClB,QACI,OAAOH,ICDJ2B,cAAgB,CAC3BlC,QAASM,EACTK,MAAOQ,EACPC,QAASW,EACTI,MAAOC,EACPC,YAAaC,ICPXC,EAAa,CAACC,KAWLC,EATDC,YACVC,EALiB,GAOjBC,YACIC,IAAe,WAAf,EAAmBN,K,wDCAZO,EAVM,SAAAC,GACbA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,e,wBCHTC,EAAa,SAACC,GAChB,MAAO,CACH5C,KVKmB,cUJnBC,QAAS2C,IAIXC,EAAM,wBAENC,EAAsB,SAACF,GACzB,MAAO,CACH5C,KAAM,iBACNC,QAAS2C,IAIXG,EAAwB,SAACH,GAC3B,MAAO,CACH5C,KAAM,uBACNC,QAAS2C,IA8FJI,EAAgB,SAACC,EAAWC,EAAMC,GAC3C,8CAAO,WAAOC,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,6BACXD,KAAM,CAAEK,YAAWC,OAAMC,cAL9B,gBAESP,EAFT,EAESA,KAKRQ,EAASN,EAAoBF,EAAKW,SAClCH,EAASL,EAAsBH,EAAKY,cARrC,gDAWCJ,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,uDAmBEc,EAA2B,SAACd,GAC9B,MAAO,CACH5C,KAAM,8BACNC,QAAS2C,IAIJe,EAAgB,SAACC,GAC1B,8CAAO,WAAOR,GAAP,eAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAG,6BACRD,KAAMgB,IALX,kBAEShB,KAKRQ,EAASM,GAAyB,IAPnC,gDAUCG,QAAQC,IAAI,2BAA4B,KAAIC,SAV7C,yDAAP,uDAsESC,EAAgB,kBACzB,SAACZ,GAEGa,aAAaC,WAAW,mBAExB7B,GAAa,GAEbe,EAAST,EAAW,OCvNtBE,EAAM,wBAENsB,EAAW,SAACvB,GACd,MAAO,CACH5C,KXNiB,YWOjBC,QAAS2C,IAIXzC,EAAsB,SAACyC,GACzB,MAAO,CACH5C,KAAM,yBACNC,QAAS2C,IAIXxC,EAAsB,SAACwC,GACzB,MAAO,CACH5C,KAAM,yBACNC,QAAS2C,IAIXtC,EAAsB,SAACsC,GACzB,MAAO,CACH5C,KAAM,yBACNC,QAAS2C,IAIXvC,EAAoB,SAACuC,GACvB,MAAO,CACH5C,KAAM,uBACNC,QAAS2C,IAWXwB,EAA2B,SAACxB,GAC9B,MAAO,CACH5C,KAAM,kBACNC,QAAS2C,IAIXyB,EAA2B,SAACzB,GAC9B,MAAO,CACH5C,KAAM,kBACNC,QAAS2C,IAKX0B,EAA2B,SAAC1B,GAC9B,MAAO,CACH5C,KAAM,kBACNC,QAAS2C,IAkMJ2B,GAAc,kBACvB,SAACnB,GAEGa,aAAaC,WAAW,iBAExB7B,GAAa,GAEbe,EAASe,EAAS,OC1QpBtB,GAAM,wBASN2B,GAAa,SAAC5B,GAChB,MAAO,CACH5C,KZAmB,cYCnBC,QAAS2C,IAaX6B,GAA4B,SAAC7B,GAC/B,MAAO,CACH5C,KAAM,yBACNC,QAAS2C,IAKX8B,GAAsB,SAAC9B,GACzB,MAAO,CACH5C,KAAM,2BACNC,QAAS2C,IAIX+B,GAAuB,SAAC/B,GAC1B,MAAO,CACH5C,KAAM,4BACNC,QAAS2C,IAIXgC,GAAmB,SAAChC,GACtB,MAAO,CACH5C,KAAM,kBACNC,QAAS2C,IAIXiC,GAAsB,SAACjC,GACzB,MAAO,CACH5C,KAAM,qBACNC,QAAS2C,IAIXkC,GAAuB,SAAClC,GAC1B,MAAO,CACH5C,KAAM,mBACNC,QAAS2C,IAIXmC,GAAwB,SAACnC,GAC3B,MAAO,CACH5C,KAAM,iBACNC,QAAS2C,IAIXoC,GAAiB,SAACpC,GACpB,MAAO,CACH5C,KAAM,YACNC,QAAS2C,IA6MJqC,GAAgB,SAACrB,GAC1B,6BAAO,4BAAAP,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,GAAG,6BACRD,KAAMgB,IALX,kBAEShB,KAFT,gDASCiB,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,0DA2EEmB,GAAgB,kBACzB,SAAC9B,GAEGa,aAAaC,WAAW,mBAExB7B,GAAa,GAEbe,EAASoB,GAAW,O,2BC3RbW,GAhFG,WAAO,IAAD,EACdnD,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cAFG,EAGgCC,mBAAS,IAHzC,oBAGbC,EAHa,KAGOC,EAHP,OAIYF,mBAAS,IAJrB,oBAIbG,EAJa,KAIHC,EAJG,OAKMJ,mBAAS,IALf,oBAKb5D,EALa,KAKNiE,EALM,OAMcL,oBAAS,GANvB,oBAMbM,EANa,KAMFC,EANE,KAOdC,EAAUC,cAChBC,qBAAU,WACFhE,EAAM9B,MAAMZ,iBACZwG,EAAQG,KAAK,YAElB,CAACjE,EAAM9B,MAAMZ,kBAChB0G,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QAqBV,OAZAsE,qBAAU,WACFhE,EAAMN,OACNM,EAAM9B,MAAMZ,gBACZuG,GAAa,GAIbA,GAAa,KAElB,CAAC7D,EAAMN,MAAOM,EAAM9B,MAAMZ,kBAIzB,yBAAK4G,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8DACX,6BACI,wBAAIA,UAAU,yBAAd,SACA,0BAAMC,YAAU,EAACC,SA1BrB,SAACC,GF+CC,IAACC,EE9CnBD,EAAEE,iBACFV,GAAa,GACbzC,GF4CmBkD,EE5CC,CAACf,qBAAoBE,YF6C7C,uCAAO,WAAOrC,GAAP,qBAAAC,EAAA,sEAECQ,QAAQC,IAAI,0BAA2BwC,GAFxC,SAGwB/D,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,mBACXD,KAAM0D,IANX,gBAGS1D,EAHT,EAGSA,KAKRiB,QAAQC,IAAI,iBAAkBlB,GACtBN,EAAUM,EAAVN,MAER2B,aAAauC,QAAQ,gBAAiBlE,GAEtCD,EAAaC,GAEPmE,EAAUC,IAAWpE,GAE3Bc,EAASe,EAASsC,IAjBnB,kDAoBCrD,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAtB3B,0DAAP,0DErB4B,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,WAAf,uBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOb,EAAsBa,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOjB,MAAOwG,EAAoBW,UAAWY,KAAW,+BACxH,CAAC,aAAepF,EAAM6D,qBAElBwB,GAAG,YACVrF,EAAM6D,oBAAuB,yBAAKW,UAAU,oBAAoBxE,EAAM6D,qBAE3E,yBAAKW,UAAU,cACX,2BAAOS,QAAQ,cAAf,YACA,8BAAOC,SAAU,SAACP,GAAD,OAAOX,EAAYW,EAAEQ,OAAO9H,QAAQA,MAAO0G,EAAUS,UAAWY,KAAW,+BAAgC,CACxH,aAAcpF,EAAM+D,YADxB,sBAEWA,GAFX,qBAE0B,YAF1B,mBAEwC,cAFxC,IAGC/D,EAAM+D,UAAa,yBAAKS,UAAU,oBAAoBxE,EAAM+D,WAEjE,yBAAKuB,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,0BAAhC,gB,kBCxDhCgB,I,OAlBE,SAACC,GACd,IAAMC,EAAOD,EAAMC,KAEnB,OACI,yBAAKlB,UAAU,kBAEX,uBAAGmB,KAAMD,EAAKE,KAAMT,OAAO,UAA3B,IAAqC,yBAAKU,IAAKH,EAAKI,UAAWC,IAAI,QAAQC,MAAM,SAEjF,yBAAKxB,UAAU,QACX,uBAAGmB,KAAMD,EAAKE,KAAMT,OAAO,SAASX,UAAU,aAAY,4BAAKkB,EAAKO,QAEpE,4BAAKP,EAAKQ,KACV,2BAAIR,EAAKS,Y,UC4GVC,IC5GXC,GD4GWD,GA/Cf,WACE,IAiBIE,EAjBEhG,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cAwBhB,OALAiC,EAAWC,GAASC,KAAI,SAACd,EAAMe,GAAP,OACtB,kBAAC,GAAD,CAAUf,KAAMA,EAAMgB,IAAKD,OAM3B,oCACGnG,EAAMrB,QAAQrB,gBACb,oCACE,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACZ8B,MAKFlC,EAAQG,KAAK,OEFbqC,GAzGF,WACT,IAAMxC,EAAUC,cACV/D,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAFtB,EAGSsD,mBAAS,IAHlB,oBAGRiD,EAHQ,KAGFC,EAHE,KAIfxC,qBAAU,WACFhE,EAAMrB,QAAQA,QAAQA,QAAQ4H,MAC9BC,EAAQxG,EAAMrB,QAAQA,QAAQA,QAAQ4H,QAE3C,CAACvG,EAAMrB,QAAQA,QAAQA,QAAQ4H,OAClC,IAAMnF,EAAWiC,cACjBW,qBAAU,WL6PY,IAACyC,EAhBGC,EK5OtBtF,GL4PmBqF,EK5PCzG,EAAMrB,QAAQA,QAAQA,QAAQ4H,KL6PtD,uCAAO,WAAOnF,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAG,uCAAmC4F,KAJhD,gBAES7F,EAFT,EAESA,KAIRQ,EAASwB,GAAiBhC,EAAKW,SANhC,gDASCM,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,yDAAP,wDK5PIX,GL2OsBsF,EK3OC1G,EAAMrB,QAAQA,QAAQA,QAAQ4H,KL4OzD,uCAAO,WAAOnF,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAG,0CAAsC6F,KAJnD,gBAES9F,EAFT,EAESA,KAIRQ,EAASyB,GAAoBjC,EAAKW,SANnC,gDASCM,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,yDAAP,0DK3OG,CAAC/B,EAAMrB,QAAQM,WAAW9B,SAC7B,IAMMwJ,EAAYJ,EAAKK,QAAQ,wBAAwB,SAAAC,GAAM,OAAIA,EAAOC,iBACxE,OACI,oCAEI,6BACI,yBAAKvB,IAAI,uIAAuIE,IAAI,OAAOsB,OAAO,KAClK,yBAAK7C,UAAU,cACX,4BAEI,4BACI,uBAAGmB,KAAK,KAAI,mFACZ,uBAAGnB,UAAU,QAAO,4BAApB,uFAGJ,4BACI,uBAAGmB,KAAK,KAAI,kBAAC,KAAD,QAGhB,4BACI,uBAAGA,KAAK,KAAI,kBAAC,KAAD,QAGhB,4BACI,uBAAGA,KAAK,KAAI,kBAAC,KAAD,WAS5B,yBAAKnB,UAAU,oBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iDACX,wBAAIA,UAAU,oBAAoBmB,KAAK,GAAG2B,MAAO,CAAEC,MAAO,QAASC,SAAU,SAA7E,SACA,4BAAQhD,UAAU,iBAAiBlG,KAAK,SAASmJ,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMrD,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2Ba,GAAG,aACzC,wBAAIb,UAAU,cACV,wBAAIA,UAAU,mBACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAO,kBAAC,IAAD,CAAMsD,GAAG,QAAQR,MAAO,CAAEC,MAAO,QAASQ,eAAgB,OAAQP,SAAU,SAAU,4BAAKP,MAKtI,wBAAIzC,UAAU,qBACV,uBAAGA,UAAU,2BAA2BmB,KAAK,IAAIN,GAAG,iBAAiBE,KAAK,SAASkC,cAAY,WAAWO,gBAAc,OAAOJ,gBAAc,QAAQN,MAAO,CAAEC,MAAO,QAASC,SAAU,SAAxL,aAEA,yBAAKhD,UAAU,gBAAgByD,kBAAgB,kBAC3C,kBAAC,IAAD,CAAMzD,UAAU,gBAAgBsD,GAAG,4BAAnC,oBACA,kBAAC,IAAD,CAAMtD,UAAU,gBAAgBsD,GAAG,uBAAnC,cACA,kBAAC,IAAD,CAAMtD,UAAU,gBAAgBsD,GAAG,2BAAnC,0BAGR,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,kBAAkBR,MAAO,CAAEC,MAAO,QAASQ,eAAgB,OAAQP,SAAU,SAAU,2CAE1I,wBAAIhD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,kBAAkBR,MAAO,CAAEC,MAAO,QAASQ,eAAgB,OAAQP,SAAU,SAAU,iDAAuBlH,EAAMrB,QAAQM,WAAW9B,OAAhD,QAE1I,wBAAI+G,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,0BAA0BR,MAAO,CAAEC,MAAO,QAASQ,eAAgB,OAAQP,SAAU,SAAU,kDAElJ,wBAAIhD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,SAASR,MAAO,CAAEC,MAAO,QAASQ,eAAgB,OAAQP,SAAU,SAAU,4CAMzI,6BACI,4BAAQF,MAAO,CAAEY,UAAW,OAAQX,MAAO,QAASC,SAAU,QAAUW,QAhF9E,WAClBzG,EAAS8B,MACTY,EAAQG,KAAK,MA8E2GjG,KAAK,SAASkG,UAAU,OAAO,8CCqKhJoC,I,OAtQF,WACT,IAAMtG,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cAEhB,OACI,6BACK/D,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MA0KA,yBAAKrB,MAAM,wBACP,yBAAKA,MAAM,aACP,yBAAKA,MAAM,OACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,iBAAiBgC,MAAO,CAACc,cAAc,SAC9C,yBAAK9C,MAAM,0CACP,yBAAKA,MAAM,cAAcO,IAAI,wCAAwCE,IAAI,KACzE,6BACA,uBAAGuB,MAAO,CAACe,WAAW,SAASb,SAAS,SAAUlH,EAAMrB,QAAQA,QAAQA,QAAQ4H,OAEpF,yBAAKvB,MAAM,aACP,uBAAGA,MAAM,QAAO,uBAAGA,MAAM,OAAOgC,MAAO,CAACgB,WAAW,OAAOD,WAAW,SAASb,SAAS,SAAvE,eAAgGlH,EAAMrB,QAAQA,QAAQA,QAAQ4E,oBAC9I,uBAAGyB,MAAM,OAAOgC,MAAO,CAACiB,cAAc,eAAe,uBAAGjD,MAAM,OAAOgC,MAAO,CAACgB,WAAW,OAAOD,WAAW,SAASb,SAAS,SAAvE,UAA2FlH,EAAMrB,QAAQA,QAAQA,QAAQsC,WAC9K,uBAAG+D,MAAM,QAAO,uBAAGA,MAAM,OAAOgC,MAAO,CAACgB,WAAW,OAAOD,WAAW,SAASb,SAAS,SAAvE,YAA6FlH,EAAMrB,QAAQA,QAAQA,QAAQwC,UAC3I,uBAAG6D,MAAM,QAAO,uBAAGA,MAAM,wBAAwBkD,cAAY,SAAW,kBAAC,IAAD,CAAMV,GAAG,0BAAT,uBAKpF,yBAAKxC,MAAM,YACP,yBAAKA,MAAM,kBACP,yBAAKA,MAAM,uCACP,uBAAGA,MAAM,OAAOgC,MAAO,CAACe,WAAW,SAASb,SAAS,SAAS,uBAAGlC,MAAM,cAAckD,cAAY,SAAjG,yBAEJ,yBAAKlD,MAAM,kBACP,2BAAOA,MAAM,wBACT,4BACI,wBAAIU,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,iBACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQwJ,MAEvC,4BACI,wBAAIzC,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,kBACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQuC,OAEvC,4BACI,wBAAIwE,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,UACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQyJ,OAASpI,EAAMrB,QAAQA,QAAQA,QAAQyJ,OAAQ,OAEtF,4BACI,wBAAI1C,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,SACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQ0J,QAEvC,4BACI,wBAAI3C,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,SACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQ2J,QAEvC,4BACI,wBAAI5C,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,kBACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQ4J,oBAC/BvI,EAAMrB,QAAQA,QAAQA,QAAQ4J,oBAAsB,OAE5D,4BACI,wBAAI7C,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,gBACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQ6J,WAAaxI,EAAMrB,QAAQA,QAAQA,QAAQ6J,WAAa,OAE/F,4BACI,wBAAI9C,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,eACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQ8J,WAAazI,EAAMrB,QAAQA,QAAQA,QAAQ8J,WAAa,OAE/F,4BACI,wBAAI/C,MAAM,MAAMsB,MAAO,CAACe,WAAW,SAASb,SAAS,SAArD,iBACA,wBAAIxB,MAAM,MAAV,KACA,4BAAK1F,EAAMrB,QAAQA,QAAQA,QAAQ+J,mBAAqB1I,EAAMrB,QAAQA,QAAQA,QAAQ+J,mBAAqB,eASxI5E,EAAQG,KAAK,QC3DjB0E,GArMQ,WACnB,IAAM3I,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cAFS,EAGDT,mBAAS,IAHR,oBAGlBiD,EAHkB,KAGZC,EAHY,OAIUlD,mBAAS,IAJnB,oBAIlBrC,EAJkB,KAIP2H,EAJO,OAKDtF,mBAAS,IALR,oBAKlBpC,EALkB,KAKZ2H,EALY,OAMMvF,mBAAS,IANf,oBAMlBnC,EANkB,KAMR2H,EANQ,OAOGxF,mBAAS,IAPZ,oBAOlB/B,EAPkB,KAOVwH,EAPU,KAcnBC,EAAmB,uCAAG,8BAAA3H,EAAA,+EAEGd,IAAM,CACzBe,OAAQ,OAERT,IAAK,mDACLD,KAAM,CACFK,YACAC,OACAC,cATY,gBAEZP,EAFY,EAEZA,KAURmI,EAAUnI,EAAKW,QAZK,gDAepBM,QAAQC,IAAI,mCAAoC,KAAIC,SAfhC,yDAAH,qDAmBnBkH,EAAkB,uCAAG,8BAAA5H,EAAA,+EAEId,IAAM,CACzBe,OAAQ,OAERT,IAAK,qDACLD,KAAM,CACF2F,UAPW,gBAEX3F,EAFW,EAEXA,KAQRmI,EAAUnI,EAAKW,QAVI,gDAanBM,QAAQC,IAAI,mCAAZ,MAbmB,yDAAH,qDAkBlBoH,EAAc,SAAC7E,GACjBA,EAAEE,iBACEgC,EACA0C,IAGAD,KAIR,OACI,6BACKhJ,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,aACQ,IAAlB3C,EAAOpE,QAAgB,yBAAK+G,UAAU,OACnC,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,0BAAMA,UAAU,cAAcE,SAAU8E,GACpC,yBAAKhF,UAAU,eACX,2BAAOnH,MAAOwJ,EAAM3B,SAAU,SAACP,GAAD,OAAOmC,EAAQnC,EAAEQ,OAAO9H,QAAQoM,YAAY,iBAAiBnL,KAAK,OAAOkG,UAAU,kBAErH,4BAAQlG,KAAK,SAASkG,UAAU,gCAAhC,aAIZ,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,OACX,0BAAMC,YAAU,EAACC,SAAU8E,GACvB,yBAAKhF,UAAU,cACX,2BAAOS,QAAQ,YAAf,UACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAU,eAAea,GAAG,YAChF,0CAGA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,SAIR,yBAAKmH,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAU,eAAea,GAAG,UAC1E,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGR,yBAAKmH,UAAU,cACX,2BAAOS,QAAQ,aAAf,YACA,4BAAQC,SAAU,SAACP,GAAD,OAAOyE,EAAWzE,EAAEQ,OAAO9H,QAAQmH,UAAU,eAAea,GAAG,aAC7E,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAGR,4BAAQiB,KAAK,SAASkG,UAAU,0BAAhC,cAKhB,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,+BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,eAAd,aACA,2BAAOA,UAAU,SACb,+BAEQlE,EAAMrB,QAAQM,WAAWiH,KAAI,SAACkD,EAAKC,GAAN,OACzB,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI1C,YACT,4BAAI,kBAAC,IAAD,CAAMc,GAAE,mBAAc4B,EAAIG,2BAA1B,mBAO5B,yBAAKrF,UAAU,mBACX,wBAAIA,UAAU,eAAd,eACA,2BAAOA,UAAU,SACb,+BAEQlE,EAAMrB,QAAQO,cAAcgH,KAAI,SAACkD,EAAKC,GAAN,OAC5B,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI3C,cACT,4BAAI,kBAAC,IAAD,CAAMe,GAAE,mBAAc4B,EAAII,6BAA1B,wBAc7B,IAAlBjI,EAAOpE,QAAgB,yBAAK+G,UAAU,OACnC,yBAAKA,UAAU,mBACX,2BAAOA,UAAU,SACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,UAGR,+BACK/H,EAAO2E,KAAI,SAACuD,EAAKJ,GAAN,OACR,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKI,EAAIlG,oBACT,4BAAKkG,EAAIlD,MACT,4BAAI,kBAAC,IAAD,CAAMiB,GAAE,mBAAciC,EAAIlG,qBAA1B,sBAQnBO,EAAQG,KAAK,OC3G3BqC,GAnFF,WACT,IAAMtG,EAAQoD,aAAY,SAACpD,GAAD,OAASA,KAC7B8D,EAAUC,cACV3C,EAAWiC,cAHF,EAISC,mBAAS,IAJlB,oBAIRiD,EAJQ,KAIFC,EAJE,KAKfxC,qBAAU,WAEFhE,EAAMzC,QAAQA,QAAQA,QAAQgJ,MAC9BC,EAAQxG,EAAMzC,QAAQA,QAAQA,QAAQgJ,QAE3C,CAACvG,EAAMzC,QAAQA,QAAQA,QAAQgJ,OAKlC,OACI,oCACA,6BACQ,yBAAKhB,IAAI,uIAAuIE,IAAI,OAAOsB,OAAO,KAClK,yBAAK7C,UAAU,cACX,4BAEI,4BACI,uBAAGmB,KAAK,KAAI,mFACZ,uBAAGnB,UAAU,QAAO,4BAApB,uFAGJ,4BACI,uBAAGmB,KAAK,KAAI,kBAAC,KAAD,QAGhB,4BACI,uBAAGA,KAAK,KAAI,kBAAC,KAAD,QAGhB,4BACI,uBAAGA,KAAK,KAAI,kBAAC,KAAD,WAOhC,yBAAKnB,UAAU,mBAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,oBAAoBmB,KAAK,IAAvC,SACA,4BAAQnB,UAAU,iBAAiBlG,KAAK,SAASmJ,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMrD,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2Ba,GAAG,aACzC,wBAAIb,UAAU,cACV,wBAAIA,UAAU,mBACV,4BAAQlG,KAAK,SAASkG,UAAU,MAAM8C,MAAO,CAAEC,MAAO,UAAU,kBAAC,IAAD,CAAMO,GAAG,SAAQ,4BAAKjB,EAAKO,kBAK/F,wBAAI5C,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,sBAAqB,kDAExE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,wBAAuB,+CAE1E,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,2BAA0B,oDAIrF,6BACI,4BAAQR,MAAO,CAACY,UAAU,QAASC,QA7DrC,WAClBzG,EAASY,KACT8B,EAAQG,KAAK,MA2DkEjG,KAAK,SAASkG,UAAU,QAAO,8CCgBvGwF,GAxFU,WACrB,IAAM5F,EAAUC,cACV/D,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KACrC,OACI,oCACKA,EAAMzC,QAAQD,gBAAkB,oCAC7B,kBAACqM,GAAD,MACA,yBAAKzF,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aAGf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OAAO8C,MAAO,CAAEtB,MAAO,UAClC,yBAAKxB,UAAU,eAAeqB,IAAKvF,EAAMzC,QAAQA,QAAQA,QAAQqM,OAAQnE,IAAI,mBAC7E,yBAAKvB,UAAU,aACX,wBAAIA,UAAU,cAAclE,EAAMzC,QAAQA,QAAQA,QAAQgJ,MAC1D,wBAAIrC,UAAU,cAAclE,EAAMzC,QAAQA,QAAQA,QAAQgG,oBAC1D,kBAAC,IAAD,CAAMiE,GAAG,0BAAT,qBAIZ,yBAAKtD,UAAU,YACX,2BAAOA,UAAU,gBACb,+BACI,4BACI,oCACA,4BAAKlE,EAAMzC,QAAQA,QAAQA,QAAQgJ,OAEvC,4BACI,qCACA,4BAAKvG,EAAMzC,QAAQA,QAAQA,QAAQ8K,QAEvC,4BACI,mDACA,4BAAKrI,EAAMzC,QAAQA,QAAQA,QAAQgG,qBAEvC,4BACI,6CACA,4BAAKvD,EAAMzC,QAAQA,QAAQA,QAAQ4K,MAEvC,4BACI,2CACA,4BAAKnI,EAAMzC,QAAQA,QAAQA,QAAQsM,cAEvC,4BACI,4CACA,4BAAK7J,EAAMzC,QAAQA,QAAQA,QAAQuM,cAEvC,4BACI,yCACA,4BAAK9J,EAAMzC,QAAQA,QAAQA,QAAQ0D,YAEvC,4BACI,sCACA,4BAAKjB,EAAMzC,QAAQA,QAAQA,QAAQ6K,OAASpI,EAAMzC,QAAQA,QAAQA,QAAQ6K,OAEtE,OAGR,4BACI,8CACA,4BAAKpI,EAAMzC,QAAQA,QAAQA,QAAQwM,oBAC/B/J,EAAMzC,QAAQA,QAAQA,QAAQwM,oBAAsB,YAQhF,yBAAK7F,UAAU,gBAOpBJ,EAAQG,KAAK,OC8GjB+F,GA9LW,WACtB,IAAMhK,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAHW,EAIOC,mBAAS,IAJhB,oBAIrBrC,EAJqB,KAIV2H,EAJU,OAKJtF,mBAAS,IALL,oBAKrBpC,EALqB,KAKf2H,EALe,OAMGvF,mBAAS,IANZ,oBAMrBnC,EANqB,KAMX2H,EANW,OAOUxF,mBAAS,IAPnB,oBAOrB9B,EAPqB,KAORyI,EAPQ,OAQY3G,mBAAS,IARrB,oBAQrB4G,EARqB,KAQPC,EARO,OASF7G,mBAAS,IATP,oBASrB5D,EATqB,KASdiE,EATc,OAUJL,oBAAS,GAVL,iCAWMA,oBAAS,IAXf,oBAWrBM,EAXqB,KAWVC,EAXU,OAYQP,oBAAS,GAZjB,oBAYrB8G,EAZqB,KAYTC,EAZS,KActBC,EAAoB,SAACjG,GACvB,IACIgF,EADEkB,EAAYL,EAEd7F,EAAEQ,OAAO2F,QAETD,EAAUtG,KAAKI,EAAEQ,OAAO9H,QAGxBsM,EAAQkB,EAAUE,QAAQpG,EAAEQ,OAAO9H,OACnCwN,EAAUG,OAAOrB,EAAM,IAE3Bc,EAAgBI,IAGpBvG,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QASVsE,qBAAU,YACFhE,EAAMN,OAAUM,EAAMzC,QAAQK,uBAC9BiG,GAAa,KAGlB,CAAC7D,EAAMN,MAAOM,EAAMzC,QAAQK,wBAmB/B,OAPAoG,qBAAU,WACFhE,EAAMzC,QAAQK,uBACdyM,GAAc,KAGpB,CAACrK,EAAMzC,QAAQK,wBAGb,6BACKoC,EAAMzC,QAAQD,gBAAkB,oCAC7B,kBAACqM,GAAD,MACC3J,EAAMzC,QAAQK,uBAAyB,yBAAKsG,UAAU,oCACnD,yBAAKA,UAAU,YACX,0BAAMC,YAAU,EAACC,SArCjB,SAACC,GACjBA,EAAEE,iBACFV,GAAa,GACbzC,EAASJ,EAAcC,EAAWC,EAAMC,MAmCpB,yBAAK+C,UAAU,cACX,2BAAOS,QAAQ,YAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YAEpB8D,GAAG,YACP,0CACA,4BAAQhI,MAAOiD,EAAMzC,QAAQA,QAAQA,QAAQ0D,WAAYjB,EAAMzC,QAAQA,QAAQA,QAAQ0D,YAE1FvB,EAAMuB,WAAc,yBAAK0J,cAAc,oBAAoBjL,EAAMuB,YAEtE,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACpE,CACI,aAAcpF,EAAMwB,OAEpB6D,GAAG,UACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAGH2C,EAAMwB,MAAS,yBAAKyJ,cAAc,oBAAoBjL,EAAMwB,OAGjE,yBAAKgD,UAAU,cACX,2BAAOS,QAAQ,aAAf,YACA,4BAAQC,SAAU,SAACP,GAAD,OAAOyE,EAAWzE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACvE,CACI,aAAcpF,EAAMyB,WAEpB4D,GAAG,aACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEH2C,EAAMyB,UAAa,yBAAKwJ,cAAc,oBAAoBjL,EAAMyB,WAErE,yBAAK6D,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,kBAAhC,cAMzBlE,EAAMzC,QAAQK,uBAAyB,yBAAKsG,UAAU,oCACpD,yBAAKA,UAAU,YACX,0BAAME,SArFA,SAACC,GACvBA,EAAEE,iBACF8F,GAAc,GACdjJ,EZoGsB,SAACwJ,EAAkBpJ,EAAaP,EAAWC,EAC9DC,GACP,8CAAO,WAAMC,GAAN,SAAAC,EAAA,+EAEWd,IAAM,CACZe,OAAQ,OACJT,IAAKA,EAAM,8BACfD,KAAM,CAAEgK,mBAAkBpJ,cAAaP,YAAWC,OAAMC,cAL7D,OAOC0J,MAAM,2CACNzJ,EAAS,CACLpD,KAAM,SACNC,SAAS,IAVd,gDAcA4D,QAAQC,IAAI,8CAA+C,KAAIC,SAd/D,yDAAP,sDYtGa+I,CAAeZ,EAAc1I,EAAaP,EAAWC,EAAMC,IACpEgJ,EAAgB,MAkFI,yBAAKjG,UAAU,cACX,2BAAOS,QAAQ,aAAf,gBACA,4BAAQoG,UAAQ,EAACnG,SAAU,SAACP,GAAD,OAAO4F,EAAe5F,EAAEQ,OAAO9H,QAAQmH,UAAU,eAAea,GAAG,aAC1F,0CAEI/E,EAAMzC,QAAQG,mBAAmBwI,KAAI,SAAA8E,GAAe,OAChD,gCAASA,QAKzB,2BAAO9G,UAAU,SACb,+BACI,4BACI,4BAAI,yBAAKA,UAAU,cACf,2BAAOA,UAAU,mBAAmBlG,KAAK,WAAWjB,MAAM,GAAGgI,GAAG,oBAEpE,wBAAIuE,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,kBAGR,+BAEQtJ,EAAMzC,QAAQI,gBAAgBuI,KAAI,SAACuD,EAAKJ,GAAN,OAC9B,4BACI,4BAAI,yBAAKnF,UAAU,cACf,2BAAOA,UAAU,mBAAmBlG,KAAK,WAAWjB,MAAO0M,EAAIwB,IAAKrG,SAAU0F,EAAmBvF,GAAG,oBAExG,wBAAIqB,IAAKiD,GAAQI,EAAIlG,oBACrB,4BAAKkG,EAAIlD,YAM7B,yBAAKvB,MAAM,8BACP,yBAAKA,MAAM,YAEHoF,GAAc,yBAAKpF,MAAM,8BAA8BC,KAAK,UACxD,0BAAMD,MAAM,WAAZ,kBAKdoF,GAAc,4BAAQpM,KAAK,SAASkG,UAAU,uBAAhC,cAIpBJ,EAAQG,KAAK,OC9FtBqC,GA3FF,WACT,IAAMtG,EAAQoD,aAAY,SAAApD,GAAK,OAAIA,KADpB,EAESsD,mBAAS,IAFlB,oBAERiD,EAFQ,KAEFC,EAFE,KAGfxC,qBAAU,WAEFhE,EAAM9B,MAAMA,MAAMqI,MAClBC,EAAQxG,EAAM9B,MAAMA,MAAMqI,QAE/B,CAACvG,EAAM9B,MAAMA,MAAMqI,OACtB,IAAMzC,EAAUC,cACV3C,EAAWiC,cAKjB,OACI,oCAER,6BACgB,yBAAKkC,IAAI,uIAAuIE,IAAI,OAAOsB,OAAO,KAClK,yBAAK7C,UAAU,cACX,4BAEI,4BACI,uBAAGmB,KAAK,KAAI,mFACZ,uBAAGnB,UAAU,QAAO,4BAApB,uFAGJ,4BACI,uBAAGmB,KAAK,KAAI,kBAAC,KAAD,QAGhB,4BACI,uBAAGA,KAAK,KAAI,kBAAC,KAAD,QAGhB,4BACI,uBAAGA,KAAK,KAAI,kBAAC,KAAD,WAOhC,yBAAKnB,UAAU,mBAEX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,oBAAoBmB,KAAK,IAAvC,SACA,4BAAQnB,UAAU,iBAAiBlG,KAAK,SAASmJ,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMrD,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2Ba,GAAG,aACzC,wBAAIb,UAAU,cACV,wBAAIA,UAAU,mBACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,UAAS,4BAAKjB,EAAKO,kBAEtE,wBAAI5C,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,qBAAoB,8CAEvE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,qBAAoB,8CAEvE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,qBAAoB,8CAEvE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,mBAAkB,4CAErE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,uBAAsB,gDAEzE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,sBAAqB,+CAExE,wBAAItD,UAAU,YACV,4BAAQlG,KAAK,SAASkG,UAAU,OAAM,kBAAC,IAAD,CAAMsD,GAAG,qBAAoB,6CAK/E,6BAEI,4BAAQR,MAAO,CAAEY,UAAW,QAAUC,QAvEhC,WAClBzG,EAASmB,MACTuB,EAAQG,KAAK,MAqE6DjG,KAAK,SAASkG,UAAU,QAAO,4CCmKlGgH,GApPS,WACpB,IAAMlL,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cACXS,EAAUC,cAHU,EAIFT,mBAAS,IAJP,oBAInBiD,EAJmB,KAIbC,EAJa,OAKAlD,mBAAS,IALT,oBAKnB+E,EALmB,KAKZ8C,EALY,OAMS7H,mBAAS,IANlB,oBAMnBrC,EANmB,KAMR2H,EANQ,OAOFtF,mBAAS,IAPP,oBAOnBpC,EAPmB,KAOb2H,EAPa,OAQKvF,mBAAS,IARd,oBAQnBnC,EARmB,KAQT2H,EARS,OASJxF,mBAAS,IATL,oBASnB6E,EATmB,KASdiD,EATc,OAUE9H,mBAAS,IAVX,oBAUnB8E,EAVmB,KAUXiD,EAVW,OAWsB/H,mBAAS,IAX/B,oBAWnBiF,EAXmB,KAWE+C,EAXF,OAYUhI,mBAAS,IAZnB,oBAYnBmF,EAZmB,KAYP8C,EAZO,OAa2BjI,mBAAS,IAbpC,oBAanBoF,EAbmB,KAaC8C,EAbD,OAcUlI,mBAAS,IAdnB,qBAcnBkF,GAdmB,MAcPiD,GAdO,SAeAnI,mBAAS,IAfT,sBAenB5D,GAfmB,MAeZiE,GAfY,SAgBQL,oBAAS,GAhBjB,sBAgBnBM,GAhBmB,MAgBRC,GAhBQ,MAmB1BG,qBAAU,WACFhE,EAAMN,OACNiE,GAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QA6DV,OAXAsE,qBAAU,WACFhE,EAAM9B,MAAME,qBACZuF,GAAS,MAEd,CAAC3D,EAAM9B,MAAME,sBAEhB4F,qBAAU,YACFhE,EAAMN,OAASM,EAAM9B,MAAME,sBAC3ByF,IAAa,KAElB,CAAC7D,EAAMN,MAAOM,EAAM9B,MAAME,sBAEzB,6BACK4B,EAAM9B,MAAMZ,gBAAkB,oCAAE,kBAACoO,GAAD,MAC7B,yBAAKxH,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OACX,0BAAMC,YAAU,EAACC,SAlErB,SAACC,Gb0GM,IAACsH,EazGxBtH,EAAEE,iBACFV,IAAa,GAiCbzC,GbuEwBuK,EavEC,CACrBpF,OACA8B,QACAnH,OACAD,YACAwH,aACAD,cACAJ,SACAjH,SAAUA,EAAS2F,cACnBqB,IAAKA,EAAIyD,MAAM,KAAKC,UAAUC,KAAK,KACnCvD,sBACAG,sBb6DR,uCAAO,WAAOtH,GAAP,SAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,wBACXD,KAAM+K,IALX,cAES/K,KAKRQ,EAAShD,GAAoB,IAC7ByM,MAAM,8BARP,gDAWCzJ,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,0DaxC4B,yBAAKsD,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAOS,QAAQ,UAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOmC,EAAQnC,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAC/E,CACI,aAAcpF,GAAM6G,OACpBxB,GAAG,WACVrF,GAAM6G,MAAS,yBAAKrC,UAAU,oBAAoBxE,GAAM6G,OAE7D,yBAAKrC,UAAU,cACX,2BAAOS,QAAQ,WAAf,SACA,2BAAOC,SAAU,SAACP,GAAD,OAAO8G,EAAS9G,EAAEQ,OAAO9H,QAAQiB,KAAK,QAAQkG,UAAWY,KAAW,eACjF,CACI,aAAcpF,GAAM2I,QACpBtD,GAAG,YACVrF,GAAM2I,OAAU,yBAAKnE,UAAU,oBAAoBxE,GAAM2I,QAE9D,yBAAKnE,UAAU,cACX,2BAAOS,QAAQ,gBAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,GAAMuB,YACpB8D,GAAG,gBACP,0CAIA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAGH2C,GAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,GAAMuB,YAElE,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACpE,CACI,aAAcpF,GAAMwB,OACpB6D,GAAG,UACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEH2C,GAAMwB,MAAS,yBAAKgD,UAAU,oBAAoBxE,GAAMwB,OAG7D,yBAAKgD,UAAU,cACX,2BAAOS,QAAQ,aAAf,YACA,2BAAOC,SAAU,SAACP,GAAD,OAAOyE,EAAWzE,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAClF,CACI,aAAcpF,GAAMyB,WACpB4D,GAAG,cACVrF,GAAMyB,UAAa,yBAAK+C,UAAU,oBAAoBxE,GAAMyB,WAEjE,yBAAK6D,MAAM,cACP,2BAAOL,QAAQ,SAAf,OACA,2BAAOC,SAAU,SAACP,GAAD,OAAO+G,EAAO/G,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAC9E,CACI,aAAcpF,GAAMyI,MACpBpD,GAAG,UACVrF,GAAMyI,KAAQ,yBAAKjE,UAAU,oBAAoBxE,GAAMyI,OAGhE,yBAAKjE,UAAU,YAEX,yBAAKA,UAAU,cACX,2BAAOS,QAAQ,YAAf,UAEA,4BAAQC,SAAU,SAACP,GAAD,OAAOgH,EAAUhH,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACtE,CACI,aAAcpF,GAAM0I,SACpBrD,GAAG,YACP,0CACA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEH2C,GAAM0I,QAAW,yBAAKlE,UAAU,oBAAoBxE,GAAM0I,SAE/D,yBAAKlE,UAAU,cACX,2BAAOS,QAAQ,YAAf,kBAGA,2BAAOC,SAAU,SAACP,GAAD,OAAOiH,EAAiBjH,EAAEQ,OAAO9H,QAAQgO,UAAQ,EAAC/M,KAAK,SAAUkG,UAAWY,KAAW,eACpG,CACI,aAAcpF,GAAM6I,sBACpBxD,GAAG,aACVrF,GAAM6I,qBAAwB,yBAAKrE,UAAU,oBAAoBxE,GAAM6I,sBAG5E,yBAAKrE,UAAU,cACX,2BAAOS,QAAQ,YAAf,eAGA,2BAAOC,SAAU,SAACP,GAAD,OAAOkH,EAAclH,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAQkG,UAAWY,KAAW,eACtF,CACI,aAAcpF,GAAM+I,aACpB1D,GAAG,aACVrF,GAAM+I,YAAe,yBAAKvE,UAAU,oBAAoBxE,GAAM+I,aAGnE,yBAAKvE,UAAU,cACX,2BAAOS,QAAQ,cAAf,yBAGA,2BAAOC,SAAU,SAACP,GAAD,OAAOmH,EAAuBnH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAAUkG,UAAWY,KAAW,eACjG,CACI,aAAcpF,GAAMgJ,qBACpB3D,GAAG,eACVrF,GAAMgJ,oBAAuB,yBAAKxE,UAAU,oBAAoBxE,GAAMgJ,qBAE3E,yBAAKxE,UAAU,cACX,2BAAOS,QAAQ,YAAf,sBAGA,2BAAOC,SAAU,SAACP,GAAD,OAAOoH,GAAcpH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAAUkG,UAAWY,KAAW,eACxF,CACI,aAAcpF,GAAM8I,aACpBzD,GAAG,aACVrF,GAAM8I,YAAe,yBAAKtE,UAAU,oBAAoBxE,GAAM8I,eAK3E,yBAAKxD,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,IAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,IAAa,4BAAQ5F,KAAK,SAASkG,UAAU,kBAAhC,oBAIlBJ,EAAQG,KAAK,OC3D3B8H,GAhLS,WACpB,IAAM/L,EAAQoD,aAAY,SAACtF,GAAD,OAAWA,KAC/BsD,EAAWiC,cACXS,EAAUC,cAHU,EAIFT,mBAAS,IAJP,oBAInBiD,EAJmB,KAIbC,EAJa,OAKAlD,mBAAS,IALT,oBAKnB+E,EALmB,KAKZ8C,EALY,OAMS7H,mBAAS,IANlB,oBAMnBrC,EANmB,KAMR2H,EANQ,OAOYtF,mBAAS,IAPrB,oBAOnBuG,EAPmB,KAONmC,EAPM,OAQ4B1I,mBAAS,IARrC,oBAQnB2I,EARmB,KAQEC,EARF,OASJ5I,mBAAS,IATL,oBASnB6E,EATmB,KASdiD,EATc,OAUE9H,mBAAS,IAVX,oBAUnB8E,EAVmB,KAUXiD,EAVW,OAWU/H,mBAAS,IAXnB,oBAWnBkF,EAXmB,KAWPiD,EAXO,OAYAnI,mBAAS,IAZT,oBAYnB5D,EAZmB,KAYZiE,EAZY,OAaQL,oBAAS,GAbjB,oBAanBM,EAbmB,KAaRC,EAbQ,KAgB1BG,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QA8BV,OAdAsE,qBAAU,WACFhE,EAAM9B,MAAMC,qBACZwF,EAAS,MAEd,CAAC3D,EAAM9B,MAAMC,sBAEhB6F,qBAAU,WACFhE,EAAMN,OAASM,EAAM9B,MAAMC,oBAC3B0F,GAAa,GAGbA,GAAa,KAElB,CAAC7D,EAAMN,MAAOM,EAAM9B,MAAMC,sBAGzB,6BACK6B,EAAM9B,MAAMZ,gBAAmB,oCAAE,kBAACoO,GAAD,MAC9B,yBAAKxH,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OACX,0BAAMC,YAAU,EAACC,SApCrB,SAACC,GdyFM,IAAC8H,EcxFxB9H,EAAEE,iBACFV,GAAa,GACbzC,GdsFwB+K,EctFC,CACrB5F,OACA8B,QACAwB,cACAoC,sBACAhL,YACAuH,aACAJ,SACAD,IAAKA,EAAIyD,MAAM,KAAKC,UAAUC,KAAK,Md+E3C,uCAAO,WAAO1K,GAAP,SAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,wBACXD,KAAMuL,IALX,cAESvL,KAKRQ,EAASjD,GAAoB,IAC7B0M,MAAM,8BARP,gDAWCzJ,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,0DcrD4B,yBAAKsD,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAOS,QAAQ,UAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOmC,EAAQnC,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAC/E,CACI,aAAcpF,EAAM6G,OACpBxB,GAAG,WACVrF,EAAM6G,MAAS,yBAAKrC,UAAU,oBAAoBxE,EAAM6G,OAE7D,yBAAKrC,UAAU,cACX,2BAAOS,QAAQ,WAAf,SACA,2BAAOC,SAAU,SAACP,GAAD,OAAO8G,EAAS9G,EAAEQ,OAAO9H,QAAQiB,KAAK,QAAQkG,UAAWY,KAAW,eACjF,CACI,aAAcpF,EAAM2I,QACpBtD,GAAG,YACVrF,EAAM2I,OAAU,yBAAKnE,UAAU,oBAAoBxE,EAAM2I,QAE9D,yBAAKnE,UAAU,cACX,2BAAOS,QAAQ,iBAAf,eACA,4BAAQC,SAAU,SAACP,GAAD,OAAO2H,EAAe3H,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC3E,CACI,aAAcpF,EAAMmK,cACpB9E,GAAG,iBACP,0CACA,4BAAQhI,MAAM,uBAAd,uBACA,4BAAQA,MAAM,oBAAd,qBAEH2C,EAAMmK,aAAgB,yBAAK3F,UAAU,oBAAoBxE,EAAMmK,cAEpE,yBAAK3F,UAAU,cACX,2BAAOS,QAAQ,gBAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YACpB8D,GAAG,gBACP,0CAGA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAGH2C,EAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,EAAMuB,aAGtE,yBAAKiD,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAOS,QAAQ,SAAf,OACA,2BAAOC,SAAU,SAACP,GAAD,OAAO+G,EAAO/G,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAC9E,CACI,aAAcpF,EAAMyI,MACpBpD,GAAG,UACVrF,EAAMyI,KAAQ,yBAAKjE,UAAU,oBAAoBxE,EAAMyI,MAE5D,yBAAKjE,UAAU,cACX,2BAAOS,QAAQ,YAAf,UACA,4BAAQC,SAAU,SAACP,GAAD,OAAOgH,EAAUhH,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACtE,CACI,aAAcpF,EAAM0I,SACpBrD,GAAG,YACP,0CACA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,UAEH2C,EAAM0I,QAAW,yBAAKlE,UAAU,oBAAoBxE,EAAM0I,SAE/D,yBAAKlE,UAAU,cACX,2BAAOS,QAAQ,YAAf,kBAGA,2BAAOC,SAAU,SAACP,GAAD,OAAO6H,EAAuB7H,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAWY,KAAW,eAChG,CACI,aAAcpF,EAAMqK,sBACpBhF,GAAG,aACVrF,EAAMqK,qBAAwB,yBAAK7F,UAAU,oBAAoBxE,EAAMqK,sBAK5E,yBAAK7F,UAAU,cACX,2BAAOS,QAAQ,YAAf,sBAEA,2BAAOC,SAAU,SAACP,GAAD,OAAOoH,EAAcpH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAWY,KAAW,eACvF,CACI,aAAcpF,EAAM8I,aACpBzD,GAAG,aACVrF,EAAM8I,YAAe,yBAAKtE,UAAU,oBAAoBxE,EAAM8I,eAI3E,yBAAKxD,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,gBAAhC,oBAIjBJ,EAAQG,KAAK,OCtC5BmI,GAlIS,WACpB,IAAMpM,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cACXS,EAAUC,cAHU,EAIYT,mBAAS,IAJrB,oBAInB+I,EAJmB,KAINC,EAJM,OAKYhJ,mBAAS,IALrB,oBAKnB9B,EALmB,KAKNyI,EALM,OAMgB3G,mBAAS,IANzB,oBAMnBiJ,EANmB,KAMJC,EANI,OAOSlJ,mBAAS,IAPlB,oBAOnBrC,EAPmB,KAOR2H,EAPQ,OAQFtF,mBAAS,IARP,oBAQnBpC,EARmB,KAQb2H,EARa,OASAvF,mBAAS,IATT,oBASnB5D,EATmB,KASZiE,EATY,OAUQL,oBAAS,GAVjB,oBAUnBM,EAVmB,KAURC,EAVQ,KAa1BG,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QAyBV,OAZAsE,qBAAU,WACFhE,EAAM9B,MAAMI,qBACZqF,EAAS,MAEd,CAAC3D,EAAM9B,MAAMI,sBAEhB0F,qBAAU,YACFhE,EAAMN,OAASM,EAAM9B,MAAMI,sBAC3BuF,GAAa,KAElB,CAAC7D,EAAMN,MAAOM,EAAM9B,MAAMI,sBAGzB,6BACK0B,EAAM9B,MAAMZ,gBAAkB,wCAAG,kBAACoO,GAAD,MAC9B,yBAAKxH,UAAU,kBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,2CACX,0BAAMC,YAAU,EAACC,SA/BzB,SAACC,GfqIM,IAACoI,EepIxBpI,EAAEE,iBACFV,GAAa,GACbzC,GfkIwBqL,EelIC,CACrBjL,cACA6K,cACAE,gBACAtL,YACAC,Qf8HR,uCAAO,WAAOE,GAAP,SAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,wBACXD,KAAM6L,IALX,cAES7L,KAKRQ,EAAS9C,GAAoB,IAC7BuM,MAAM,8BARP,gDAWCzJ,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,0DetGgC,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,WAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOiI,EAAejI,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eACtF,CACI,aAAcpF,EAAM2M,cACpBtH,GAAG,YACVrF,EAAM2M,aAAgB,yBAAKnI,UAAU,oBAAoBxE,EAAM2M,cAEpE,yBAAKnI,UAAU,cACX,2BAAOS,QAAQ,WAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAO4F,EAAe5F,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eACtF,CACI,aAAcpF,EAAM8B,cACpBuD,GAAG,YACVrF,EAAM8B,aAAgB,yBAAK0C,UAAU,oBAAoBxE,EAAM8B,cAEpE,yBAAK0C,UAAU,cACX,2BAAOS,QAAQ,iBAAf,kBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOmI,EAAiBnI,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAWY,KAAW,eAC1F,CACI,aAAcpF,EAAM6M,gBACpBxH,GAAG,kBACVrF,EAAM6M,eAAkB,yBAAKrI,UAAU,oBAAoBxE,EAAM6M,gBAEtE,yBAAKrI,UAAU,cACX,2BAAOS,QAAQ,gBAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YACpB8D,GAAG,gBACP,0CAGA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAGH2C,EAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,EAAMuB,YAElE,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACpE,CACI,aAAcpF,EAAMwB,OAEpB6D,GAAG,UACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAGH2C,EAAMwB,MAAS,yBAAKgD,UAAU,oBAAoBxE,EAAMwB,OAE7D,yBAAK8D,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,kBAAhC,qBAOtBJ,EAAQG,KAAK,O,kDChD3BqC,GA5EF,WACT,IAAMtG,EAAQoD,aAAY,SAAApD,GAAK,OAAIA,KAC7B8D,EAAUC,cACV3C,EAAWiC,cAGjBW,qBAAU,WACR5C,EfoTF,uCAAO,WAAOA,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAM,iCAJhB,gBAESD,EAFT,EAESA,KAIRQ,EAAS2B,GAAsBnC,EAAKW,SANrC,gDASCM,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,yDAAP,yDenTE,IAEF,IAAM2K,EAAQ,GACd,GAAI1M,EAAMrB,QAAQS,WACd,IAAK,IAAIuN,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQS,WAAWjC,OAAQwP,IACjDD,EAAMzI,KAAK,CAAE,QAAWjE,EAAMrB,QAAQS,WAAWuN,GAAGN,YAAa,WAAcrM,EAAMrB,QAAQS,WAAWuN,GAAGvN,aAOnH,OAHAyC,QAAQC,IAAI9B,EAAMrB,QAAQS,WAAW,IACrCyC,QAAQC,IAAI4K,GAGR,6BACK1M,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,2BAAOA,UAAU,gBACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,gBAGR,+BAEQtJ,EAAMrB,QAAQS,WAAW8G,KAAI,SAACkD,EAAKC,GAAN,OACzB,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI5H,aACT,4BAAK4H,EAAIiD,aACT,4BAAKjD,EAAIwD,UACT,4BAAKxD,EAAIyD,iBACT,4BAAKzD,EAAI0D,aACT,4BAAK1D,EAAI2D,wBACT,4BAAK3D,EAAIhK,WAAT,YAQxB,kBAAC4N,GAAA,EAAD,CAAUtH,MAAO,IAAKuH,OAAQ,IAAKrM,KAAM8L,GACrC,kBAACQ,GAAA,EAAD,CAAKC,QAAQ,aAAaC,KAAK,YAC/B,kBAACC,GAAA,EAAD,CAAeC,OAAO,SACtB,kBAACC,GAAA,EAAD,CAAOJ,QAAQ,YACf,kBAACK,GAAA,EAAD,UAKT1J,EAAQG,KAAK,OC6GjBwJ,I,OA7KiB,WAC5B,IAAMzN,EAAQoD,aAAY,SAACtF,GAAD,OAAWA,KAC/BsD,EAAWiC,cAFiB,EAGQC,mBAAS,IAHjB,oBAG3BoK,EAH2B,KAGZC,EAHY,OAIYrK,mBAAS,IAJrB,oBAI3BsK,EAJ2B,KAIVC,EAJU,OAKQvK,mBAAS,IALjB,oBAK3BwK,EAL2B,KAKZC,EALY,OAMYzK,mBAAS,IANrB,oBAM3B0K,EAN2B,KAMVC,EANU,OAON3K,mBAAS,IAPH,oBAO3B4K,EAP2B,KAOnB1O,EAPmB,OAQM8D,mBAAS,IARf,oBAQ3B6K,EAR2B,KAQb5O,EARa,OASc+D,oBAAS,GATvB,oBAS3B8K,EAT2B,KASTC,EATS,OAUc/K,oBAAS,GAVvB,oBAU3BgL,EAV2B,KAUTC,EAVS,KAa5BzK,EAAUC,cAEhBC,qBAAU,WACFhE,EAAMzC,QAAQD,iBACdwG,EAAQG,KAAK,cAElB,CAACjE,EAAMzC,QAAQD,kBAElB0G,qBAAU,WACFhE,EAAMN,OACNF,EAAUQ,EAAMN,SAErB,CAACM,EAAMN,QACVsE,qBAAU,WACFhE,EAAMrB,QAAQrB,iBACdwG,EAAQG,KAAK,WAElB,CAACjE,EAAMrB,QAAQrB,kBAElB0G,qBAAU,WACFhE,EAAMJ,aACNL,EAAgBS,EAAMJ,eAE3B,CAACI,EAAMJ,cAeVoE,qBAAU,WACFhE,EAAMN,OAASM,EAAMzC,QAAQD,gBAC7B+Q,GAAoB,GAGpBA,GAAoB,KAEzB,CAACrO,EAAMN,MAAOM,EAAMzC,QAAQD,kBAqB/B,OAXA0G,qBAAU,WACFhE,EAAMJ,aACNI,EAAMrB,QAAQrB,gBACdiR,GAAoB,KAMzB,CAACvO,EAAMJ,YAAaI,EAAMrB,QAAQrB,kBAGjC,yBAAK4G,UAAU,mBACX,yBAAKA,UAAU,MAAMa,GAAG,SACpB,yBAAKb,UAAU,aAEf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,yBAAyB8C,MAAO,CAAEwH,gBAAiB,QAASC,aAAc,SAAUC,QAAS,wBACxG,6BACI,wBAAIxK,UAAU,gBAAd,WACA,0BAAMC,YAAU,EAACC,SA9ClB,SAACC,GAExB,IlB5BqB8H,EkB2BrB9H,EAAEE,iBAGF8J,GAAoB,GACpBjN,GlB/BqB+K,EkB+BC,CAAE5I,mBAAoBmK,EAAejK,SAAUmK,GlB9BzE,uCAAO,WAAOxM,GAAP,qBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,qBACXD,KAAMuL,IALX,gBAESvL,EAFT,EAESA,KAKAN,EAAUM,EAAVN,MAER2B,aAAauC,QAAQ,kBAAmBlE,GAExCD,EAAaC,GAEPmE,EAAUC,IAAWpE,GAE3Bc,EAAST,EAAW8D,IAfrB,kDAkBCrD,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OApB3B,0DAAP,0DkBwEgC,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,YAAf,uBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOsJ,EAAiBtJ,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOjB,MAAO2Q,EAAexJ,UAAWY,KAAW,eAAgB,CAC9H,aAAcoJ,EAAO3K,qBAErBwB,GAAG,aACNmJ,EAAO3K,oBACJ,yBAAKW,UAAU,oBAAoBgK,EAAO3K,qBAGlD,yBAAKW,UAAU,cACX,2BAAOS,QAAQ,iBAAf,YACA,2BAAOC,SAAU,SAACP,GAAD,OAAOwJ,EAAmBxJ,EAAEQ,OAAO9H,QAAQA,MAAO6Q,EAAiB1J,UAAWY,KAAW,eAAgB,CACtH,aAAcoJ,EAAOzK,WAErBzF,KAAK,WAAW+G,GAAG,kBACtBmJ,EAAOzK,UACJ,yBAAKS,UAAU,oBAAoBgK,EAAOzK,WAGlD,yBAAKuB,MAAM,8BACP,yBAAKA,MAAM,YAEHoJ,GAAoB,yBAAKpJ,MAAM,8BAA8BC,KAAK,UAC9D,0BAAMD,MAAM,WAAZ,kBAMdoJ,GAAoB,4BAAQpQ,KAAK,SAASkG,UAAU,0BAAhC,UAE1B,uBAAGA,UAAU,qBAAoB,kBAAC,IAAD,CAAMA,UAAU,cAAcsD,GAAG,2BAAjC,uBAI7C,yBAAKtD,UAAU,WACX,yBAAKA,UAAU,yBAAyB8C,MAAO,CAAEwH,gBAAiB,QAASC,aAAc,SAAUC,QAAS,wBACxG,6BACI,wBAAIxK,UAAU,eAAd,WACA,0BAAMC,YAAU,EAACC,SAtElB,SAACC,GAExB,IhBcqBsH,EgBfrBtH,EAAEE,iBAGFgK,GAAoB,GACpBnN,GhBWqBuK,EgBXC,CAAEpI,mBAAoBuK,EAAerK,SAAUuK,GhBYzE,uCAAO,WAAO5M,GAAP,qBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,GAAM,qBACXD,KAAM+K,IALX,gBAES/K,EAFT,EAESA,KAKAN,EAAUM,EAAVN,MAER2B,aAAauC,QAAQ,kBAAmBlE,GAExCD,EAAaC,GAEPmE,EAAUC,IAAWpE,GAE3Bc,EAASoB,GAAWiC,IAfrB,kDAmBCrD,EAAS,CACLpD,KZ3GiB,oBY4GjBC,QAAS,KAAIwD,SAASb,OArB3B,0DAAP,0DgBsDgC,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,aAAf,uBACA,2BAAOC,SAAU,SAACP,GAAD,OAAO0J,EAAiB1J,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOjB,MAAO+Q,EAAe5J,UAAWY,KAAW,eAAgB,CAC9H,aAAcqJ,EAAa5K,qBAE3BwB,GAAG,cACNoJ,EAAa5K,oBACV,yBAAKW,UAAU,oBAAoBiK,EAAa5K,qBAGxD,yBAAKW,UAAU,cACX,2BAAOS,QAAQ,cAAf,YACA,2BAAOC,SAAU,SAACP,GAAD,OAAO4J,EAAmB5J,EAAEQ,OAAO9H,QAAQA,MAAOiR,EAAiB9J,UAAWY,KAAW,eAAgB,CACtH,aAAcqJ,EAAa1K,WAE3BzF,KAAK,WAAW+G,GAAG,eACtBoJ,EAAa1K,UACV,yBAAKS,UAAU,oBAAoBiK,EAAa1K,WAGxD,yBAAKuB,MAAM,8BACP,yBAAKA,MAAM,YAEHsJ,GAAoB,yBAAKtJ,MAAM,8BAA8BC,KAAK,UAC9D,0BAAMD,MAAM,WAAZ,kBAKdsJ,GAAoB,4BAAQtQ,KAAK,SAASkG,UAAU,2BAAhC,UAG1B,uBAAGA,UAAU,eAAc,kBAAC,IAAD,CAAMA,UAAU,cAAcsD,GAAG,2BAAjC,4BCvG5CmH,GA9De,WAAO,IAAD,IAC1B3O,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAHe,EAIMC,mBAAS,IAJf,oBAIzBsL,EAJyB,KAIZC,EAJY,OAKMvL,mBAAS,IALf,oBAKzBwL,EALyB,KAKZC,EALY,OAMoBzL,mBAAS,IAN7B,oBAMzB0L,EANyB,KAMLC,EANK,OAON3L,mBAAS,IAPH,oBAOzB5D,EAPyB,KAOlBiE,EAPkB,KAShCK,qBAAU,WACFhE,EAAMJ,cACN+D,EAAS3D,EAAMJ,aACfiC,QAAQC,IAAI9B,EAAMJ,gBAEvB,CAACI,EAAMJ,cAKV,OACI,6BACKI,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,iBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,mBACX,0BAAMC,YAAU,EAACC,SAXrB,SAACC,GjB4FY,IAAC6K,EiB3F9B7K,EAAEE,iBACFnD,GjB0F8B8N,EiB1FC,CAAE3L,mBAAoBvD,EAAMrB,QAAQA,QAAQA,QAAQ4E,mBAAoBqL,cAAaE,cAAaE,sBjB2FrI,uCAAO,WAAO5N,GAAP,SAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,GAAM,8BACXD,KAAMsO,IALX,cAEStO,KAKRiK,MAAM,iCAPP,gDAUCzJ,EAAS,CACLpD,KZ/HiB,oBYgIjBC,QAAS,KAAIwD,SAASb,OAZ3B,yDAAP,0DiBjF4B,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,WAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOwK,EAAexK,EAAEQ,OAAO9H,QAAQiB,KAAK,WAAWjB,MAAO6R,EAAa1K,UAAWY,KAAW,eAC9G,CACI,aAAcpF,EAAMkP,cAEpB7J,GAAG,YACVrF,EAAMkP,aAAgB,yBAAK1K,UAAU,oBAAoBxE,EAAMkP,cAEpE,yBAAK1K,UAAU,cACX,2BAAOS,QAAQ,cAAf,gBACA,8BAAOC,SAAU,SAACP,GAAD,OAAO0K,EAAe1K,EAAEQ,OAAO9H,QAAQA,MAAO+R,EAAa5K,UAAWY,KAAW,eAAgB,CAC9G,aAAcpF,EAAMoP,eADxB,sBAEWA,GAFX,qBAE6B,YAF7B,mBAE2C,cAF3C,IAGCpP,EAAMoP,aAAgB,yBAAK5K,UAAU,oBAAoBxE,EAAMoP,cAEpE,yBAAK5K,UAAU,cACX,2BAAOS,QAAQ,eAAf,wBACA,8BAAOC,SAAU,SAACP,GAAD,OAAO4K,EAAsB5K,EAAEQ,OAAO9H,QAAQA,MAAOiS,EAAoB9K,UAAWY,KAAW,eAAgB,CAC5H,aAAcpF,EAAMsP,sBADxB,sBAEWA,GAFX,qBAEoC,YAFpC,mBAEkD,eAFlD,IAGCtP,EAAMsP,oBAAuB,yBAAK9K,UAAU,oBAAoBxE,EAAMsP,qBAE3E,4BAAQhR,KAAK,SAASgH,MAAM,2BAA5B,wBAIHlB,EAAQG,KAAK,OCW3BkL,GAjEe,WAAO,IAAD,IAC1BnP,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAHe,EAIMC,mBAAS,IAJf,oBAIzBsL,EAJyB,KAIZC,EAJY,OAKMvL,mBAAS,IALf,oBAKzBwL,EALyB,KAKZC,EALY,OAMoBzL,mBAAS,IAN7B,oBAMzB0L,EANyB,KAMLC,EANK,OAOE3L,oBAAS,GAPX,oBAOdO,GAPc,aAQNP,mBAAS,IARH,oBAQzB5D,EARyB,KAQlBiE,EARkB,KAUhCK,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QASV,OAHAsE,qBAAU,cAEP,CAAChE,EAAMzC,UAEN,6BACKyC,EAAMzC,QAAQD,gBAAkB,oCAC7B,kBAACqM,GAAD,MACA,yBAAKzF,UAAU,iBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,mBACX,0BAAMC,YAAU,EAACC,SAfrB,SAACC,GpB+BY,IAAC6K,EoB9B9B7K,EAAEE,iBACFV,GAAa,GACbzC,GpB4B8B8N,EoB5BC,CAAE3L,mBAAoBvD,EAAMzC,QAAQA,QAAQA,QAAQgG,mBAAoBqL,cAAaE,cAAaE,sBpB6BrI,uCAAO,WAAO5N,GAAP,SAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,8BACXD,KAAMsO,IALX,cAEStO,KAKRiK,MAAM,iCAPP,gDAUCzJ,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAZ3B,yDAAP,0DoBhB4B,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,WAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOwK,EAAexK,EAAEQ,OAAO9H,QAAQiB,KAAK,WAAWjB,MAAO6R,EAAa1K,UAAWY,KAAW,eAC9G,CACI,aAAcpF,EAAMkP,cAEpB7J,GAAG,YACVrF,EAAMkP,aAAgB,yBAAKjE,cAAc,oBAAoBjL,EAAMkP,cAExE,yBAAK1K,UAAU,cACX,2BAAOS,QAAQ,cAAf,gBACA,8BAAOC,SAAU,SAACP,GAAD,OAAO0K,EAAe1K,EAAEQ,OAAO9H,QAAQA,MAAO+R,EAAa5K,UAAWY,KAAW,eAAgB,CAC9G,aAAcpF,EAAMoP,eADxB,sBAEWA,GAFX,qBAE6B,YAF7B,mBAE2C,cAF3C,IAGCpP,EAAMoP,aAAgB,yBAAKnE,cAAc,oBAAoBjL,EAAMoP,cAExE,yBAAK5K,UAAU,cACX,2BAAOS,QAAQ,eAAf,wBACA,8BAAOC,SAAU,SAACP,GAAD,OAAO4K,EAAsB5K,EAAEQ,OAAO9H,QAAQA,MAAOiS,EAAoB9K,UAAWY,KAAW,eAAgB,CAC5H,aAAcpF,EAAMsP,sBADxB,sBAEWA,GAFX,qBAEoC,YAFpC,mBAEkD,eAFlD,IAGCtP,EAAMsP,oBAAuB,yBAAKrE,cAAc,oBAAoBjL,EAAMsP,qBAE/E,4BAAQhR,KAAK,SAASkG,UAAU,2BAAhC,wBAKzBJ,EAAQG,KAAK,OC8CLmL,gBA3GQ,SAACjK,GACpB,IAAMnF,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cACXS,EAAUC,cAHc,EAINT,mBAAS,IAJH,oBAIvB+L,EAJuB,KAIjBC,EAJiB,OAKJhM,mBAAS,IALL,oBAKvB+E,EALuB,KAKhB8C,EALgB,OAMR7H,mBAAS,IAND,oBAMvBiM,EANuB,KAMlBC,EANkB,OAOQlM,mBAAS,IAPjB,oBAOvBwL,EAPuB,KAOVC,EAPU,OAQsBzL,mBAAS,IAR/B,oBAQvB0L,EARuB,KAQHC,EARG,OASF3L,mBAAS,IATP,oBASvB4K,EATuB,KASf1O,EATe,OAUF8D,oBAAS,GAVP,oBAUvBmM,EAVuB,KAUfC,EAVe,KAY9B1L,qBAAU,WACNsL,EAAQnK,EAAMwK,MAAMC,OAAOP,QAC5B,CAACA,IAEJrL,qBAAU,WACFhE,EAAMN,OACNF,EAAUQ,EAAMN,SAErB,CAACM,EAAMN,QAEVsE,qBAAU,WACFhE,EAAMrB,QAAQnB,MACdkS,GAAU,KAEf,CAAC1P,EAAMrB,QAAQnB,OAyBlB,OACI,yBAAK0G,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACTuL,EAcI,oCACF,0BAAMtL,YAAU,EAACC,SAhCZ,SAACC,GACtBA,EAAEE,iBACW,YAAT8K,EACAjO,EnB8IoB,SAACyO,EAAoB/L,GACjD,8CAAO,WAAO1C,GAAP,eAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,GAAM,uBACXD,KAAKiP,IALV,kBAESjP,KAKRiK,MAAM,uDACN/G,EAAQG,KAAK,KARd,gDAWC7C,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,sDmB/IiBkP,CAAiB,CAAEzH,QAAOkH,MAAKT,cAAaE,sBAAsBlL,IAE7D,YAATuL,GACLjO,ErB6CoB,SAACyO,EAAoB/L,GACjD,8CAAO,WAAO1C,GAAP,eAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,uBACXD,KAAMiP,IALX,kBAESjP,KAKRiK,MAAM,uDACN/G,EAAQG,KAAK,KARd,gDAWC7C,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,sDqB9CiBmP,CAAiB,CAAE1H,QAAOkH,MAAKT,cAAaE,sBAAsBlL,MA2B3D,yBAAKI,UAAU,cACX,2BAAOS,QAAQ,sBAAf,OACA,2BAAOC,SAAU,SAACP,GAAD,OAAOmL,EAAOnL,EAAEQ,OAAO9H,QAAQA,MAAOwS,EAAKvR,KAAK,SAASkG,UAAWY,KAAW,eAAgB,CAC5G,aAAcoJ,EAAOqB,MACrBxK,GAAG,uBACNmJ,EAAOqB,KACJ,yBAAKrL,UAAU,oBAAoBgK,EAAOqB,MAGlD,yBAAKrL,UAAU,cACX,2BAAOS,QAAQ,sBAAf,gBACA,2BAAOC,SAAU,SAACP,GAAD,OAAO0K,EAAe1K,EAAEQ,OAAO9H,QAAQA,MAAO+R,EAAa9Q,KAAK,WAAWkG,UAAWY,KAAW,eAAgB,CAC9H,aAAcoJ,EAAOY,cACrB/J,GAAG,uBACNmJ,EAAOY,aACJ,yBAAK5K,UAAU,oBAAoBgK,EAAOY,cAGlD,yBAAK5K,UAAU,cACX,2BAAOS,QAAQ,sBAAf,wBACA,2BAAOC,SAAU,SAACP,GAAD,OAAO4K,EAAsB5K,EAAEQ,OAAO9H,QAAQA,MAAOiS,EAAoBhR,KAAK,WAAWkG,UAAWY,KAAW,eAAgB,CAC5I,aAAcoJ,EAAOc,qBACrBjK,GAAG,uBACNmJ,EAAOc,oBACJ,yBAAK9K,UAAU,oBAAoBgK,EAAOc,qBAGlD,4BAAQhR,KAAK,SAASkG,UAAU,mBAAhC,YA3CG,oCACP,0BAAMC,YAAU,EAACC,SA5Bd,SAACC,GnBsIC,IAAC2L,EmBrItB3L,EAAEE,iBACW,YAAT8K,EACAjO,GnBmIkB4O,EmBnIK,CAAE3H,SnBoIjC,uCAAO,WAAOjH,GAAP,SAAAC,EAAA,+EAEOd,IAAM,CACRe,OAAQ,OACRT,IAAKA,GAAM,8BACXD,KAAMoP,IALX,OAOCnF,MAAM,mCACNzJ,EAAS,CAACpD,KZhLE,aYwKb,gDAWCoD,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,wDmBlIsB,YAATyO,GACLjO,ErBkCiB,SAAC4O,GAC1B,8CAAO,WAAO5O,GAAP,SAAAC,EAAA,+EAEOd,IAAM,CACRe,OAAQ,OACRT,IAAKA,EAAM,8BACXD,KAAMoP,IALX,OAOCnF,MAAM,mCACNzJ,EAAS,CAAEpD,KVlFC,aU0Eb,gDAWCoD,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,sDqBnCiBqP,CAAc,CAAE5H,aAuBT,yBAAKnE,UAAU,cACX,2BAAOS,QAAQ,uBAAf,SACA,2BAAOC,SAAU,SAACP,GAAD,OAAO8G,EAAS9G,EAAEQ,OAAO9H,QAAQA,MAAOsL,EAAOrK,KAAK,QAAQkG,UAAWY,KAAW,eAAgB,CAC/G,aAAcoJ,EAAO7F,QACrBtD,GAAG,sBAAsBoE,YAAY,+BAA+B+G,mBAAiB,cACzF,2BAAOnL,GAAG,YAAYb,UAAU,wBAAhC,wCACCgK,EAAO7F,OACJ,yBAAKnE,UAAU,oBAAoBgK,EAAO7F,QAGlD,4BAAQrK,KAAK,SAASkG,UAAU,mBAAhC,oB,qCfxD5B,IAwJeiM,GAxJF,SAAChL,GAEV,IAAMnF,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAJG,EAKMC,mBAAS,IALf,oBAKb8M,EALa,KAKNC,EALM,OAMM/M,mBAAS,IANf,oBAMbgN,EANa,KAMNC,EANM,OAOgDjN,mBAAS,IAPzD,oBAObkG,EAPa,KAOegH,EAPf,OAQUlN,mBAAS,IARnB,oBAQbvB,EARa,KAQJ0O,EARI,OASoBnN,mBAAS,IAT7B,oBASboN,EATa,KASCC,EATD,OAUsBrN,mBAAS,IAV/B,oBAUbsN,EAVa,KAUEC,EAVF,KAYdC,EAAW,wBAIjB9M,qBAAU,WACN,IAAI+M,EAAO5L,EAAMwK,MAAMC,OAAOoB,KAC9BjL,GAASkL,KAAGH,GACZ,IAAII,EAAUH,EAAKnF,MAAM,KACzB4E,EAA8BU,EAAQ,IACtCb,EAASU,GA/BjB,SAAcI,EAAOC,EAASC,GAC1B,IAAIN,EAAOI,EAAMC,GACjBD,EAAMC,GAAWD,EAAME,GACvBF,EAAME,GAAWN,EA6BbO,CAAKJ,EAAS,EAAG,GACjB,IAAIK,EAAYL,EAAQ,GAAK,IAAMA,EAAQ,GAC3CX,EAASgB,KACV,CAACT,EAAU3L,EAAMwK,MAAMC,OAAOoB,OAGjChN,qBAAU,WJoLwB,IAACwN,EIzK/B,OAVApQ,GJmL+BoQ,EInLCpB,EJoLpC,uCAAO,WAAOhP,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAG,4BAAwB2Q,KAJrC,gBAES5Q,EAFT,EAESA,KAIRQ,EAASsB,GAAoB9B,EAAKW,SANnC,gDASCM,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,yDAAP,wDInLIX,EJiM+B,SAACoQ,GACpC,8CAAO,WAAOpQ,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAG,4BAAwB2Q,KAJrC,gBAES5Q,EAFT,EAESA,KAIRQ,EAASuB,GAAqB/B,EAAKW,SANpC,gDASCM,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,yDAAP,sDIlMa0P,CAAwBnB,KACjCvK,GAASkL,KAAGH,IACLY,KAAK,YAAa,CACrBtB,QACAE,UAEJvK,GAAO4L,GAAG,eAAe,SAAC/Q,GACtB+P,EAAgB,GAAD,oBAAKD,GAAL,CAAmB9P,QAE/B,WACHmF,GAAO2L,KAAK,cACZ3L,GAAO6L,SAEZ,CAACxB,EAAOE,IAwCX,GATAzO,QAAQC,IAAI9B,EAAMrB,QAAQA,QAAQA,QAAQ4H,MAE1CvC,qBAAU,WACN+B,GAAO4L,GAAG,eAAe,SAAC/Q,GACtBiQ,EAAiB7Q,EAAMrB,QAAQI,aAC/B4R,EAAgB,GAAD,oBAAKD,GAAL,CAAmB9P,UAGvC,CAAC8P,EAAcE,IACd5Q,EAAMrB,QAAQI,YAGd,IAAK,IAAI4N,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQI,YAAY5B,OAAQwP,IAClC,IAAIkF,KAAK7R,EAAMrB,QAAQI,YAAY4N,GAAGmF,WAM9D,OACI,6BACK9R,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAY8C,MAAO,CAAE+K,UAAW,SAC3C,0BAAM7N,UAAU,OAAOE,SAjD3B,SAACC,GAEjB,GAAItC,EAAQ3E,OAAOD,OAAS,EAAG,CAC3B4I,GAAO2L,KAAK,kBAAmB,CAC3BM,OAAQhS,EAAMrB,QAAQA,QAAQA,QAAQ4H,KACtCxE,UACAiP,KAAMZ,IAEVK,EAAW,IACX,IAAIwB,EAAa,CACbT,OAAQpB,EACR1J,WAAY1G,EAAMrB,QAAQA,QAAQA,QAAQ4H,KAC1C2L,SAAUlS,EAAMrB,QAAQA,QAAQA,QAAQsM,IACxClJ,UACAwH,yBAA0BvJ,EAAMrB,QAAQA,QAAQA,QAAQ4E,mBACxDiG,8BAEJpI,GJ4HgB4P,EI5HKZ,EJ4HA+B,EI5HOF,EJ6HpC,sBAAO,sBAAA5Q,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,GAAG,4BAAwBmQ,GAChCpQ,KAAMuR,IALX,cAESvR,KAFT,gDASCiB,QAAQC,IAAI,2BAA2B,KAAIC,SAT5C,gEI1HC8I,MAAM,4BJyHS,IAACmG,EAAKmB,II3FD,yBAAKjO,UAAU,eAEX,8BAAUnH,MAAOgF,EAAS6C,SAAU,SAACP,GAAD,OAAOoM,EAAWpM,EAAEQ,OAAO9H,QAAQoM,YAAY,cAAcnL,KAAK,OAAOkG,UAAU,eAAe8C,MAAO,CAACiG,OAAQ,YAE1J,yBAAKjG,MAAO,CAACoL,UAAU,UACvB,4BAAQpU,KAAK,SAASkG,UAAU,wBAAhC,WAKR,yBAAKA,UAAU,qBAAqB8C,MAAO,CAAEqL,UAAW,SAAUN,UAAW,OAAQ9E,OAAQ,QAASqF,OAAQ,kCAEtGtS,EAAMrB,QAAQI,YAAYmH,KAAI,SAACuD,EAAKJ,GAAN,OAC1B,yBAAKjD,IAAKiD,GAEN,yBAAKrE,MAAM,iBACP,yBAAKA,MAAM,sBACP,yBAAKA,MAAM,eAzEnC,SAACyE,GACjB,IACI8I,EADc,IAAIV,KAAKpI,EAAIqI,WACVU,WACrB,OAAO,oCAAGD,EAAKE,OAAO,EAAGF,EAAKpV,OAAS,KAuEEuV,CAAYjJ,KAKjB,yBAAKzE,MAAM,sBACP,yBAAKA,MAAM,kBACNyE,EAAI/C,YAET,yBAAK1B,MAAM,+BACNyE,EAAI1H,eAQ5B2O,EAAaxK,KAAI,SAACuD,EAAKJ,GAAN,OACd,uBAAGjD,IAAKiD,GAAQI,EAAIuI,OAApB,KAA8BvI,EAAI1H,gBAQ/C+B,EAAQG,KAAK,OgBpEjB0O,GA3Fa,SAACxN,GACzB,IAAMnF,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAHkB,EAKiBC,mBAAS,IAL1B,oBAK5BC,EAL4B,KAKRC,EALQ,KAgBnC,OAPAQ,qBAAU,WACNR,EAAsB2B,EAAMwK,MAAMC,OAAOrM,oBACzCnC,EpBuI2B,SAACmC,GAChC,8CAAO,WAAOnC,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,GAAM,mCACXD,KAAM,CAAE2C,wBALb,gBAES3C,EAFT,EAESA,KAKRQ,EAASqB,GAA0B7B,EAAKW,SAPzC,gDAUCM,QAAQC,IAAI,kDAAmD,KAAIC,SAVpE,yDAAP,sDoBxIa6Q,CAAoBrP,MAE9B,CAACA,IAIA,6BACKvD,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aAGf,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OAAO8C,MAAO,CAAEtB,MAAO,UAClC,yBAAKxB,UAAU,eAAeqB,IAAKvF,EAAMrB,QAAQG,cAAc8K,OAAQnE,IAAI,mBAC3E,yBAAKvB,UAAU,aACX,wBAAIA,UAAU,cAAclE,EAAMrB,QAAQG,cAAcyH,MACxD,wBAAIrC,UAAU,eACd,kBAAC,IAAD,CAAMsD,GAAE,gBAAWxH,EAAMrB,QAAQG,cAAcyE,mBAAvC,YAA6DvD,EAAMrB,QAAQA,QAAQA,QAAQ4E,qBAAnG,WAIZ,yBAAKW,UAAU,YACX,2BAAOA,UAAU,gBACb,+BACI,4BACI,oCACA,4BAAKlE,EAAMrB,QAAQG,cAAcyH,OAErC,4BACI,qCACA,4BAAKvG,EAAMrB,QAAQG,cAAcuJ,QAErC,4BACI,mDACA,4BAAKrI,EAAMrB,QAAQG,cAAcyE,qBAErC,4BACI,oCACA,4BAAKvD,EAAMrB,QAAQG,cAAcoC,OAErC,4BACI,yCACA,4BAAKlB,EAAMrB,QAAQG,cAAcmC,YAErC,4BACI,wCACA,4BAAKjB,EAAMrB,QAAQG,cAAcqC,WAErC,4BACI,qCACA,4BAAKnB,EAAMrB,QAAQG,cAAcwJ,aAQzD,yBAAKpE,UAAU,gBAWpBJ,EAAQG,KAAK,OCQjBmL,gBA1Fc,WACzB,IAAMpP,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cACXS,EAAUC,cAHe,EAIHT,mBAAS,IAJN,oBAIxB8E,EAJwB,KAIhBiD,EAJgB,OAKiB/H,mBAAS,IAL1B,oBAKxBiF,EALwB,KAKH+C,EALG,OAMKhI,mBAAS,IANd,oBAMxBmF,EANwB,KAMZ8C,EANY,OAOsBjI,mBAAS,IAP/B,oBAOxBoF,EAPwB,KAOJ8C,EAPI,OAQKlI,mBAAS,IARd,oBAQxBkF,EARwB,KAQZiD,EARY,OASLnI,mBAAS,IATJ,oBASjBK,GATiB,aAUHL,mBAAS,IAVN,oBAUxBsG,EAVwB,KAUhBiJ,EAVgB,OAWGvP,oBAAS,GAXZ,iCAYLA,oBAAS,IAZJ,oBAYjBwP,GAZiB,WAoB/B9O,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QAEV,IAAMwJ,EAAW,uCAAG,WAAM7E,GAAN,eAAAhD,EAAA,sDAChBgD,EAAEE,kBACIwO,EAAW,IAAIC,UACZC,OAAO,SAAU7K,GAC1B2K,EAASE,OAAO,sBAAuB1K,GACvCwK,EAASE,OAAO,aAAcxK,GAC9BsK,EAASE,OAAO,qBAAsBvK,GACtCqK,EAASE,OAAO,aAAczK,GAC9BuK,EAASE,OAAO,SAAUrJ,GAC1BmJ,EAASE,OAAO,QAASjT,EAAMrB,QAAQA,QAAQA,QAAQ0J,OACvDjH,EAAS6B,GAAc8P,IACvBD,GAAS,GACTjI,MAAM,qCACNzJ,EAAS8B,MACTY,EAAQG,KAAK,KAdG,4CAAH,sDAgBb,OACI,6BACKjE,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,0BAAME,SAAU8E,GACZ,yBAAKhF,UAAU,cACX,2BAAOS,QAAQ,WAAf,mBACA,2BAAOoG,UAAQ,EAAC7G,UAAU,eAAelG,KAAK,OAAOkV,OAAO,kBAAkBnO,GAAG,UAAUH,SAvC1G,SAACP,GAClB,GAAIA,EAAEQ,OAAOsO,OAAS9O,EAAEQ,OAAOsO,MAAM,GAAI,CACrC,IAAIC,EAAM/O,EAAEQ,OAAOsO,MAAM,GACzBN,EAAUO,QAsCc,yBAAKlP,UAAU,cACX,2BAAOS,QAAQ,YAAf,UACA,4BAAQC,SAAU,SAACP,GAAD,OAAOgH,EAAUhH,EAAEQ,OAAO9H,QAAQmH,UAAU,eAAea,GAAG,YAC5E,0CACA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,WAGR,yBAAKmH,UAAU,cACX,2BAAOS,QAAQ,YAAf,kBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOiH,EAAiBjH,EAAEQ,OAAO9H,QAAQgO,UAAQ,EAAC/M,KAAK,SAASkG,UAAU,eAAea,GAAG,cAEjH,yBAAKb,UAAU,cACX,2BAAOS,QAAQ,YAAf,eACA,2BAAOC,SAAU,SAACP,GAAD,OAAOkH,EAAclH,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAU,eAAea,GAAG,cAEnG,yBAAKb,UAAU,cACX,2BAAOS,QAAQ,cAAf,yBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOmH,EAAuBnH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAU,eAAea,GAAG,gBAE9G,yBAAKb,UAAU,cACX,2BAAOS,QAAQ,YAAf,sBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOoH,EAAcpH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAU,eAAea,GAAG,cAErG,4BAAQ/G,KAAK,SAASkG,UAAU,mBAAhC,eAKbJ,EAAQG,KAAK,SCzCrBoP,GA9CY,WACvB,IAAMrT,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAIjB,OAHAW,qBAAU,WACN5C,EtBqSJ,uCAAO,WAAOA,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAM,gCAJhB,gBAESD,EAFT,EAESA,KAIRQ,EAAS0B,GAAqBlC,EAAKW,SANpC,gDASCM,QAAQC,IAAI,2BAA4B,KAAIC,SAT7C,yDAAP,yDsBpSG,IAEC,oCACK/B,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MACA,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,2BAAOA,UAAU,gBACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,oBAGR,+BAEQtJ,EAAMrB,QAAQQ,YAAY+G,KAAI,SAACkD,EAAKC,GAAN,OAC1B,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI5H,aACT,4BAAK4H,EAAIiD,aACT,4BAAKjD,EAAIlI,MACT,4BAAKkI,EAAImD,yBAQ5BzI,EAAQG,KAAK,OC+K3BqP,GApNY,WACvB,IAAMtT,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/B8D,EAAUC,cACV3C,EAAWiC,cAHY,EAIMC,mBAAS,IAJf,oBAItBrC,EAJsB,KAIX2H,EAJW,OAKLtF,mBAAS,IALJ,oBAKtBpC,EALsB,KAKhB2H,EALgB,OAMHvF,mBAAS,IANN,oBAMtBiQ,EANsB,KAMfC,EANe,OAOElQ,mBAAS,IAPX,oBAOtBnC,EAPsB,KAOZ2H,EAPY,OAQSxF,mBAAS,IARlB,oBAQtB9B,EARsB,KAQTyI,EARS,OASO3G,qBATP,oBAStBmQ,EATsB,KASVC,EATU,OAULpQ,mBAAS,IAVJ,oBAUtBqQ,EAVsB,KAUhBC,EAVgB,OAWHtQ,mBAAS,IAXN,oBAWtB5D,EAXsB,KAWfiE,EAXe,OAYSL,mBAAS,IAZlB,oBAYtB1D,EAZsB,KAYTiU,EAZS,KA8B7B7P,qBAAU,WACFhE,EAAMN,OACNiE,EAAS3D,EAAMN,SAEpB,CAACM,EAAMN,QAEVsE,qBAAU,WACFhE,EAAMJ,aACNiU,EAAe7T,EAAMJ,eAE1B,CAACI,EAAMJ,cAiBV,OACI,6BACKI,EAAMzC,QAAQD,gBAAkB,oCAC7B,kBAACqM,GAAD,MACC3J,EAAMzC,QAAQK,uBAAyB,yBAAKsG,UAAU,oCACnD,yBAAKA,UAAU,YACX,0BAAMC,YAAU,EAACC,SArBjB,SAACC,GACjBA,EAAEE,iBAEHnD,EAASJ,EAAcC,EAAWC,EAAOC,MAmBpB,yBAAK+C,UAAU,cACX,2BAAOS,QAAQ,YAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YAEpB8D,GAAG,YACP,0CACA,4BAAQhI,MAAOiD,EAAMzC,QAAQA,QAAQA,QAAQ0D,WAAYjB,EAAMzC,QAAQA,QAAQA,QAAQ0D,YAE1FvB,EAAMuB,WAAc,yBAAK0J,cAAc,oBAAoBjL,EAAMuB,YAEtE,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACpE,CACI,aAAcpF,EAAMwB,OAEpB6D,GAAG,UACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAGH2C,EAAMwB,MAAS,yBAAKyJ,cAAc,oBAAoBjL,EAAMwB,OAqBjE,yBAAKgD,UAAU,cACX,2BAAOS,QAAQ,aAAf,YACA,4BAAQC,SAAU,SAACP,GAAD,OAAOyE,EAAWzE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACvE,CACI,aAAcpF,EAAMyB,WAEpB4D,GAAG,aACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEH2C,EAAMyB,UAAa,yBAAKwJ,cAAc,oBAAoBjL,EAAMyB,WAErE,4BAAQnD,KAAK,SAASkG,UAAU,mBAAhC,cAMVlE,EAAMzC,QAAQK,uBAAyB,yBAAKsG,UAAU,oCACpD,yBAAKA,UAAU,YACX,0BAAME,SArFA,SAACC,GACvBA,EAAEE,iBACFnD,EzBwHmB,SAACI,EAAamS,EAAMF,EAAYF,EACvDtS,EAAWC,EAAMC,GACjB,8CAAO,WAAOC,GAAP,SAAAC,EAAA,+EAEOd,IAAM,CACRe,OAAQ,OACRT,IAAKA,EAAM,2BACXD,KAAM,CACFY,cAAamS,OAAMF,aAAYF,QAAOtS,YAAWC,OAAMC,cANhE,OASC0J,MAAM,8BACNzJ,EAAS,CACLpD,KAAM,SACNC,SAAS,IAZd,gDAiBCmD,EAAS,CACLpD,KVxMiB,oBUyMjBC,QAAS,KAAIwD,SAASb,OAnB3B,yDAAP,sDyB1HakT,CAAYtS,EAAamS,EAAMF,EAAYF,EAAOtS,EAAWE,MAoFlD,yBAAK+C,UAAU,cACX,2BAAOS,QAAQ,aAAf,gBACA,4BAAQC,SAAU,SAACP,GAAD,OAAO4F,EAAe5F,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC3E,CACI,aAAclF,EAAY4B,cAE1BuD,GAAG,aACP,0CAEI/E,EAAMzC,QAAQG,mBAAmBwI,KAAI,SAAA8E,GAAe,OAChD,gCAASA,OAIpBpL,EAAY4B,aAAgB,yBAAKmJ,cAAc,oBAAoB/K,EAAY4B,cAEpF,yBAAK0C,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuP,EAAQvP,EAAEQ,OAAO9H,QAAQA,MAAO4W,EAAMzP,UAAWY,KAAW,eACjF,CACI,aAAclF,EAAY+T,OAE1B5O,GAAG,UACP,0CACA,4BAAQhI,MAAM,cAAd,gBACA,4BAAQA,MAAM,cAAd,gBACA,4BAAQA,MAAM,YAAd,aAEH6C,EAAY+T,MAAS,yBAAKhJ,cAAc,oBAAoB/K,EAAY+T,OAG7E,yBAAKzP,UAAU,cACX,2BAAOS,QAAQ,WAAf,eACA,2BAAO3G,KAAK,SAASkG,UAAWY,KAAW,eACvC,CACI,aAAclF,EAAY6T,aAE1B1O,GAAG,UACPhI,MAAO0W,EAAY7O,SAAU,SAACP,GAAD,OAAOqP,EAAcrP,EAAEQ,OAAO9H,UAC9D6C,EAAY6T,YAAe,yBAAK9I,cAAc,oBAAoB/K,EAAY6T,aAGnF,2BAAOvP,UAAU,SACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,WAGR,+BAEQtJ,EAAMzC,QAAQI,gBAAgBuI,KAAI,SAACuD,EAAKJ,GAAN,OAC9B,wBAAIjD,IAAKiD,GACL,4BAAKI,EAAIlG,oBACT,4BAAKkG,EAAIlD,MACT,4BAAI,yBAAKrC,UAAU,cACf,2BAAOA,UAAU,eAAe6G,UAAQ,EAAC/M,KAAK,SAASjB,MAAO0M,EAAI8J,MAAO3O,SAAU,SAACP,GAAD,OAjLzG,SAACtH,EAAOkO,GAE9B,IAAM8I,EAAQ,aAAOR,GACjBlK,EAAQ0K,EAASC,WAAU,SAAAC,GAAC,OAAIA,EAAEhJ,MAAQA,MAC/B,IAAX5B,EACA0K,EAAS9P,KAAK,CAAEgH,MAAKlO,UAGtBgX,EAAS1K,GAAOtM,MAAQA,EAE3ByW,EAASO,GAuK6HzJ,CAAkBjG,EAAEQ,OAAO9H,MAAO0M,EAAIwB,MAAMlG,GAAG,0BAOjK,4BAAQ/G,KAAK,SAASkG,UAAU,wBAAhC,cAKTJ,EAAQG,KAAK,OCzHjBmL,gBArFc,WACzB,IAAMpP,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cACXS,EAAUC,cAHe,EAIHT,mBAAS,IAJN,oBAIxB8E,EAJwB,KAIhBiD,EAJgB,OAKiB/H,mBAAS,IAL1B,oBAKxByG,EALwB,KAKHuB,EALG,OAMKhI,mBAAS,IANd,oBAMxBkF,EANwB,KAMZiD,EANY,OAOHnI,mBAAS,IAPN,oBAOxBsG,EAPwB,KAOhBiJ,EAPgB,OAQGvP,oBAAS,GARZ,oBAQxBM,EARwB,KAQbC,EARa,KAiBzBqF,EAAW,uCAAG,WAAO7E,GAAP,eAAAhD,EAAA,sDAChBgD,EAAEE,kBACIwO,EAAW,IAAIC,UACZC,OAAO,SAAU7K,GAC1B2K,EAASE,OAAO,sBAAuBlJ,GACvCgJ,EAASE,OAAO,aAAczK,GAC9BuK,EAASE,OAAO,SAAUrJ,GAC1BmJ,EAASE,OAAO,QAASjT,EAAMzC,QAAQA,QAAQA,QAAQ8K,OACvDxE,GAAa,GACbzC,EAASO,EAAcoR,IACvBlI,MAAM,qCACNzJ,EAASY,KACT8B,EAAQG,KAAK,KAZG,4CAAH,sDAoBjB,OALAD,qBAAU,WACFhE,EAAMzC,QAAQE,mBACdoG,GAAa,KAElB,CAAC7D,EAAMzC,QAAQE,oBAEd,6BACKuC,EAAMzC,QAAQD,gBAAkB,oCAC7B,kBAACqM,GAAD,MACA,yBAAKzF,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,0BAAME,SAAU8E,GACZ,yBAAKhF,UAAU,cACX,2BAAOS,QAAQ,WAAf,mBACA,2BAAOoG,UAAQ,EAAC7G,UAAU,eAAelG,KAAK,OAAOkV,OAAO,kBAAkBnO,GAAG,UAAUH,SAtCtG,SAACP,GAClB,GAAIA,EAAEQ,OAAOsO,OAAS9O,EAAEQ,OAAOsO,MAAM,GAAI,CACrC,IAAIC,EAAM/O,EAAEQ,OAAOsO,MAAM,GACzBN,EAAUO,QAqCU,yBAAKlP,UAAU,cACX,2BAAOS,QAAQ,YAAf,UACA,4BAAQC,SAAU,SAACP,GAAD,OAAOgH,EAAUhH,EAAEQ,OAAO9H,QAAQmH,UAAU,eAAea,GAAG,YAC5E,0CACA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,WAGR,yBAAKmH,UAAU,cACX,2BAAOS,QAAQ,YAAf,kBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOiH,EAAiBjH,EAAEQ,OAAO9H,QAAQgO,UAAQ,EAAC/M,KAAK,SAASkG,UAAU,eAAea,GAAG,cAEjH,yBAAKb,UAAU,cACX,2BAAOS,QAAQ,YAAf,sBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOoH,EAAcpH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAU,eAAea,GAAG,cAErG,yBAAKC,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,gBAAhC,eAIlBJ,EAAQG,KAAK,SCiK3BiQ,I,OA9OgB,WAC3B,IAAMlU,EAAQoD,aAAY,SAAApD,GAAK,OAAIA,KAC7B8D,EAAUC,cACV3C,EAAWiC,cACb8Q,EAAO,EACPC,EAAa,EACbC,EAAO,EACPC,EAAa,EACbC,EAAM,EACNC,EAAY,EAKhB,GAJAxQ,qBAAU,WACN5C,EzB6TJ,uCAAO,WAAOA,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,MACRT,IAAKA,GAAM,0BAJhB,gBAESD,EAFT,EAESA,KAITQ,EAAS4B,GAAepC,EAAKW,SAN7B,gDASCM,QAAQC,IAAI,yBAA0B,KAAIC,SAT3C,yDAAP,yDyB3TG,IACC/B,EAAMrB,QAAQU,SAASoV,WACvB,IAAK,IAAI9H,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQU,SAASoV,WAAWtX,OAAQwP,IAC1DwH,GAAQnU,EAAMrB,QAAQU,SAASoV,WAAW9H,GAAG4G,MAC7Ca,GAAcpU,EAAMrB,QAAQU,SAASoV,WAAW9H,GAAG8G,WAK3D,GAAIzT,EAAMrB,QAAQU,SAASqV,WACvB,IAAK,IAAI/H,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQU,SAASqV,WAAWvX,OAAQwP,IAC1D0H,GAAQrU,EAAMrB,QAAQU,SAASqV,WAAW/H,GAAG4G,MAC7Ce,GAActU,EAAMrB,QAAQU,SAASqV,WAAW/H,GAAG8G,WAK3D,GAAIzT,EAAMrB,QAAQU,SAASsV,SACvB,IAAK,IAAIhI,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQU,SAASsV,SAASxX,OAAQwP,IACxD4H,GAAOvU,EAAMrB,QAAQU,SAASsV,SAAShI,GAAG4G,MAC1CiB,GAAaxU,EAAMrB,QAAQU,SAASsV,SAAShI,GAAG8G,WAKxD5R,QAAQC,IAAI,WACZD,QAAQC,IAAI9B,EAAMrB,QAAQU,SAASsV,UAInC,IAAMC,EAAQ,GAEd,GADA/S,QAAQC,IAAI9B,EAAMrB,QAAQU,SAASoV,YAC/BzU,EAAMrB,QAAQU,SAASoV,WACvB,IAAK,IAAI9H,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQU,SAASoV,WAAWtX,OAAQwP,IAC1DiI,EAAM3Q,KAAK,CAAE,QAAWjE,EAAMrB,QAAQU,SAASoV,WAAW9H,GAAGkI,QAAQxI,YAAa,MAASrM,EAAMrB,QAAQU,SAASoV,WAAW9H,GAAG4G,QAIxI,IAAMuB,EAAQ,GACd,GAAI9U,EAAMrB,QAAQU,SAASqV,WACvB,IAAK,IAAI/H,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQU,SAASqV,WAAWvX,OAAQwP,IAC1DmI,EAAM7Q,KAAK,CAAE,QAAWjE,EAAMrB,QAAQU,SAASqV,WAAW/H,GAAGkI,QAAQxI,YAAa,MAASrM,EAAMrB,QAAQU,SAASqV,WAAW/H,GAAG4G,QAIxI,IAAM7G,EAAQ,GACd,GAAI1M,EAAMrB,QAAQU,SAASsV,SACvB,IAAK,IAAIhI,EAAI,EAAGA,EAAI3M,EAAMrB,QAAQU,SAASsV,SAASxX,OAAQwP,IACxDD,EAAMzI,KAAK,CAAE,QAAWjE,EAAMrB,QAAQU,SAASsV,SAAShI,GAAGkI,QAAQxI,YAAa,MAASrM,EAAMrB,QAAQU,SAASsV,SAAShI,GAAG4G,QAKpI,OAEI,oCACKvT,EAAMrB,QAAQrB,gBAAkB,oCAC7B,kBAAC+I,GAAD,MAEA,yBAAKnC,UAAU,aAEVlE,EAAMrB,QAAQU,SAASoV,YACpB,yBAAKvQ,UAAU,YACX,yBAAKA,UAAU,mBACmC,IAA7ClE,EAAMrB,QAAQU,SAASoV,WAAWtX,OAAe,oCAC9C,yBAAK6H,MAAM,UACP,4CAMJ,2BAAOd,UAAU,gBACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBAIR,+BAEQtJ,EAAMrB,QAAQU,SAASoV,WAAWvO,KAAI,SAACkD,EAAKC,GAAN,OAElC,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAIyL,QAAQrT,aACjB,4BAAK4H,EAAIyL,QAAQxI,aACjB,4BAAKjD,EAAImK,OACT,4BAAKnK,EAAIqK,mBAOf,KAClB,uBAAGzM,MAAO,CAAEC,MAAO,UAAnB,qBAA2D,IAARkN,EAAcC,EAAjE,MAEJ,kBAACpH,GAAA,EAAD,CAAUtH,MAAO,IAAKuH,OAAQ,IAAKrM,KAAMgU,GACzC,kBAAC1H,GAAA,EAAD,CAAKC,QAAQ,QAAQC,KAAK,YAC1B,kBAACC,GAAA,EAAD,CAAeC,OAAO,SACtB,kBAACC,GAAA,EAAD,CAAOJ,QAAQ,YACf,kBAACK,GAAA,EAAD,QAQPxN,EAAMrB,QAAQU,SAASqV,YACpB,yBAAKxQ,UAAU,aACX,yBAAKA,UAAU,mBACmC,IAA7ClE,EAAMrB,QAAQU,SAASqV,WAAWvX,OAAe,oCAC9C,yBAAK6H,MAAM,UACP,4CAEJ,2BAAOd,UAAU,gBACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBAIR,+BAEQtJ,EAAMrB,QAAQU,SAASqV,WAAWxO,KAAI,SAACkD,EAAKC,GAAN,OAClC,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAIyL,QAAQrT,aACjB,4BAAK4H,EAAIyL,QAAQxI,aACjB,4BAAKjD,EAAImK,OACT,4BAAKnK,EAAIqK,mBAMf,KAClB,uBAAGzM,MAAO,CAAEC,MAAO,UAAnB,qBAA2D,IAARoN,EAAcC,EAAjE,MAEJ,kBAACtH,GAAA,EAAD,CAAUtH,MAAO,IAAKuH,OAAQ,IAAKrM,KAAMkU,GACzC,kBAAC5H,GAAA,EAAD,CAAKC,QAAQ,QAAQC,KAAK,UAC1B,kBAACC,GAAA,EAAD,CAAeC,OAAO,SACtB,kBAACC,GAAA,EAAD,CAAOJ,QAAQ,YACf,kBAACK,GAAA,EAAD,QAKPxN,EAAMrB,QAAQU,SAASsV,UACpB,yBAAKzQ,UAAU,YACX,yBAAKA,UAAU,mBACiC,IAA3ClE,EAAMrB,QAAQU,SAASsV,SAASxX,OAAe,oCAC5C,iDACA,2BAAO+G,UAAU,gBACb,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBAIR,+BAGQtJ,EAAMrB,QAAQU,SAASsV,SAASzO,KAAI,SAACkD,EAAKC,GAAN,OAChC,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAIyL,QAAQrT,aACjB,4BAAK4H,EAAIyL,QAAQxI,aACjB,4BAAKjD,EAAImK,OACT,4BAAKnK,EAAIqK,mBAMf,KAClB,uBAAGzM,MAAO,CAAEC,MAAO,UAAnB,qBAA0D,IAAPsN,EAAaC,EAAhE,MAEJ,kBAACxH,GAAA,EAAD,CAAUtH,MAAO,IAAKuH,OAAQ,IAAKrM,KAAM8L,GACzC,kBAACQ,GAAA,EAAD,CAAKC,QAAQ,QAAQC,KAAK,YAC1B,kBAACC,GAAA,EAAD,CAAeC,OAAO,SACtB,kBAACC,GAAA,EAAD,CAAOJ,QAAQ,YACf,kBAACK,GAAA,EAAD,UAWT1J,EAAQG,KAAK,QCtFjB8Q,GAxIO,WAClB,IAAM/U,EAAQoD,aAAY,SAACtF,GAAD,OAAWA,KAC/BsD,EAAWiC,cACXS,EAAUC,cAHQ,EAIAT,mBAAS,IAJT,oBAIjBiD,EAJiB,KAIXC,EAJW,OAKElD,mBAAS,IALX,oBAKjB+E,EALiB,KAKV8C,EALU,OAMW7H,mBAAS,IANpB,oBAMjBrC,EANiB,KAMN2H,EANM,OAOFtF,mBAAS,IAPP,oBAOjB6E,EAPiB,KAOZiD,EAPY,OAQkB9H,mBAAS,IAR3B,oBAQjB0R,EARiB,KAQF1J,EARE,OASEhI,mBAAS,IATX,oBASjB5D,EATiB,KASViE,EATU,OAUUL,oBAAS,GAVnB,oBAUjBM,EAViB,KAUNC,EAVM,KAaxBG,qBAAU,WACFhE,EAAMN,MACNiE,EAAS3D,EAAMN,OAGfiE,EAAS,MAEd,CAAC3D,EAAMN,QA4BV,OAfAsE,qBAAU,WACFhE,EAAM9B,MAAMG,mBACZsF,EAAS,MAEd,CAAC3D,EAAM9B,MAAMG,oBAEhB2F,qBAAU,WACFhE,EAAMN,OAASM,EAAM9B,MAAMG,kBAC3BwF,GAAa,GAGbA,GAAa,KAElB,CAAC7D,EAAMN,MAAOM,EAAM9B,MAAMG,oBAIzB,6BACK2B,EAAM9B,MAAMZ,gBAAmB,oCAAE,kBAACoO,GAAD,MAC9B,yBAAKxH,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OACX,0BAAMC,YAAU,EAACC,SAlCrB,SAACC,G3BqJI,IAAC4Q,E2BpJtB5Q,EAAEE,iBACFV,GAAa,GACbzC,G3BkJsB6T,E2BlJC,CACnB1O,OACA8B,QACApH,YACA+T,gBACA7M,IAAKA,EAAIyD,MAAM,KAAKC,UAAUC,KAAK,M3B8I3C,uCAAO,WAAO1K,GAAP,SAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,sBACXD,KAAMqU,IALX,cAESrU,KAKRQ,EAAS/C,GAAkB,IAC3BwM,MAAM,4BARP,gDAWCzJ,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAb3B,yDAAP,0D2BnH4B,yBAAKsD,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAOS,QAAQ,UAAf,cACA,2BAAOC,SAAU,SAACP,GAAD,OAAOmC,EAAQnC,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAC/E,CACI,aAAcpF,EAAM6G,OACpBxB,GAAG,WACVrF,EAAM6G,MAAS,yBAAKrC,UAAU,oBAAoBxE,EAAM6G,OAE7D,yBAAKrC,UAAU,cACX,2BAAOS,QAAQ,WAAf,SACA,2BAAOC,SAAU,SAACP,GAAD,OAAO8G,EAAS9G,EAAEQ,OAAO9H,QAAQiB,KAAK,QAAQkG,UAAWY,KAAW,eACjF,CACI,aAAcpF,EAAM2I,QACpBtD,GAAG,YACVrF,EAAM2I,OAAU,yBAAKnE,UAAU,oBAAoBxE,EAAM2I,QAG9D,yBAAKnE,UAAU,cACX,2BAAOS,QAAQ,gBAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YACpB8D,GAAG,gBACP,0CAGA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAGH2C,EAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,EAAMuB,aAGtE,yBAAKiD,UAAU,YACX,yBAAKA,UAAU,cACX,2BAAOS,QAAQ,SAAf,OACA,2BAAOC,SAAU,SAACP,GAAD,OAAO+G,EAAO/G,EAAEQ,OAAO9H,QAAQiB,KAAK,OAAOkG,UAAWY,KAAW,eAC9E,CACI,aAAcpF,EAAMyI,MACpBpD,GAAG,UACVrF,EAAMyI,KAAQ,yBAAKjE,UAAU,oBAAoBxE,EAAMyI,MAE5D,yBAAKjE,UAAU,cACX,2BAAOS,QAAQ,YAAf,kBACA,2BAAOC,SAAU,SAACP,GAAD,OAAOiH,EAAiBjH,EAAEQ,OAAO9H,QAAQiB,KAAK,SAASkG,UAAWY,KAAW,eAC1F,CACI,aAAcpF,EAAMsV,gBACpBjQ,GAAG,aACVrF,EAAMsV,eAAkB,yBAAK9Q,UAAU,oBAAoBxE,EAAMsV,kBAI1E,yBAAKhQ,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,kBAAhC,kBAIrBJ,EAAQG,KAAK,OC9B5BiR,GAnGY,WACvB,IAAMlV,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cAFY,EAGMC,mBAAS,IAHf,oBAGtBrC,EAHsB,KAGX2H,EAHW,OAIHtF,mBAAS,IAJN,oBAItB5D,EAJsB,aAKK4D,oBAAS,IALd,oBAKtBM,EALsB,KAKXC,EALW,KAMvBC,EAAUC,cAiBhB,OARAC,qBAAU,WACgC,IAAlChE,EAAM9B,MAAMM,WAAWrB,QACvB0G,GAAa,KAGlB,CAAC7D,EAAM9B,MAAMM,WAAWrB,SAIvB,6BACK6C,EAAM9B,MAAMZ,gBAAkB,oCAC3B,kBAACoO,GAAD,MACA,yBAAKxH,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,0BAAMiR,eAAA,EAAYhR,YAAU,EAACC,SArBjC,SAACC,GACjBA,EAAEE,iBACFV,GAAa,GACbzC,E5BqL0B,SAACH,GAC/B,8CAAO,WAAOG,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,2BACXD,KAAMK,IALX,gBAESL,EAFT,EAESA,KAKRQ,EAASgB,EAAyBxB,EAAKW,SAPxC,gDAUCH,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAZ3B,yDAAP,sD4BtLawU,CAAmB,CAAEnU,iBAmBN,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,gBAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YACpB8D,GAAG,gBACP,0CAGA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAGH2C,EAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,EAAMuB,YAElE,yBAAK+D,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,4BAAhC,YAKvB,yBAAKA,UAAU,YAEwB,IAAlClE,EAAM9B,MAAMM,WAAWrB,QAAgB,2BAAO+G,UAAU,gBACrD,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,kBAGR,+BAEQtJ,EAAM9B,MAAMM,WAAW0H,KAAI,SAACkD,EAAKC,GAAN,OACvB,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI7F,oBACT,4BAAK6F,EAAI7C,MACT,4BAAK6C,EAAIf,OACT,4BAAKe,EAAIU,uBAUtChG,EAAQG,KAAK,OCuBjBiR,GArHY,WACvB,IAAMlV,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cAFY,EAGMC,mBAAS,IAHf,oBAGtBrC,EAHsB,KAGX2H,EAHW,OAILtF,mBAAS,IAJJ,oBAItBpC,EAJsB,KAIhB2H,EAJgB,OAKKvF,oBAAS,GALd,oBAKtBM,EALsB,KAKXC,EALW,OASHP,mBAAS,IATN,oBAStB5D,EATsB,KAUvBoE,GAVuB,KAUbC,eAehB,OANAC,qBAAU,WACgC,IAAlChE,EAAM9B,MAAMO,WAAWtB,QACvB0G,GAAa,KAGlB,CAAC7D,EAAM9B,MAAMO,WAAWtB,SAEvB,6BACK6C,EAAM9B,MAAMZ,gBAAkB,oCAC3B,kBAACoO,GAAD,MACA,yBAAKxH,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,0BAAMC,YAAU,EAACC,SAnBrB,SAACC,G7BuMS,IAACgR,E6BtM3BhR,EAAEE,iBACFV,GAAa,GACbzC,G7BoM2BiU,E6BpMC,CAAEpU,YAAWC,Q7BqM7C,uCAAO,WAAOE,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,2BACXD,KAAMyU,IALX,gBAESzU,EAFT,EAESA,KAKRQ,EAASiB,EAAyBzB,EAAKW,SAPxC,gDAUCH,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAZ3B,yDAAP,0D6BpL4B,yBAAKsD,UAAU,cACX,2BAAOS,QAAQ,gBAAf,YAEA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YACpB8D,GAAG,gBACP,0CAEA,4BAAQhI,MAAM,QAAd,QACQ,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAEX2C,EAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,EAAMuB,YAElE,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,UAAf,SAEA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACpE,CACI,aAAcpF,EAAMwB,OACpB6D,GAAG,UACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEH2C,EAAMwB,MAAS,yBAAKgD,UAAU,oBAAoBxE,EAAMwB,OAE7D,yBAAK8D,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,4BAAhC,YAOvB,yBAAKA,UAAU,YAEwB,IAAlClE,EAAM9B,MAAMO,WAAWtB,QAAgB,2BAAO+G,UAAU,gBACrD,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,uBACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,cAGR,+BAEQtJ,EAAM9B,MAAMO,WAAWyH,KAAI,SAACkD,EAAKC,GAAN,OACvB,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI7F,oBACT,4BAAK6F,EAAI7C,MACT,4BAAK6C,EAAIf,OACT,4BAAKe,EAAIjI,oBAUtC2C,EAAQG,KAAK,OCGjBqR,GAnHa,WACxB,IAAMtV,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAC/BoB,EAAWiC,cAFa,EAGKC,mBAAS,IAHd,oBAGvBrC,EAHuB,KAGZ2H,EAHY,OAINtF,mBAAS,IAJH,oBAIvBpC,EAJuB,KAIjB2H,EAJiB,OAKJvF,mBAAS,IALL,oBAKvB5D,EALuB,aAMI4D,oBAAS,IANb,oBAMvBM,EANuB,KAMZC,EANY,KAOxBC,EAAUC,cAgBhB,OAPAC,qBAAU,WACgC,IAAlChE,EAAM9B,MAAMK,WAAWpB,QACvB0G,GAAa,KAGlB,CAAC7D,EAAM9B,MAAMK,WAAWpB,SAC3B0E,QAAQC,IAAI9B,EAAM9B,MAAMK,YAEpB,6BACI,6BACKyB,EAAM9B,MAAMZ,gBAAkB,oCAC3B,kBAACoO,GAAD,MACA,yBAAKxH,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,0BAAMC,YAAU,EAACC,SArBzB,SAACC,GACjBA,EAAEE,iBACFV,GAAa,GACbzC,E9B0N0B,SAACH,GAC/B,8CAAO,WAAOG,GAAP,iBAAAC,EAAA,+EAEwBd,IAAM,CACzBe,OAAQ,OACRT,IAAKA,EAAM,2BACXD,KAAMK,IALX,gBAESL,EAFT,EAESA,KAKRQ,EAASkB,EAAyB1B,EAAKW,SAPxC,gDAUCH,EAAS,CACLpD,KAAMnB,EACNoB,QAAS,KAAIwD,SAASb,OAZ3B,yDAAP,sD8B3Na2U,CAAmB,CAAEtU,YAAWC,YAmBb,yBAAKgD,UAAU,cACX,2BAAOS,QAAQ,gBAAf,aACA,4BAAQC,SAAU,SAACP,GAAD,OAAOuE,EAAcvE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eAC1E,CACI,aAAcpF,EAAMuB,YACpB8D,GAAG,gBACP,0CAGA,4BAAQhI,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,QAGH2C,EAAMuB,WAAc,yBAAKiD,UAAU,oBAAoBxE,EAAMuB,YAElE,yBAAKiD,UAAU,cACX,2BAAOS,QAAQ,UAAf,QACA,4BAAQC,SAAU,SAACP,GAAD,OAAOwE,EAAQxE,EAAEQ,OAAO9H,QAAQmH,UAAWY,KAAW,eACpE,CACI,aAAcpF,EAAMwB,OACpB6D,GAAG,UACP,0CACA,4BAAQhI,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,MAEH2C,EAAMwB,MAAS,yBAAKgD,UAAU,oBAAoBxE,EAAMwB,OAE7D,yBAAK8D,MAAM,8BACP,yBAAKA,MAAM,YAEHpB,GAAa,yBAAKoB,MAAM,8BAA8BC,KAAK,UACvD,0BAAMD,MAAM,WAAZ,kBAKdpB,GAAa,4BAAQ5F,KAAK,SAASkG,UAAU,4BAAhC,YAMvB,yBAAKA,UAAU,YAEwB,IAAlClE,EAAM9B,MAAMK,WAAWpB,QAAgB,2BAAO+G,UAAU,gBACrD,+BACI,4BACI,wBAAIoF,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,oBAGR,+BAEQtJ,EAAM9B,MAAMK,WAAW2H,KAAI,SAACkD,EAAKC,GAAN,OACvB,wBAAIjD,IAAKiD,GACL,wBAAIC,MAAM,OAAOD,EAAQ,GACzB,4BAAKD,EAAI5H,aACT,4BAAK4H,EAAIiD,aACT,4BAAKjD,EAAImD,yBAUtCzI,EAAQG,KAAK,QCzCrBuR,GArEG,WACd,IAAMxV,EAAQoD,aAAY,SAACpD,GAAD,OAAWA,KAE/B8D,EAAUC,cAChB,OACI,6BAEK/D,EAAM9B,MAAMZ,gBAAkB,oCAC3B,kBAACoO,GAAD,MACA,yBAAKxH,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,UAEf,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,OAAO8C,MAAO,CAAEtB,MAAO,UAClC,yBAAKxB,UAAU,eAAeqB,IAAKvF,EAAM9B,MAAMA,MAAM0L,OAAQnE,IAAI,mBACjE,yBAAKvB,UAAU,aACX,wBAAIA,UAAU,cAAclE,EAAM9B,MAAMA,MAAMqI,MAC9C,wBAAIrC,UAAU,cAAclE,EAAM9B,MAAMA,MAAMqF,uBAK1D,yBAAKW,UAAU,YACX,2BAAOA,UAAU,gBACb,+BACI,4BACI,oCACA,4BAAKlE,EAAM9B,MAAMA,MAAMqI,OAE3B,4BACI,qCACA,4BAAKvG,EAAM9B,MAAMA,MAAMmK,QAE3B,4BACI,mDACA,4BAAKrI,EAAM9B,MAAMA,MAAMqF,qBAE3B,4BACI,4CACA,4BAAKvD,EAAM9B,MAAMA,MAAM4L,cAE3B,4BACI,yCACA,4BAAK9J,EAAM9B,MAAMA,MAAM+C,YAE3B,4BACI,8CACA,4BAAKjB,EAAM9B,MAAMA,MAAM8W,cACnBhV,EAAM9B,MAAMA,MAAM8W,cAAgB,YAQ9D,yBAAK9Q,UAAU,aAIhBJ,EAAQG,KAAK,O,OCZpC,GAAIwR,OAAOxT,aAAayT,gBAAiB,CACvCrV,EAAa4B,aAAayT,iBAC1B,IAAMjR,GAAUC,IAAWzC,aAAayT,iBAExC1V,EAAMoB,SjCsJG,CACHpD,KVvMmB,cUwMnBC,QiCxJwBwG,KAG9B,IAAMkR,GAAc9D,KAAK+D,MAAQ,IAC7BnR,GAAQoR,IAAMF,KAChB3V,EAAMoB,SAASY,KACfyT,OAAOK,SAASzQ,KAAO,UAGtB,GAAIoQ,OAAOxT,aAAa8T,gBAAiB,CAC5C1V,EAAa4B,aAAa8T,iBAC1B,IAAMtR,GAAUC,IAAWzC,aAAa8T,iBAExC/V,EAAMoB,S/B0RsB,SAAAR,GAC1B,MAAO,CACH5C,KZrVmB,cYsVnBC,QAAS2C,G+B7RAoV,CAAevR,KAG9B,IAAMkR,GAAc9D,KAAK+D,MAAQ,IAC7BnR,GAAQoR,IAAMF,KAChB3V,EAAMoB,SAAS8B,MACfuS,OAAOK,SAASzQ,KAAO,UAGtB,GAAIoQ,OAAOxT,aAAagU,cAAe,CAC1C5V,EAAa4B,aAAagU,eAC1B,IAAMxR,GAAUC,IAAWzC,aAAagU,eAExCjW,EAAMoB,ShC2KoB,SAAAR,GACxB,MAAO,CACH5C,KX7PiB,YW8PjBC,QAAS2C,GgC9KAsV,CAAazR,KAG5B,IAAMkR,GAAc9D,KAAK+D,MAAQ,IAC7BnR,GAAQoR,IAAMF,KAChB3V,EAAMoB,SAASmB,MACfkT,OAAOK,SAASzQ,KAAO,KA0CZ8Q,OAtCf,WAEE,OADc/S,aAAY,SAACpD,GAAD,OAASA,KAEjC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoW,OAAK,EAACC,KAAK,IAAIC,UAAW7I,KACjC,kBAAC,IAAD,CAAO2I,OAAK,EAACC,KAAK,cAAcC,UAAWnT,KAC3C,kBAAC,IAAD,CAAOiT,OAAK,EAACC,KAAK,QAAQC,UAAWhQ,KACrC,kBAAC,IAAD,CAAO8P,OAAK,EAACC,KAAK,yBAAyBC,UAAWC,KACtD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,kBAAkBC,UAAW3N,KAC/C,kBAAC,IAAD,CAAOyN,OAAK,EAACC,KAAK,WAAWC,UAAWE,KACxC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,qBAAqBC,UAAWtM,KAClD,kBAAC,IAAD,CAAOoM,OAAK,EAACC,KAAK,SAASC,UAAWd,KACtC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,oBAAoBC,UAAWpL,KACjD,kBAAC,IAAD,CAAOkL,OAAK,EAACC,KAAK,oBAAoBC,UAAWvK,KACjD,kBAAC,IAAD,CAAOqK,OAAK,EAACC,KAAK,oBAAoBC,UAAWlK,KACjD,kBAAC,IAAD,CAAOgK,OAAK,EAACC,KAAK,kBAAkBC,UAAWvB,KAC/C,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,sBAAsBC,UAAWpB,KACnD,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,qBAAqBC,UAAWG,KAClD,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,oBAAoBC,UAAWI,KACjD,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,sBAAsBC,UAAWK,KACnD,kBAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,0BAA0BC,UAAW3H,KACvD,kBAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,2BAA2BC,UAAWM,KACxD,kBAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,0BAA0BC,UAAWnH,KACvD,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,uBAAuBC,UAAWhD,KACpD,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,yBAAyBC,UAAWO,KACtD,kBAAC,IAAD,CAAOT,OAAK,EAACC,KAAK,0BAA0BC,UAAWjD,KACvD,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,wBAAwBC,UAAWQ,KACrD,kBAAC,IAAD,CAAOV,OAAK,EAACC,KAAK,cAAcC,UAAWnG,KAC3C,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,+BAA+BC,UAAW3D,KAC5D,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,SAASC,UAAWS,SCzHhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUlX,MAAOA,GACf,kBAAC,GAAD,QAGJmX,SAASC,eAAe,W","file":"static/js/main.8c936ecb.chunk.js","sourcesContent":["//ERROR\r\nexport const SET_ERRORS = \"SET_ERRORS\"\r\nexport const SET_ERRORS_HELPER = \"SET_ERRORS_HELPER\"\r\nexport const SET_FLAG = \"SET_FLAG\"\r\n\r\n//ADMIN\r\nexport const SET_ADMIN = \"SET_ADMIN\"\r\nexport const GET_SUBJECTS = \"GET_SUBJECTS\"\r\n\r\n\r\n\r\n//FACULTY\r\nexport const SET_FACULTY = \"SET_FACULTY\"\r\nexport const FACULTY_UPDATE_PASSWORD = \"FACULTY_UPDATE_PASSWORD\"\r\n\r\n//STUDENT\r\nexport const SET_STUDENT = \"SET_STUDENT\"\r\nexport const STUDENT_UPDATE_PASSWORD = \"STUDENT_UPDATE_PASSWORD\"\r\nexport const SET_OTP = \"SET_OTP\"\r\n","const isEmpty = value =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","\r\nimport { SET_FACULTY } from '../actionTypes'\r\n\r\nimport isEmpty from '../validation/is-empty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    faculty: {},\r\n    flag: false,\r\n    updateProfileFlag: false,\r\n    allSubjectCodeList: [],\r\n    fetchedStudents: [],\r\n    fetchedStudentsHelper: true\r\n}\r\n\r\n\r\nconst facultyReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FACULTY: {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                faculty: action.payload\r\n            }\r\n        }\r\n        case \"FETCH_STUDENTS\": {\r\n            return {\r\n                ...state,\r\n                fetchedStudentsHelper: false,\r\n                fetchedStudents: action.payload\r\n            }\r\n        }\r\n        case \"FACULTY_UPDATE_PROFILE_FLAG\": {\r\n            return {\r\n                ...state,\r\n                updateProfileFlag: action.payload\r\n            }\r\n        }\r\n        case \"GET_SUBJECTCODE_LIST\": {\r\n            return {\r\n                ...state,\r\n                allSubjectCodeList: action.payload\r\n            }\r\n        }\r\n        case \"HELPER\": {\r\n            return {\r\n                ...state,\r\n                fetchedStudentsHelper: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default facultyReducer","\r\nimport { SET_ADMIN, GET_SUBJECTS } from '../actionTypes'\r\nimport isEmpty from '../validation/is-empty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    admin: {},\r\n    adminAddFacultyFlag: false,\r\n    adminAddStudentFlag: false,\r\n    adminAddAdminFlag: false,\r\n    adminAddSubjectFlag: false,\r\n    allSubject: {},\r\n    allFaculty: [],\r\n    allStudent: [],\r\n    allSubject: []\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ADMIN: \r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                admin: action.payload\r\n            }\r\n        case GET_SUBJECTS: {\r\n            return {\r\n                ...state,\r\n                allSubject: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_FACULTY_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddFacultyFlag: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_STUDENT_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddStudentFlag: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_SUBJECT_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddSubjectFlag: action.payload\r\n            }\r\n        }\r\n        case \"ADMIN_ADD_ADMIN_FLAG\": {\r\n            return {\r\n                ...state,\r\n                adminAddAdminFlag: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_FACULTY\": {\r\n            return {\r\n                ...state,\r\n                allFaculty: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_STUDENT\": {\r\n            return {\r\n                ...state,\r\n                allStudent: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_SUBJECT\": {\r\n            return {\r\n                ...state,\r\n                allSubject: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default adminReducer","\r\nimport { SET_STUDENT, SET_OTP, SET_FLAG } from '../actionTypes'\r\n\r\nimport isEmpty from '../validation/is-empty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    student: {},\r\n    alongsideStudent: {},\r\n    flag: false,\r\n    chatHistory: [],\r\n    regNumStudent: {},\r\n    privateChat: [],\r\n    privateChat2: [],\r\n    newerChats: [],\r\n    previousChats: [],\r\n    allSubjects: [],\r\n    attendence: [], \r\n    allMarks: {}\r\n}\r\n\r\n\r\nconst studentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STUDENT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                student: action.payload\r\n            }\r\n        case \"CHAT_HELPER\":\r\n            return {\r\n                ...state,\r\n                alongsideStudent: action.payload\r\n            }\r\n        case SET_FLAG:\r\n            return {\r\n                ...state,\r\n                flag: true\r\n            }\r\n        case \"SET_CHAT\":\r\n            return {\r\n                ...state, \r\n                chatHistory : [state.chatHistory, action.payload]\r\n            }\r\n        case \"GET_STUDENT_BY_REG_NUM\": {\r\n            return {\r\n                ...state,\r\n                regNumStudent: action.payload\r\n            }\r\n        }\r\n        case \"GET_PRIVATE_CONVERSATION\": {\r\n            return {\r\n                ...state,\r\n                privateChat: action.payload\r\n            }\r\n        }\r\n        case \"GET_PRIVATE_CONVERSATION2\": {\r\n            return {\r\n                ...state,\r\n                privateChat2: action.payload\r\n            }\r\n        }\r\n        case \"GET_NEWER_CHATS\": {\r\n            return {\r\n                ...state,\r\n                newerChats: action.payload\r\n            }\r\n        }\r\n        case \"GET_PREVIOUS_CHATS\": {\r\n            return {\r\n                ...state,\r\n                previousChats: action.payload\r\n            }\r\n        }\r\n        case \"GET_ALL_SUBJECTS\": \r\n            return {\r\n                ...state,\r\n                allSubjects: action.payload\r\n            }\r\n        \r\n        case \"GET_ATTENDENCE\": \r\n            return {\r\n                ...state,\r\n                attendence: action.payload\r\n            }\r\n        \r\n        case \"GET_MARKS\": \r\n            return {\r\n                ...state,\r\n                allMarks: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state\r\n        \r\n    } \r\n}\r\n\r\nexport default studentReducer","import { SET_ERRORS_HELPER } from '../actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nconst setErrorsHelper = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS_HELPER:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default setErrorsHelper\r\n\r\n\r\n","import { SET_ERRORS } from '../actionTypes';\r\n\r\nconst initialState = {};\r\n\r\nconst setErrors = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default setErrors\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport facultyReducer from './facultyReducer'\r\nimport adminReducer from './adminReducer'\r\nimport studentReducer from './studentReducer'\r\nimport errorReducerHelper from './errorReducerHelper'\r\nimport errorReducer from './errorReducer'\r\n\r\n\r\nexport default combineReducers({\r\n    faculty: facultyReducer,\r\n    admin: adminReducer,\r\n    student: studentReducer,\r\n    error: errorReducer,\r\n    errorHelper: errorReducerHelper\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer/rootReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport jwt_decode from 'jwt-decode';\r\nimport { SET_FACULTY, SET_ERRORS, SET_FLAG, SET_ERRORS_HELPER } from '../actionTypes'\r\n\r\nconst setFaculty = (data) => {\r\n    return {\r\n        type: SET_FACULTY,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst url = \"http://127.0.0.1:5000\"\r\n\r\nconst fetchStudentsHelper = (data) => {\r\n    return {\r\n        type: \"FETCH_STUDENTS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst subjectCodeListHelper = (data) => {\r\n    return {\r\n        type: \"GET_SUBJECTCODE_LIST\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nexport const facultyLogin = (facultyCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/login\",\r\n                data: facultyCredential\r\n            })\r\n            const { token } = data;\r\n            // Set token to local Storage\r\n            localStorage.setItem('facultyJwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setFaculty(decoded))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const facultyUpdatePassword = (passwordData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/updatePassword\",\r\n                data: passwordData\r\n            })\r\n            alert(\"Password Updated Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getOTPFaculty = (studentEmail) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios({\r\n                method: 'Post',\r\n                url: url + '/api/faculty/forgotPassword',\r\n                data: studentEmail\r\n            })\r\n            alert(\"Otp has been sent to your email\")\r\n            dispatch({ type: SET_FLAG })\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const submitOTPFaculty = (newPasswordWithOtp, history) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/postOTP\",\r\n                data: newPasswordWithOtp\r\n            })\r\n            alert(\"Password Update, kindly login with updated password\")\r\n            history.push('/')\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchStudents = (classroom, year, division) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/fetchStudents\",\r\n                data: { classroom, year, division}\r\n            })\r\n            dispatch(fetchStudentsHelper(data.result))\r\n            dispatch(subjectCodeListHelper(data.subjectCode))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst facultyUpdateProfileFlag = (data) => {\r\n    return {\r\n        type: \"FACULTY_UPDATE_PROFILE_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const facultyUpdate = (updatedData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + `/api/faculty/updateProfile`,\r\n                data: updatedData\r\n            })\r\n            dispatch(facultyUpdateProfileFlag(true))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const markAttendence = (selectedStudents, subjectCode, classroom, year,\r\n           division) => {\r\n    return async(dispatch) => {\r\n        try {\r\n                await axios({\r\n                method: 'Post',\r\n                    url: url + \"/api/faculty/markAttendence\",\r\n                data: { selectedStudents, subjectCode, classroom, year, division}\r\n                })\r\n            alert(\"attendence has been marked successfully\")\r\n            dispatch({\r\n                type: \"HELPER\",\r\n                payload: true\r\n            })\r\n        }\r\n        catch (err) {\r\n           console.log(\"Error in marking attendence, faculty action\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const uploadMarks = (subjectCode, exam, totalMarks, marks,\r\n    classroom, year, division, ) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/faculty/uploadMarks\",\r\n                data: {\r\n                    subjectCode, exam, totalMarks, marks, classroom, year, division,\r\n                    }\r\n            })\r\n            alert(\"Mark uploaded successfully\")\r\n            dispatch({\r\n                type: \"HELPER\",\r\n                payload: true\r\n            })\r\n           \r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS_HELPER,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const setFacultyUser = data => {\r\n    return {\r\n        type: SET_FACULTY,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const facultyLogout = () =>\r\n    (dispatch) => {\r\n        // Remove token from localStorage\r\n        localStorage.removeItem('facultyJwtToken');\r\n        // Remove auth header for future requests\r\n        setAuthToken(false);\r\n        // Set current user to {} which will set isAuthenticated to false\r\n        dispatch(setFaculty({}));\r\n    };","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport jwt_decode from 'jwt-decode';\r\nimport {\r\n    SET_ADMIN, SET_ERRORS, \r\n    GET_SUBJECTS\r\n} from '../actionTypes'\r\n\r\nconst url = \"http://127.0.0.1:5000\"\r\n\r\nconst setAdmin = (data) => {\r\n    return {\r\n        type: SET_ADMIN,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddFacultyFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_FACULTY_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddStudentFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_STUDENT_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddSubjectFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_SUBJECT_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminAddAdminFlag = (data) => {\r\n    return {\r\n        type: \"ADMIN_ADD_ADMIN_FLAG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getSubjctsHelper = (data) => {\r\n    return {\r\n        type: GET_SUBJECTS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst adminGetAllFacultyHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_FACULTY\",\r\n        payload: data\r\n    }   \r\n}\r\n\r\nconst adminGetAllStudentHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_STUDENT\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nconst adminGetAllSubjectHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_SUBJECT\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const adminLogin = (adminCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            console.log(\"Admin Login Credentials\", adminCredential)\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/login\",\r\n                data: adminCredential\r\n            })\r\n            console.log(\"login response\", data)\r\n            const { token } = data;\r\n            // Set token to local Storage\r\n            localStorage.setItem('adminJwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setAdmin(decoded))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminGetAllSubjects = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/admin/getSubjects\",\r\n            })\r\n            dispatch(getSubjctsHelper(data))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in getting all subjects\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminAddFaculty = (facultyCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addFaculty\",\r\n                data: facultyCredential\r\n            })\r\n            dispatch(adminAddFacultyFlag(true))\r\n            alert(\"Faculty Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminAddStudent = (studentCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addStudent\",\r\n                data: studentCredential\r\n            })\r\n            dispatch(adminAddStudentFlag(true))\r\n            alert(\"Student Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminAddSubject = (subjectCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addSubject\",\r\n                data: subjectCredential\r\n            })\r\n            dispatch(adminAddSubjectFlag(true))\r\n            alert(\"Subject Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const adminAddAdmin = (adminCredentails) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/addAdmin\",\r\n                data: adminCredentails\r\n            })\r\n            dispatch(adminAddAdminFlag(true))\r\n            alert(\"Admin Added Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const adminGetAllFaculty = (classroom) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/getAllFaculty\",\r\n                data: classroom\r\n            })\r\n            dispatch(adminGetAllFacultyHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminGetAllStudent = (searchCredentials) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/getAllStudent\",\r\n                data: searchCredentials\r\n            })\r\n            dispatch(adminGetAllStudentHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminGetAllSubject = (classroom) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/admin/getAllSubject\",\r\n                data: classroom\r\n            })\r\n            dispatch(adminGetAllSubjectHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAdminUser = data => {\r\n    return {\r\n        type: SET_ADMIN,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const adminLogout = () =>\r\n    (dispatch) => {\r\n        // Remove token from localStorage\r\n        localStorage.removeItem('adminJwtToken');\r\n        // Remove auth header for future requests\r\n        setAuthToken(false);\r\n        // Set current user to {} which will set isAuthenticated to false\r\n        dispatch(setAdmin({}));\r\n    };","import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport jwt_decode from 'jwt-decode';\r\nimport { SET_STUDENT, SET_ERRORS_HELPER, SET_ERRORS, STUDENT_UPDATE_PASSWORD, SET_OTP, SET_FLAG ,GET_BOOKS} from '../actionTypes'\r\n\r\nconst url = \"http://127.0.0.1:5000\"\r\n\r\nexport const setChatHistory = (data) => {\r\n    return {\r\n        type: \"SET_CHAT\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst setStudent = (data) => {\r\n    return {\r\n        type: SET_STUDENT,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n\r\nconst chatHelp = (data) => {\r\n    return {\r\n        type: \"CHAT_HELPER\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getStudentByRegNameHelper = (data) => {\r\n    return {\r\n        type: \"GET_STUDENT_BY_REG_NUM\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nconst privateConversation = (data) => {\r\n    return {\r\n        type: \"GET_PRIVATE_CONVERSATION\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst privateConversation2 = (data) => {\r\n    return {\r\n        type: \"GET_PRIVATE_CONVERSATION2\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst newerChatsHelper = (data) => {\r\n    return {\r\n        type: \"GET_NEWER_CHATS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst previousChatsHelper = (data) => {\r\n    return {\r\n        type: \"GET_PREVIOUS_CHATS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getAllSubjectsHelper = (data) => {\r\n    return {\r\n        type: \"GET_ALL_SUBJECTS\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchAttendenceHelper = (data) => {\r\n    return {\r\n        type: \"GET_ATTENDENCE\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst getMarksHelper = (data) => {\r\n    return {\r\n        type: \"GET_MARKS\",\r\n        payload: data\r\n    }\r\n    \r\n}\r\n\r\nexport const studentLogin = (studentCredential) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/login\",\r\n                data: studentCredential\r\n            })\r\n            const { token } = data;\r\n            // Set token to local Storage\r\n            localStorage.setItem('studentJwtToken', token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setStudent(decoded))\r\n           \r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS_HELPER,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const studentUpdatePassword = (passwordData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/updatePassword\",\r\n                data: passwordData\r\n            })\r\n            alert(\"Password Updated Successfully\")\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS_HELPER,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const chatHelper = (name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/getStudentByName\",\r\n                data: name\r\n            })\r\n            dispatch(chatHelp(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log('error in recent',err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStudentByRegName = (registrationNumber) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/getStudentByRegName\",\r\n                data: { registrationNumber }\r\n            })\r\n            dispatch(getStudentByRegNameHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log('Error in getting student by registration number', err.message)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const getOTPStudent = (studentEmail) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios({\r\n                method: 'Post',\r\n                url: url + '/api/student/forgotPassword',\r\n                data: studentEmail\r\n            })\r\n            alert(\"Otp has been sent to your email\")\r\n            dispatch({type:SET_FLAG})\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const submitOTPStudent = (newPasswordWithOtp, history) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + \"/api/student/postOTP\" ,\r\n                data:newPasswordWithOtp\r\n            })\r\n            alert(\"Password Update, kindly login with updated password\")\r\n            history.push('/')\r\n        }\r\n        catch (err){\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendMessage = (room,messageobj) => {\r\n    return async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + `/api/student/chat/${room}`,\r\n                data: messageobj\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\",err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getPrivateConversation = (roomId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/${roomId}`,\r\n            })\r\n            dispatch(privateConversation(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPrivateConversation2 = (roomId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/${roomId}`,\r\n            })\r\n            dispatch(privateConversation2(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const previousChats = (senderName) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/previousChats/${senderName}`,\r\n            })\r\n            dispatch(previousChatsHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const newerChats = (receiverName) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + `/api/student/chat/newerChats/${receiverName}`,\r\n            })\r\n            dispatch(newerChatsHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const studentUpdate = (updatedData) => {\r\n    return async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                url: url + `/api/student/updateProfile`,\r\n                data: updatedData\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllSubjects = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/student/getAllSubjects\"\r\n            })\r\n            dispatch(getAllSubjectsHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchAttendence = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/student/checkAttendence\"\r\n            })\r\n            dispatch(fetchAttendenceHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in sending message\", err.message)\r\n        }\r\n    \r\n    }\r\n}\r\n\r\nexport const getMarks = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Get',\r\n                url: url + \"/api/student/getMarks\"\r\n            })\r\n           dispatch(getMarksHelper(data.result))\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in getting marks\", err.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setStudentUser = data => {\r\n    return {\r\n        type: SET_STUDENT,\r\n        payload: data\r\n    };\r\n}\r\n\r\n\r\n\r\nexport const studentLogout = () =>\r\n    (dispatch) => {\r\n        // Remove token from localStorage\r\n        localStorage.removeItem('studentJwtToken');\r\n        // Remove auth header for future requests\r\n        setAuthToken(false);\r\n        // Set current user to {} which will set isAuthenticated to false\r\n        dispatch(setStudent({}));\r\n    };\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminLogin } from '../redux/action/adminAction'\r\nimport classnames from 'classnames'\r\n\r\n\r\n\r\nconst LoginPage = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch( )\r\n    const [registrationNumber, setRegistrationNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        if (store.admin.isAuthenticated) {\r\n            history.push('/admin')\r\n        }\r\n    }, [store.admin.isAuthenticated])\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    const fromHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminLogin({registrationNumber, password}))\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error ||\r\n            store.admin.isAuthenticated) {\r\n            setIsLoading(false)\r\n        }\r\n        \r\n        else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [store.error, store.admin.isAuthenticated])\r\n\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"d-flex justify-content-md-center align-items-center vh-100\">\r\n                        <div>\r\n                            <h1 className=\"display-4 text-center\">ADMIN</h1>\r\n                            <form noValidate onSubmit={fromHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Registration Number</label>\r\n                                    <input onChange={(e) => setRegistrationNumber(e.target.value)} type=\"text\" value={registrationNumber} className={classnames(\"form-control form-control-lg\",\r\n                                        {'is-invalid' : error.registrationNumber\r\n                                        \r\n                                        })} id=\"emailId\" />\r\n                                    {error.registrationNumber && (<div className=\"invalid-feedback\">{error.registrationNumber}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">Password</label>\r\n                                    <input onChange={(e) => setPassword(e.target.value)} value={password} className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": error.password\r\n                                    })} value={password} type=\"password\" id=\"passwordId\" />\r\n                                    {error.password && (<div className=\"invalid-feedback\">{error.password}</div>)}\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../stylesheets/bookCard.css';\r\n\r\nconst BookCard = (props) => {\r\n    const book = props.book;\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n\r\n            <a href={book.link} target=\"_blank\"> <img src={book.imageLink} alt=\"image\" width=\"200\" /></a>\r\n\r\n            <div className=\"desc\">\r\n                <a href={book.link} target=\"_blank\" className='book_link'><h2>{book.title}</h2></a>\r\n\r\n                <h3>{book.Std}</h3>\r\n                <p>{book.Medium}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BookCard;","\r\n// import JsonData from '../data.json'\r\n\r\n// import React, { useState, useEffect } from 'react'\r\n// import { useDispatch, useSelector } from 'react-redux'\r\n// import HomeHelper from '../../Components/HomeHelper'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n// function JsonDataDisplay() {\r\n//   const store = useSelector((store) => store)\r\n//   const history = useHistory()\r\n//   const DisplayData = JsonData.map(\r\n//     (info) => {\r\n//       return (\r\n//         <tr>\r\n//           <td>{info.title}</td>\r\n//           <td>{info.Std}</td>\r\n//           <td>{info.Medium}</td>\r\n//           <td> <img src={info.imageLink} alt=\"image\" srcset=\"\" width=\"150\"/></td>\r\n\r\n//           <td><a href={info.link} target=\"_blank\">Book</a></td>\r\n//         </tr>\r\n//       )\r\n//     }\r\n//   )\r\n\r\n//   return (\r\n\r\n//     <>\r\n//       {store.student.isAuthenticated ?\r\n//         <>\r\n//           <HomeHelper />\r\n//           <div>\r\n//             <table class=\"table table-striped\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Title</th>\r\n//                   <th>Std</th>\r\n//                   <th>Medium</th>\r\n//                   <th>Image</th>\r\n//                   <th>Link</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n\r\n\r\n//                 {DisplayData}\r\n\r\n//               </tbody>\r\n//             </table>\r\n\r\n//           </div>\r\n//         </> : (history.push('/'))}\r\n//     </>\r\n\r\n\r\n//   )\r\n// }\r\n\r\n// export default JsonDataDisplay;\r\n\r\n\r\nimport BookCard from './BookCard';\r\n\r\nimport JsonData from '../data.json'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport HomeHelper from '../../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nfunction JsonDataDisplay() {\r\n  const store = useSelector((store) => store)\r\n  const history = useHistory()\r\n  // const DisplayData = JsonData.map(\r\n  //   (info) => {\r\n  //     return (\r\n  //       <tr>\r\n  //         <td>{info.title}</td>\r\n  //         <td>{info.Std}</td>\r\n  //         <td>{info.Medium}</td>\r\n  //         <td> <img src={info.imageLink} alt=\"image\" srcset=\"\" width=\"150\" /></td>\r\n\r\n  //         <td><a href={info.link} target=\"_blank\">Book</a></td>\r\n  //       </tr>\r\n  //     )\r\n  //   }\r\n  // )\r\n\r\n  let bookList;\r\n\r\n\r\n  bookList = JsonData.map((book, k) =>\r\n    <BookCard book={book} key={k} />\r\n  );\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      {store.student.isAuthenticated ?\r\n        <>\r\n          <HomeHelper />\r\n          <div className=\"ShowBookList\">\r\n            <div className=\"container\">\r\n              <div className=\"list\" >\r\n                {bookList}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </> : (history.push('/'))}\r\n    </>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default JsonDataDisplay;\r\n","import React, { useState, useEffect } from 'react'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { sendMessage, getPrivateConversation, getPrivateConversation2 } from '../redux/action/studentAction'\r\nimport io from 'socket.io-client';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"../stylesheets/chat.css\"\r\n// import Dateandtime from './DateandTime'\r\n//Swap HelperFunction\r\nfunction swap(input, value_1, value_2) {\r\n    var temp = input[value_1];\r\n    input[value_1] = input[value_2];\r\n    input[value_2] = temp;\r\n}\r\n\r\n\r\nlet socket;\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [room1, setRoom1] = useState(\"\")\r\n    const [room2, setRoom2] = useState(\"\")\r\n    const [receiverRegistrationNumber, setReceiverRegistrationNumber] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [messageArray, setMessageArray] = useState([])\r\n    const [olderMessages, setOlderMessages] = useState([])\r\n    // const ENDPOINT = '\"http://localhost\"'\r\n    const ENDPOINT = 'http://127.0.0.1:5000'\r\n    // http://127.0.0.1:5000/api/student/getStudentByName\r\n    // const ENDPOINT = 'https://apna-erp.herokuapp.com'\r\n\r\n    useEffect(() => {\r\n        let temp = props.match.params.room\r\n        socket = io(ENDPOINT)\r\n        let tempArr = temp.split(\".\")\r\n        setReceiverRegistrationNumber(tempArr[0])\r\n        setRoom1(temp)\r\n        swap(tempArr, 0, 1)\r\n        let tempRoom2 = tempArr[0] + '.' + tempArr[1]\r\n        setRoom2(tempRoom2)\r\n    }, [ENDPOINT, props.match.params.room])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPrivateConversation(room1))\r\n        dispatch(getPrivateConversation2(room2))\r\n        socket = io(ENDPOINT)\r\n        socket.emit('join room', {\r\n            room1,\r\n            room2\r\n        })\r\n        socket.on(\"new Message\", (data) => {\r\n            setMessageArray([...messageArray, data])\r\n        })\r\n        return () => {\r\n            socket.emit('disconnect')\r\n            socket.off()\r\n        }\r\n    }, [room1, room2])\r\n\r\n    const Dateandtime = (obj) => {\r\n        const startTime = new Date(obj.createdAt);\r\n        let text = startTime.toString();\r\n        return <>{text.substr(0, text.length - 30)}</>\r\n    }\r\n\r\n    const formHandler = (e) => {\r\n        // e.preventDefault()\r\n        if (message.trim().length > 0) {\r\n            socket.emit(\"private message\", {\r\n                sender: store.student.student.student.name,\r\n                message,\r\n                room: room1\r\n            })\r\n            setMessage(\"\")\r\n            let messageObj = {\r\n                roomId: room1,\r\n                senderName: store.student.student.student.name,\r\n                senderId: store.student.student.student._id,\r\n                message,\r\n                senderRegistrationNumber: store.student.student.student.registrationNumber,\r\n                receiverRegistrationNumber\r\n            }\r\n            dispatch(sendMessage(room1, messageObj))\r\n        }\r\n        else {\r\n            alert(\"Can't send empty message\")\r\n        }\r\n    }\r\n    console.log(store.student.student.student.name);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"new Message\", (data) => {\r\n            setOlderMessages(store.student.privateChat)\r\n            setMessageArray([...messageArray, data])\r\n        })\r\n\r\n    }, [messageArray, olderMessages])\r\n    if (store.student.privateChat) {\r\n        // console.log(store.student.privateChat)\r\n        // console.log(store.student.privateChat.length)\r\n        for (let i = 0; i < store.student.privateChat.length; i++) {\r\n            var startTime = new Date(store.student.privateChat[i].createdAt);\r\n            // console.log(startTime);\r\n\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 \" style={{ marginTop: \"50px\"}}>\r\n                            <form className=\"form\" onSubmit={formHandler}>\r\n                                <div className=\"form-group \">\r\n                                    {/* <input value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" /> */}\r\n                                    <textarea value={message} onChange={(e) => setMessage(e.target.value)} placeholder=\"Type here..\" type=\"text\" className=\"form-control\" style={{height: \"300px\"}}/>\r\n                                </div>\r\n                                <div style={{textAlign:\"right\"}}>\r\n                                <button type=\"submit\" className=\"btn btn-primary ml-1\">Send</button>\r\n                                </div>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                        <div className=\"scrollBar col-md-7\" style={{ overflowY: \"scroll\", marginTop: \"20px\", height: \"510px\", border: \"1px solid rgba(0, 0, 0, 0.05)\" }}>\r\n                            {\r\n                                store.student.privateChat.map((obj, index) =>\r\n                                    <div key={index} >\r\n                                        {/* <p style={{ color: \"black\" }}>{obj.senderName}: {obj.message},{Dateandtime(obj)}</p> */}\r\n                                        <div class=\"chat-messages\">\r\n                                            <div class=\"message-box-holder\">\r\n                                                <div class=\"message-box\">\r\n                                                {Dateandtime(obj)}\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            <div class=\"message-box-holder\">\r\n                                                <div class=\"message-sender\">\r\n                                                    {obj.senderName}\r\n                                                </div>\r\n                                                <div class=\"message-box message-partner\">\r\n                                                    {obj.message}\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            {messageArray.map((obj, index) =>\r\n                                <p key={index}>{obj.sender}: {obj.message}</p>\r\n                            )}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </> : (history.push('/'))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { studentLogout, newerChats, previousChats } from '../redux/action/studentAction'\r\nimport '../stylesheets/navbar.css'\r\nimport { FaInstagram, FaTwitter, FaFacebook } from 'react-icons/fa';\r\n\r\n\r\n\r\nimport Libarary from '../Pages/Student/Libarary'\r\nconst Home = () => {\r\n    const history = useHistory()\r\n    const store = useSelector((store) => store)\r\n    const [name, setName] = useState(\"\")\r\n    useEffect(() => {\r\n        if (store.student.student.student.name) {\r\n            setName(store.student.student.student.name)\r\n        }\r\n    }, [store.student.student.student.name])\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(newerChats(store.student.student.student.name))\r\n        dispatch(previousChats(store.student.student.student.name))\r\n    }, [store.student.newerChats.length])\r\n    const logoutHandler = () => {\r\n        dispatch(studentLogout())\r\n        history.push('/')\r\n    }\r\n   \r\n\r\n    const finalname = name.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\r\n    return (\r\n        <>\r\n\r\n            <nav>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSl3Bp5kE232YWdc__a3O9XsvNdEkJ3uUEp1zXMZ6-jMtyG5-3tVU-8-_m_jfbhxdXl5uQ&usqp=CAU\" alt=\"logo\" srcset=\"\" />\r\n                <div className='navigation'>\r\n                    <ul>\r\n\r\n                        <li>\r\n                            <a href=\"#\"><h1>Sou. Tarabai Madhavrao Mohite Vidyalaya Rethare Bk</h1></a>\r\n                            <p className='para'><p></p> Near Dharme Patil Wada, Rethare bk , Tal-Karad , Dist-Satara , Maharashtra 415108</p>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaFacebook /></a>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaInstagram /></a>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaTwitter /></a>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <nav className=\"navbar navbar-expand-lg navbar-light  bg-dark\">\r\n                            <h4 className=\"navbar-brand mt-1\" href=\"\" style={{ color: \"white\", fontSize: \"20px\" }}>STMMV</h4>\r\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                                <ul className=\"navbar-nav\">\r\n                                    <li className=\"nav-item active\" >\r\n                                        <button type=\"button\" className=\"btn\" ><Link to=\"/home\" style={{ color: \"white\", textDecoration: 'none', fontSize: \"18px\" }}><li>{finalname}</li></Link></button>\r\n                                    </li>\r\n                                    {/* <li className=\"nav-item\">\r\n                                        <button type=\"button\" className=\"btn\"><Link to=\"/student/updateProfile\" style={{ color: \"white\", textDecoration: 'none', fontSize: \"18px\" }}><li>Update Profile</li></Link></button>\r\n                                    </li> */}\r\n                                    <li className=\"nav-item dropdown\">\r\n                                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{ color: \"white\", fontSize: \"18px\" }}>\r\n                                            Academic </a>\r\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                            <Link className=\"dropdown-item\" to=\"/student/testPerformance\">Test Performance</Link>\r\n                                            <Link className=\"dropdown-item\" to=\"/student/attendence\">Attendance</Link>\r\n                                            <Link className=\"dropdown-item\" to=\"/student/getAllSubjects\">Student Subject List</Link>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\" style={{ color: \"white\", textDecoration: 'none', fontSize: \"18px\" }}><li>Students</li></Link></button>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button type=\"button\" className=\"btn\"><Link to=\"/studentDetails\" style={{ color: \"white\", textDecoration: 'none', fontSize: \"18px\" }}><li>New Conversation ({store.student.newerChats.length})</li></Link></button>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button type=\"button\" className=\"btn\"><Link to=\"/student/updatePassword\" style={{ color: \"white\", textDecoration: 'none', fontSize: \"18px\" }}><li>Update Password</li></Link></button>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <button type=\"button\" className=\"btn\"><Link to='/books' style={{ color: \"white\", textDecoration: 'none', fontSize: \"18px\" }}><li>Library</li></Link></button>\r\n                                    </li>\r\n\r\n                                </ul>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <button style={{ listStyle: \"none\", color: \"white\", fontSize: \"18px\" }} onClick={logoutHandler} type=\"button\" className=\"btn\" ><li>LOGOUT</li></button>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport '../stylesheets/StudentHome.css'\r\n\r\n\r\nconst Home = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                {/* <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8 mt-5\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.student.student.student.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.student.student.student.name}</h5>\r\n                                            <h5 className=\"card-title\">{store.student.student.student.registrationNumber}</h5>\r\n                                            <Link to='/student/updateProfile'>UPDATE PROFILE</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7 bg-dark  text-white\">\r\n                                    <table className=\"table \">\r\n                                        <tbody className=\"text-white\">\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.student.student.student.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.student.student.student.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.student.student.student.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Date Of Birth</td>\r\n                                                <td>{store.student.student.student.dob}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Year</td>\r\n                                                <td>{store.student.student.student.year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>classroom</td>\r\n                                                <td>{store.student.student.student.classroom}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>division</td>\r\n                                                <td>{store.student.student.student.division}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Batch</td>\r\n                                                <td>{store.student.student.student.batch}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Gender</td>\r\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender : \r\n                                                \r\n                                                   \"NA\"\r\n                                                }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Contact Number</td>\r\n                                                <td>{store.student.student.student.studentMobileNumber ?\r\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Aadhar Card</td>\r\n                                                <td>{store.student.student.student.aadharCard ? store.student.student.student.aadharCard : \"NA\"} </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Father Name</td>\r\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Father Contact Number</td>\r\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> */}\r\n\r\n                {/* <!-- Student Profile --> */}\r\n                {/* <div class=\"student-profile py-4 \">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-4 \">\r\n                                <div class=\"card shadow-sm\">\r\n                                    <div class=\"card-header bg-transparent text-center\">\r\n                                        <img class=\"profile_img\" src=\"https://placeimg.com/640/480/arch/any\" alt=\"\" />\r\n                                        <h3>{store.student.student.student.name}</h3>\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <p class=\"mb-0\"><strong class=\"pr-1\">Student ID:</strong>{store.student.student.student.registrationNumber}</p>\r\n                                        <p class=\"mb-0\" style={{textTransform:\"capitalize\"}}><strong class=\"pr-1\" >Class:</strong>{store.student.student.student.classroom}</p>\r\n                                        <p class=\"mb-0\"><strong class=\"pr-1\">Section:</strong>{store.student.student.student.division}</p>\r\n                                        <p class=\"mb-0\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i><Link to='/student/updateProfile'> Update Profile</Link></p>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-8 \">\r\n                                <div class=\"card shadow-sm\">\r\n                                    <div class=\"card-header bg-transparent border-0\">\r\n                                        <h3 class=\"mb-0\"><i class=\"fa fa-clone\" aria-hidden=\"true\"></i> General Information</h3>\r\n                                    </div>\r\n                                    <div class=\"card-body pt-0\">\r\n                                        <table class=\"table table-bordered\">\r\n                                            <tr>\r\n                                                <th width=\"30%\">Date Of Birth</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.dob}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Academic Year\t</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Gender</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender :\"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Email</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Batch</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.batch}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Contact Number</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.studentMobileNumber ?\r\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Adhar number</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.aadharCard ? store.student.student.student.aadharCard : \"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Father Name</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\">Father Number</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div class=\"student-profile py-4\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-lg-4\" >\r\n                                <div class=\"card shadow-sm\" style={{paddingBottom:\"48px\"}}>\r\n                                    <div class=\"card-header bg-transparent text-center\">\r\n                                        <img class=\"profile_img\" src=\"https://placeimg.com/640/480/arch/any\" alt=\"\" />\r\n                                        <br></br>\r\n                                        <b style={{fontFamily:\"roboto\",fontSize:\"20px\"}}>{store.student.student.student.name}</b>\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <p class=\"mb-0\"><b class=\"pr-1\" style={{fontWeight:\"bold\",fontFamily:\"roboto\",fontSize:\"18px\"}}>Student ID:</b>{store.student.student.student.registrationNumber}</p>\r\n                                        <p class=\"mb-0\" style={{textTransform:\"capitalize\"}}><b class=\"pr-1\" style={{fontWeight:\"bold\",fontFamily:\"roboto\",fontSize:\"18px\"}}>Class:</b>{store.student.student.student.classroom}</p>\r\n                                        <p class=\"mb-0\"><b class=\"pr-1\" style={{fontWeight:\"bold\",fontFamily:\"roboto\",fontSize:\"18px\"}}>Section:</b>{store.student.student.student.division}</p>\r\n                                        <p class=\"mb-0\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i><Link to='/student/updateProfile'> Update Profile</Link></p>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-8\">\r\n                                <div class=\"card shadow-sm\">\r\n                                    <div class=\"card-header bg-transparent border-0\">\r\n                                        <b class=\"mb-0\" style={{fontFamily:\"roboto\",fontSize:\"20px\"}}><i class=\"fa fa-clone\" aria-hidden=\"true\"></i> General Information</b>\r\n                                    </div>\r\n                                    <div class=\"card-body pt-0\">\r\n                                        <table class=\"table table-bordered\">\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Date Of Birth</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.dob}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Academic Year\t</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Gender</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.gender ? store.student.student.student.gender :\"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Email</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Batch</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.batch}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Contact Number</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.studentMobileNumber ?\r\n                                                    store.student.student.student.studentMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Adhar number</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.aadharCard ? store.student.student.student.aadharCard : \"NA\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Father Name</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.fatherName ? store.student.student.student.fatherName : \"NA\" }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th width=\"30%\" style={{fontFamily:\"roboto\",fontSize:\"16px\"}}>Father Number</th>\r\n                                                <td width=\"2%\">:</td>\r\n                                                <td>{store.student.student.student.fatherMobileNumber ? store.student.student.student.fatherMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n// import {newerChats, previousChats} from '../redux/action/studentAction'\r\nimport axios from 'axios'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport {Link, useHistory } from 'react-router-dom'\r\n\r\nconst StudentDetails = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [classroom, setDepartment] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [division, setSection] = useState(\"\")\r\n    const [result, setResult] = useState([])\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    const filterStudentHelper = async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                // url: 'https://apna-erp.herokuapp.com/api/student/getAllStudents',\r\n                url: 'http://127.0.0.1:5000/api/student/getAllStudents',\r\n                data: {\r\n                    classroom,\r\n                    year,\r\n                    division\r\n                }\r\n            })\r\n            setResult(data.result)\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in student register action\", err.message)\r\n        }\r\n    }\r\n\r\n    const filterByNameHelper = async () => {\r\n        try {\r\n            const { data } = await axios({\r\n                method: 'Post',\r\n                // url: 'https://apna-erp.herokuapp.com/api/student/getStudentByName',\r\n                url: 'http://127.0.0.1:5000/api/student/getStudentByName',\r\n                data: {\r\n                    name\r\n                }\r\n            })\r\n            setResult(data.result)\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in student register action\", err)\r\n        }\r\n    }\r\n    \r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name) {\r\n            filterByNameHelper()\r\n        }\r\n        else {\r\n            filterStudentHelper()\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    {result.length === 0 && <div className=\"row\">\r\n                        <div className=\"col-md-3 border mt-4\">\r\n                            <div className=\"row mt-3\">\r\n                                <div className=\"col mb-2\">\r\n                                    <form className=\"form-inline\" onSubmit={formHandler}>\r\n                                        <div className=\"form-group \">\r\n                                            <input value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Search by name\" type=\"text\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-block btn-info mt-1 \">Search</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-4 mb-4 \">\r\n                                <div className=\"col\">\r\n                                    <form noValidate onSubmit={formHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"branchId\">Branch</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className=\"form-control\" id=\"bramchId\">\r\n                                                <option>Select</option>\r\n                                               \r\n\r\n                                                <option value=\"five\">Five</option>\r\n                                                <option value=\"six\">Six</option>\r\n                                                <option value=\"seven\">Seven</option>\r\n                                                <option value=\"eight\">Eight</option>\r\n                                                <option value=\"nine\">Nine</option>\r\n                                                <option value=\"ten\">Ten</option>\r\n\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"yearId\">Year</label>\r\n                                            <select onChange={(e) => setYear(e.target.value)} className=\"form-control\" id=\"yearId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"sectionId\">division</label>\r\n                                            <select onChange={(e) => setSection(e.target.value)} className=\"form-control\" id=\"sectionId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"A\">A</option>\r\n                                                <option value=\"B\">B</option>\r\n                                                <option value=\"C\">C</option>\r\n                                                <option value=\"D\">D</option>\r\n                                                <option value=\"E\">E</option>\r\n                                                <option value=\"F\">F</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-info btn-block\">Search</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 border mt-4\">\r\n                            <div className=\"row justify-content-center \">\r\n                                <div className=\"col\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 border\">\r\n                                            <h4 className=\"text-center\">New Chats</h4>\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    {\r\n                                                        store.student.newerChats.map((res, index) =>\r\n                                                            <tr key={index}>\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td>{res.senderName}</td>\r\n                                                                <td><Link to={`/student/${res.senderRegistrationNumber}`}>Explore</Link></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"col-md-6 border\">\r\n                                            <h4 className=\"text-center\">Older Chats</h4>\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    {\r\n                                                        store.student.previousChats.map((res, index) =>\r\n                                                            <tr key={index}>\r\n                                                                <th scope=\"row\">{index + 1}</th>\r\n                                                                <td>{res.receiverName}</td>\r\n                                                                <td><Link to={`/student/${res.receiverRegistrationNumber}`}>Explore</Link></td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    {result.length !== 0 && <div className=\"row\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Chat</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {result.map((obj, index) =>\r\n                                        <tr key={index}>\r\n                                            <th scope=\"row\">{index + 1}</th>\r\n                                            <td>{obj.registrationNumber}</td>\r\n                                            <td>{obj.name}</td>\r\n                                            <td><Link to={`/student/${obj.registrationNumber}`}>Explore</Link></td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>}\r\n\r\n                </div></> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentDetails\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport {facultyLogout} from '../redux/action/facultyAction'\r\nimport { FaInstagram, FaTwitter, FaFacebook } from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const store = useSelector((store)=>store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(\"\")\r\n    useEffect(() => {\r\n\r\n        if (store.faculty.faculty.faculty.name) {\r\n            setName(store.faculty.faculty.faculty.name)\r\n        }\r\n    }, [store.faculty.faculty.faculty.name])\r\n    const logoutHandler = () => {\r\n        dispatch(facultyLogout())\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <>\r\n        <nav>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSl3Bp5kE232YWdc__a3O9XsvNdEkJ3uUEp1zXMZ6-jMtyG5-3tVU-8-_m_jfbhxdXl5uQ&usqp=CAU\" alt=\"logo\" srcset=\"\" />\r\n                <div className='navigation'>\r\n                    <ul>\r\n\r\n                        <li>\r\n                            <a href=\"#\"><h1>Sou. Tarabai Madhavrao Mohite Vidyalaya Rethare Bk</h1></a>\r\n                            <p className='para'><p></p> Near Dharme Patil Wada, Rethare bk , Tal-Karad , Dist-Satara , Maharashtra 415108</p>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaFacebook /></a>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaInstagram /></a>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaTwitter /></a>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        <div className=\"container-fluid\">\r\n            {/* <Header /> */}\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                        <h4 className=\"navbar-brand mt-1\" href=\"\">STMMV</h4>\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                            <ul className=\"navbar-nav\">\r\n                                <li className=\"nav-item active\">\r\n                                    <button type=\"button\" className=\"btn\" style={{ color: \"white\"}}><Link to=\"/home\"><li>{name.toUpperCase()}</li></Link></button>\r\n                                </li>\r\n                                {/* <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updateProfile\"><li>UPDATE PROFILE</li></Link></button>\r\n                                </li> */}\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/attendenceFaculty\"><li>MARK ATTENDANCE</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/uploadMarks\"><li>UPLOAD MARKS</li></Link></button>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button type=\"button\" className=\"btn\"><Link to=\"/faculty/updatePassword\"><li>UPDATE PASSWORD</li></Link></button>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <button style={{listStyle:\"None\"}} onClick={logoutHandler} type=\"button\" className=\"btn1\"><li>LOGOUT</li></button>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\n\r\n\r\nconst FacultyInterface = () => {\r\n    const history = useHistory()\r\n    const store = useSelector((store) => store)\r\n    return (\r\n        <>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.faculty.faculty.faculty.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.name}</h5>\r\n                                            <h5 className=\"card-title\">{store.faculty.faculty.faculty.registrationNumber}</h5>\r\n                                            <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <table className=\"table border\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.faculty.faculty.faculty.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.faculty.faculty.faculty.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.faculty.faculty.faculty.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Date Of Birth</td>\r\n                                                <td>{store.faculty.faculty.faculty.dob}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Designation</td>\r\n                                                <td>{store.faculty.faculty.faculty.designation}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Joining Year</td>\r\n                                                <td>{store.faculty.faculty.faculty.joiningYear}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>classroom</td>\r\n                                                <td>{store.faculty.faculty.faculty.classroom}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Gender</td>\r\n                                                <td>{store.faculty.faculty.faculty.gender ? store.faculty.faculty.faculty.gender :\r\n\r\n                                                    \"NA\"\r\n                                                }</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Contact Number</td>\r\n                                                <td>{store.faculty.faculty.faculty.facultyMobileNumber ?\r\n                                                    store.faculty.faculty.faculty.facultyMobileNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </> : (history.push('/'))}\r\n           \r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default FacultyInterface\r\n","import React, { useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport {fetchStudents,markAttendence } from '../redux/action/facultyAction'\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst AttendenceFaculty = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [classroom, setDepartment] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [division, setSection] = useState(\"\")\r\n    const [subjectCode, setSubjectCode] = useState(\"\")\r\n    const [checkedValue, setCheckedValue] = useState([])\r\n    const [error, setError] = useState({})\r\n    const [flag, setFlag] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoading2, setIsLoading2] = useState(false)\r\n\r\n    const handleInputChange = (e) => {\r\n        const tempCheck = checkedValue\r\n        let index\r\n        if (e.target.checked)\r\n        {\r\n            tempCheck.push(e.target.value)\r\n        }\r\n        else {\r\n            index = tempCheck.indexOf(e.target.value)\r\n            tempCheck.splice(index,1)\r\n        }\r\n        setCheckedValue(tempCheck)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(fetchStudents(classroom, year, division))\r\n       \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error || !store.faculty.fetchedStudentsHelper) {\r\n            setIsLoading(false)\r\n        }\r\n        \r\n    }, [store.error, store.faculty.fetchedStudentsHelper])\r\n\r\n \r\n\r\n    const secondFormHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading2(true)\r\n        dispatch(markAttendence(checkedValue, subjectCode, classroom, year, division))\r\n        setCheckedValue([])\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.faculty.fetchedStudentsHelper) {\r\n            setIsLoading2(false)\r\n        }\r\n        \r\n    },[store.faculty.fetchedStudentsHelper])\r\n    \r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\r\n                    <div className=\"col-md-4\">\r\n                        <form noValidate onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"branchId\">classroom</label>\r\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.classroom\r\n\r\n                                    })} id=\"branchId\">\r\n                                    <option>Select</option>\r\n                                    <option value={store.faculty.faculty.faculty.classroom}>{store.faculty.faculty.faculty.classroom}</option>\r\n                                </select>\r\n                                {error.classroom && (<div classNameName=\"invalid-feedback\">{error.classroom}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"yearId\">Year</label>\r\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.year\r\n\r\n                                    })} id=\"yearId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                </select>\r\n\r\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\r\n                            </div>\r\n                           \r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionId\">division</label>\r\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.division\r\n\r\n                                    })} id=\"sectionId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"A\">A</option>\r\n                                    <option value=\"B\">B</option>\r\n                                    <option value=\"C\">C</option>\r\n                                    <option value=\"D\">D</option>\r\n                                    <option value=\"E\">E</option>\r\n                                    <option value=\"F\">F</option>\r\n                                </select>\r\n                                {error.division && (<div classNameName=\"invalid-feedback\">{error.division}</div>)}\r\n                            </div>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-1\">\r\n                                    {\r\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Search</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>}\r\n\r\n\r\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\r\n                    <div className=\"col-md-4\">\r\n                        <form onSubmit={secondFormHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"subjectId\">Subject Code</label>\r\n                                <select required onChange={(e) => setSubjectCode(e.target.value)} className=\"form-control\" id=\"subjectId\">\r\n                                    <option>Select</option>\r\n                                    {\r\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\r\n                                            <option>{subjectCodeName}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <td><div className=\"form-check\">\r\n                                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\r\n                                        </div></td>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Student Name</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.faculty.fetchedStudents.map((obj, index) =>\r\n                                            <tr>\r\n                                                <td><div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value={obj._id} onChange={handleInputChange} id=\"defaultCheck1\" />\r\n                                                </div></td>\r\n                                                <td key={index}>{obj.registrationNumber}</td>\r\n                                                <td>{obj.name}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            <div class=\"row justify-content-center\">\r\n                                <div class=\"col-md-1\">\r\n                                    {\r\n                                        isLoading2 && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                            <span class=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {!isLoading2 && <button type=\"submit\" className=\"btn btn-info ml-1  \">Submit</button>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                }</> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttendenceFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { adminLogout } from '../redux/action/adminAction'\r\nimport { FaInstagram, FaTwitter, FaFacebook } from 'react-icons/fa';\r\n\r\n\r\nconst Home = () => {\r\n    const store = useSelector(store => store)\r\n    const [name, setName] = useState(\"\")\r\n    useEffect(() => {\r\n\r\n        if (store.admin.admin.name) {\r\n            setName(store.admin.admin.name)\r\n        }\r\n    }, [store.admin.admin.name])\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        dispatch(adminLogout())\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <>\r\n\r\n<nav>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSl3Bp5kE232YWdc__a3O9XsvNdEkJ3uUEp1zXMZ6-jMtyG5-3tVU-8-_m_jfbhxdXl5uQ&usqp=CAU\" alt=\"logo\" srcset=\"\" />\r\n                <div className='navigation'>\r\n                    <ul>\r\n\r\n                        <li>\r\n                            <a href=\"#\"><h1>Sou. Tarabai Madhavrao Mohite Vidyalaya Rethare Bk</h1></a>\r\n                            <p className='para'><p></p> Near Dharme Patil Wada, Rethare bk , Tal-Karad , Dist-Satara , Maharashtra 415108</p>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaFacebook /></a>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaInstagram /></a>\r\n\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"#\"><FaTwitter /></a>\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        <div className=\"container-fluid\">\r\n          \r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <h4 className=\"navbar-brand mt-1\" href=\"\">STMMV</h4>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin\"><li>{name.toUpperCase()}</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addFaculty\"><li>ADD FACULTY</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addStudent\"><li>ADD STUDENT</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addSubject\"><li>ADD SUBJECT</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/addAdmin\"><li>ADD ADMIN</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allFaculties\"><li>OUR FACULTIES</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allStudents\"><li>OUR STUDENTS</li></Link></button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button type=\"button\" className=\"btn\"><Link to=\"/admin/allSubject\"><li>SUBJECTS</li></Link></button>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n\r\n                    <button style={{ listStyle: \"None\" }} onClick={logoutHandler} type=\"button\" className=\"btn1\"><li>LOGOUT</li></button>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddStudent } from '../redux/action/adminAction'\r\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\r\nimport validator from 'validator'\r\n\r\nconst AdminAddStudent = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [classroom, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [division, setSection] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [studentMobileNumber, setContactNumber] = useState('')\r\n    const [fatherName, setFatherName] = useState('')\r\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        // if (validator.isMobilePhone(studentMobileNumber)) {\r\n        //     alert('Please provide valid Contact Number');\r\n        //     setIsLoading(false)\r\n        // }\r\n        // if (!(studentMobileNumber.match('[0-9]{12}'))) {\r\n        //     alert('Please provide valid Contact Number');\r\n        //     setIsLoading(false)\r\n\r\n        // }\r\n        // if (!(fatherMobileNumber.match('[0-9]{10}'))) {\r\n        //     alert('Please provide valid father Mobile Number');\r\n        //     setIsLoading(false)\r\n        // }\r\n        // if (!(aadharCard.match('[0-9]{12}')) ) {\r\n        //     alert('Please provide valid Adhar Number');\r\n        //     setIsLoading(false)\r\n        // }\r\n        // else {\r\n        //     dispatch(adminAddStudent({\r\n        //         name,\r\n        //         email,\r\n        //         year,\r\n        //         classroom,\r\n        //         fatherName,\r\n        //         aadharCard,\r\n        //         gender,\r\n        //         division: division.toUpperCase(),\r\n        //         dob: dob.split(\"-\").reverse().join(\"-\"),\r\n        //         studentMobileNumber,\r\n        //         fatherMobileNumber\r\n        //     }))\r\n        // }\r\n        dispatch(adminAddStudent({\r\n            name,\r\n            email,\r\n            year,\r\n            classroom,\r\n            fatherName,\r\n            aadharCard,\r\n            gender,\r\n            division: division.toUpperCase(),\r\n            dob: dob.split(\"-\").reverse().join(\"-\"),\r\n            studentMobileNumber,\r\n            fatherMobileNumber\r\n        }))\r\n    }\r\n    useEffect(() => {\r\n        if (store.admin.adminAddStudentFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddStudentFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddStudentFlag) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [store.error, store.admin.adminAddStudentFlag])\r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <><AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nameId\">Student Name</label>\r\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.name\r\n                                                })} id=\"nameId\" />\r\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"emailId\">Email</label>\r\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.email\r\n                                                })} id=\"emailId\" />\r\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"departmentId\">classroom</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.classroom\r\n                                                })} id=\"departmentId\">\r\n                                                <option>Select</option>\r\n\r\n\r\n\r\n                                                <option value=\"five\">Five</option>\r\n                                                <option value=\"six\">Six</option>\r\n                                                <option value=\"seven\">Seven</option>\r\n                                                <option value=\"eight\">Eight</option>\r\n                                                <option value=\"nine\">Nine</option>\r\n                                                <option value=\"ten\">Ten</option>\r\n\r\n                                            </select>\r\n                                            {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"yearId\">Year</label>\r\n                                            <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.year\r\n                                                })} id=\"yearId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                            </select>\r\n                                            {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"sectionId\">division</label>\r\n                                            <input onChange={(e) => setSection(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.division\r\n                                                })} id=\"sectionId\" />\r\n                                            {error.division && (<div className=\"invalid-feedback\">{error.division}</div>)}\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label htmlFor=\"dobId\">DOB</label>\r\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.dob\r\n                                                })} id=\"dobId\" />\r\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"genderId\">Gender</label>\r\n                                            {/* <select onChange={(e) => setGender(e.target.value)} class=\"form-control\" id=\"genderId\"> */}\r\n                                            <select onChange={(e) => setGender(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.gender\r\n                                                })} id=\"genderId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                                <option value=\"Other\">Other</option>\r\n                                            </select>\r\n                                            {error.gender && (<div className=\"invalid-feedback\">{error.gender}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberId\">Contact Number</label>\r\n                                            {/* <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" class=\"form-control\" id=\"numberId\" /> */}\r\n\r\n                                            <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\"  className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.studentMobileNumber\r\n                                                })} id=\"numberId\" />\r\n                                            {error.studentMobileNumber && (<div className=\"invalid-feedback\">{error.studentMobileNumber}</div>)}\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"fatherId\">Father Name</label>\r\n                                            {/* <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" class=\"form-control\" id=\"fatherId\" /> */}\r\n\r\n                                            <input onChange={(e) => setFatherName(e.target.value)} type=\"text\"  className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.fatherName\r\n                                                })} id=\"fatherId\" />\r\n                                            {error.fatherName && (<div className=\"invalid-feedback\">{error.fatherName}</div>)}\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"fathercnId\">Father Contact Number</label>\r\n                                            {/* <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" /> */}\r\n\r\n                                            <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\"  className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.fatherMobileNumber\r\n                                                })} id=\"fathercnId\" />\r\n                                            {error.fatherMobileNumber && (<div className=\"invalid-feedback\">{error.fatherMobileNumber}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                            {/* <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" /> */}\r\n\r\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\"  className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.aadharCard\r\n                                                })} id=\"aadharId\" />\r\n                                            {error.aadharCard && (<div className=\"invalid-feedback\">{error.aadharCard}</div>)}\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Student</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AdminAddStudent\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddFaculty } from '../redux/action/adminAction'\r\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\r\n\r\n\r\nconst AdminAddFaculty = () => {\r\n    const store = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [classroom, setDepartment] = useState('')\r\n    const [designation, setDesignation] = useState('')\r\n    const [facultyMobileNUmber, setFacultyMobileNumber] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddFaculty({\r\n            name,\r\n            email,\r\n            designation,\r\n            facultyMobileNUmber,\r\n            classroom,\r\n            aadharCard,\r\n            gender,\r\n            dob: dob.split(\"-\").reverse().join(\"-\")\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.adminAddFacultyFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddFacultyFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddFacultyFlag) {\r\n            setIsLoading(false)\r\n        }\r\n        else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [store.error, store.admin.adminAddFacultyFlag])\r\n    return (\r\n\r\n        <div>\r\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nameId\">Faculty Name</label>\r\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.name\r\n                                                })} id=\"nameId\" />\r\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"emailId\">Email</label>\r\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.email\r\n                                                })} id=\"emailId\" />\r\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"designationId\">Designation</label>\r\n                                            <select onChange={(e) => setDesignation(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.designation\r\n                                                })} id=\"designationId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"Assistant Professor\">Assistant Professor</option>\r\n                                                <option value=\"Senior Professer\">Senior Professer</option>\r\n                                            </select>\r\n                                            {error.designation && (<div className=\"invalid-feedback\">{error.designation}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"departmentId\">classroom</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.classroom\r\n                                                })} id=\"departmentId\">\r\n                                                <option>Select</option>\r\n\r\n\r\n                                                <option value=\"five\">Five</option>\r\n                                                <option value=\"six\">Six</option>\r\n                                                <option value=\"seven\">Seven</option>\r\n                                                <option value=\"eight\">Eight</option>\r\n                                                <option value=\"nine\">Nine</option>\r\n                                                <option value=\"ten\">Ten</option>\r\n\r\n                                            </select>\r\n                                            {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dobId\">DOB</label>\r\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.dob\r\n                                                })} id=\"dobId\" />\r\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"genderId\">Gender</label>\r\n                                            <select onChange={(e) => setGender(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.gender\r\n                                                })} id=\"genderId\">\r\n                                                <option>Select</option>\r\n                                                <option value=\"Male\">Male</option>\r\n                                                <option value=\"Female\">Female</option>\r\n                                                <option value=\"Other\">Other</option>\r\n                                            </select>\r\n                                            {error.gender && (<div className=\"invalid-feedback\">{error.gender}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberId\">Contact Number</label>\r\n                                            {/* <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"numberId\" /> */}\r\n\r\n                                            <input onChange={(e) => setFacultyMobileNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.facultyMobileNumber\r\n                                                })} id=\"numberId\" />\r\n                                            {error.facultyMobileNumber && (<div className=\"invalid-feedback\">{error.facultyMobileNumber}</div>)}\r\n\r\n\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                            {/* <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" /> */}\r\n                                            <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.aadharCard\r\n                                                })} id=\"aadharId\" />\r\n                                            {error.aadharCard && (<div className=\"invalid-feedback\">{error.aadharCard}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Add Faculty</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></>) : (history.push('/'))}\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AdminAddFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddSubject } from '../redux/action/adminAction'\r\nimport AdminHomeHelper from '../Components/AdminHomeHelper'\r\n\r\nconst AdminAddSubject = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [subjectName, setSubjectName] = useState('')\r\n    const [subjectCode, setSubjectCode] = useState('')\r\n    const [totalLectures, setTotalLectures] = useState('')\r\n    const [classroom, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddSubject({\r\n            subjectCode,\r\n            subjectName,\r\n            totalLectures,\r\n            classroom,\r\n            year\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.adminAddSubjectFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddSubjectFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddSubjectFlag) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [store.error, store.admin.adminAddSubjectFlag])\r\n\r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <> <AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"d-flex justify-content-md-center vh-100\">\r\n                                <form noValidate onSubmit={formHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"snameId\">Subject Name</label>\r\n                                        <input onChange={(e) => setSubjectName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.subjectName\r\n                                            })} id=\"snameId\" />\r\n                                        {error.subjectName && (<div className=\"invalid-feedback\">{error.subjectName}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"scodeId\">Subject Code</label>\r\n                                        <input onChange={(e) => setSubjectCode(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.subjectCode\r\n                                            })} id=\"scodeId\" />\r\n                                        {error.subjectCode && (<div className=\"invalid-feedback\">{error.subjectCode}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"totalLectures\">Total Lectures</label>\r\n                                        <input onChange={(e) => setTotalLectures(e.target.value)} type=\"number\" className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.totalLectures\r\n                                            })} id=\"totalLectures\" />\r\n                                        {error.totalLectures && (<div className=\"invalid-feedback\">{error.totalLectures}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"departmentId\">classroom</label>\r\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.classroom\r\n                                            })} id=\"departmentId\">\r\n                                            <option>Select</option>\r\n\r\n\r\n                                            <option value=\"five\">Five</option>\r\n                                            <option value=\"six\">Six</option>\r\n                                            <option value=\"seven\">Seven</option>\r\n                                            <option value=\"eight\">Eight</option>\r\n                                            <option value=\"nine\">Nine</option>\r\n                                            <option value=\"ten\">Ten</option>\r\n\r\n                                        </select>\r\n                                        {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"yearId\">Year</label>\r\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.year\r\n\r\n                                            })} id=\"yearId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                        </select>\r\n\r\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Subject</button>}\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminAddSubject\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {fetchAttendence} from '../redux/action/studentAction'\r\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis } from 'recharts';\r\nimport axios from 'axios'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const store = useSelector(store => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n      dispatch(fetchAttendence())  \r\n    },[])\r\n\r\n    const data3 = [];\r\n    if (store.student.attendence) {\r\n        for (let i = 0; i < store.student.attendence.length; i++) {\r\n            data3.push({ 'Subject': store.student.attendence[i].subjectName, \"Percentage\": store.student.attendence[i].attendence });\r\n        }\r\n\r\n    }\r\n    console.log(store.student.attendence[0])\r\n    console.log(data3)\r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Subject Code</th>\r\n                                        <th scope=\"col\">Subject Name</th>\r\n                                        <th scope=\"col\">Maximum Hours</th>\r\n                                        <th scope=\"col\">Present Hours</th>\r\n                                        <th scope=\"col\">Absent Hours</th>\r\n                                        <th scope=\"col\">Conducted Hours</th>\r\n                                        <th scope=\"col\">Attendence</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.student.attendence.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.subjectCode}</td>\r\n                                                <td>{res.subjectName}</td>\r\n                                                <td>{res.maxHours}</td>\r\n                                                <td>{res.lectureAttended}</td>\r\n                                                <td>{res.absentHours}</td>\r\n                                                <td>{res.totalLecturesByFaculty}</td>\r\n                                                <td>{res.attendence}%</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            \r\n                        </div>\r\n                        <BarChart width={300} height={400} data={data3}>\r\n                            <Bar dataKey=\"Percentage\" fill=\"#8B008B\" />\r\n                            <CartesianGrid stroke=\"#ccc\" />\r\n                            <XAxis dataKey=\"Subject\" />\r\n                            <YAxis />\r\n                            </BarChart>\r\n                    </div>\r\n                            \r\n                </div>\r\n            </> : (history.push('/'))}\r\n           \r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { facultyLogin } from '../redux/action/facultyAction'\r\nimport { studentLogin } from '../redux/action/studentAction'\r\nimport classnames from 'classnames'\r\n\r\nimport '../Style/facultyStudentLogin.css'\r\n\r\n\r\n\r\n\r\nconst FacultyStudentLoginPags = () => {\r\n    const store = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const [facultyRegNum, setFacultyRegNum] = useState('')\r\n    const [facultyPassword, setFacultyPassword] = useState('')\r\n    const [studentRegNum, setStudentRegNum] = useState('')\r\n    const [studentPassword, setStudentPassword] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    const [errorsHelper, setErrorsHelper] = useState({})\r\n    const [isFacultyLoading, setIsFacultyLoading] = useState(false)\r\n    const [isStudentLoading, setIsStudentLoading] = useState(false)\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (store.faculty.isAuthenticated) {\r\n            history.push('/faculty')\r\n        }\r\n    }, [store.faculty.isAuthenticated])\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setErrors(store.error)\r\n        }\r\n    }, [store.error])\r\n    useEffect(() => {\r\n        if (store.student.isAuthenticated) {\r\n            history.push('/home')\r\n        }\r\n    }, [store.student.isAuthenticated])\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper) {\r\n            setErrorsHelper(store.errorHelper)\r\n        }\r\n    }, [store.errorHelper])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const facultyFormHandler = (e) => {\r\n        e.preventDefault()\r\n        let registrationNumber;\r\n        let password;\r\n        setIsFacultyLoading(true)\r\n        dispatch(facultyLogin({ registrationNumber: facultyRegNum, password: facultyPassword }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.faculty.isAuthenticated) {\r\n            setIsFacultyLoading(false)\r\n        }\r\n        else {\r\n            setIsFacultyLoading(true)\r\n        }\r\n    }, [store.error, store.faculty.isAuthenticated])\r\n\r\n    const studentFormHandler = (e) => {\r\n        e.preventDefault()\r\n        let registrationNumber;\r\n        let password;\r\n        setIsStudentLoading(true)\r\n        dispatch(studentLogin({ registrationNumber: studentRegNum, password: studentPassword }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper ||\r\n            store.student.isAuthenticated) {\r\n            setIsStudentLoading(false)\r\n        }\r\n        else {\r\n            setIsStudentLoading(false)\r\n        }\r\n\r\n    }, [store.errorHelper, store.student.isAuthenticated])\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\" id=\"trail\">\r\n                <div className=\"col-md-6\">\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\r\n                            <div>\r\n                                <h3 className=\"text-center \">FACULTY</h3>\r\n                                <form noValidate onSubmit={facultyFormHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"facRegId\">Registration Number</label>\r\n                                        <input onChange={(e) => setFacultyRegNum(e.target.value)} type=\"text\" value={facultyRegNum} className={classnames('form-control', {\r\n                                            'is-invalid': errors.registrationNumber\r\n                                        })}\r\n                                            id=\"facRegId\" />\r\n                                        {errors.registrationNumber && (\r\n                                            <div className=\"invalid-feedback\">{errors.registrationNumber}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"passwordFacId\">Password</label>\r\n                                        <input onChange={(e) => setFacultyPassword(e.target.value)} value={facultyPassword} className={classnames(\"form-control\", {\r\n                                            'is-invalid': errors.password\r\n                                        })}\r\n                                            type=\"password\" id=\"passwordFacId\" />\r\n                                        {errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isFacultyLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {!isFacultyLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Login</button>}\r\n                                </form>\r\n                                <p className=\"text-center mt-2 \"><Link className=\"text-center\" to=\"/forgotPassword/faculty\">Forgot Password</Link></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-8 m-auto border\" style={{ backgroundColor: \"white\", borderRadius: \"1.2rem\", padding: \"1rem 1rem 0rem 1rem\" }}>\r\n                            <div>\r\n                                <h3 className=\"text-center\">STUDENT</h3>\r\n                                <form noValidate onSubmit={studentFormHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"studentId\">Registration Number</label>\r\n                                        <input onChange={(e) => setStudentRegNum(e.target.value)} type=\"text\" value={studentRegNum} className={classnames('form-control', {\r\n                                            'is-invalid': errorsHelper.registrationNumber\r\n                                        })}\r\n                                            id=\"studentId\" />\r\n                                        {errorsHelper.registrationNumber && (\r\n                                            <div className=\"invalid-feedback\">{errorsHelper.registrationNumber}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"passwordId\">Password</label>\r\n                                        <input onChange={(e) => setStudentPassword(e.target.value)} value={studentPassword} className={classnames(\"form-control\", {\r\n                                            'is-invalid': errorsHelper.password\r\n                                        })}\r\n                                            type=\"password\" id=\"passwordId\" />\r\n                                        {errorsHelper.password && (\r\n                                            <div className=\"invalid-feedback\">{errorsHelper.password}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isStudentLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isStudentLoading && <button type=\"submit\" className=\"btn btn-info btn-block \">Login</button>}\r\n\r\n                                </form>\r\n                                <p className=\"text-center\"><Link className=\"text-center\" to=\"/forgotPassword/student\">Forgot Password</Link></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FacultyStudentLoginPags\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport HomeHelper from '../Components/HomeHelper'\r\nimport { studentUpdatePassword } from '../redux/action/studentAction'\r\n\r\n\r\n\r\n\r\nconst StudentUpdatePassword = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n    const [error, setError] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper) {\r\n            setError(store.errorHelper)\r\n            console.log(store.errorHelper)\r\n        }\r\n    }, [store.errorHelper])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(studentUpdatePassword({ registrationNumber: store.student.student.student.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\r\n    }\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container m-5\">\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-5 m-auto\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Old Password</label>\r\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.oldPassword\r\n\r\n                                        })} id=\"emailId\" />\r\n                                    {error.oldPassword && (<div className=\"invalid-feedback\">{error.oldPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">New Password</label>\r\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.newPassword\r\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\r\n                                    {error.newPassword && (<div className=\"invalid-feedback\">{error.newPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\r\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.confirmNewPassword\r\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\r\n                                    {error.confirmNewPassword && (<div className=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\r\n                                </div>\r\n                                <button type=\"submit\" class=\"btn btn-info btn-block \">Update Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n\r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentUpdatePassword\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport FacultyHomeHelper from '../Components/FacultyHomeHelper'\r\nimport { facultyUpdatePassword } from '../redux/action/facultyAction'\r\n\r\n\r\n\r\n\r\nconst FacultyUpdatePassword = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(facultyUpdatePassword({ registrationNumber: store.faculty.faculty.faculty.registrationNumber, oldPassword, newPassword, confirmNewPassword }))\r\n    }\r\n    useEffect(() => {\r\n        \r\n    }, [store.faculty])\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container m-5\">\r\n                    <div className=\"row m-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"emailId\">Old Password</label>\r\n                                    <input onChange={(e) => setOldPassword(e.target.value)} type=\"password\" value={oldPassword} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.oldPassword\r\n\r\n                                        })} id=\"emailId\" />\r\n                                    {error.oldPassword && (<div classNameName=\"invalid-feedback\">{error.oldPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordId\">New Password</label>\r\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.newPassword\r\n                                    })} value={newPassword} type=\"password\" id=\"passwordId\" />\r\n                                    {error.newPassword && (<div classNameName=\"invalid-feedback\">{error.newPassword}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"passwordCId\">Confirm New Password</label>\r\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} className={classnames(\"form-control\", {\r\n                                        \"is-invalid\": error.confirmNewPassword\r\n                                    })} value={confirmNewPassword} type=\"password\" id=\"passwordCId\" />\r\n                                    {error.confirmNewPassword && (<div classNameName=\"invalid-feedback\">{error.confirmNewPassword}</div>)}\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-info btn-block \">Update Password</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n</> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FacultyUpdatePassword\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { getOTPStudent, submitOTPStudent } from '../redux/action/studentAction'\r\nimport { getOTPFaculty, submitOTPFaculty } from '../redux/action/facultyAction'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst ForgotPassword = (props) => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [user, setUser] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [otp, setOtp] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\r\n    const [errors, setErrors] = useState({})\r\n    const [helper, setHelper] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUser(props.match.params.user)\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setErrors(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    useEffect(() => {\r\n        if (store.student.flag) {\r\n            setHelper(true)\r\n        }\r\n    }, [store.student.flag])\r\n\r\n    const sendOTPHandler = (e) => {\r\n        e.preventDefault()\r\n        if (user === \"student\") {\r\n            dispatch(getOTPStudent({ email }))\r\n        }\r\n        else if (user === \"faculty\") {\r\n            dispatch(getOTPFaculty({ email }))\r\n        }\r\n    }\r\n\r\n    const submitOTPHandler = (e) => {\r\n        e.preventDefault()\r\n        if (user === \"student\") {\r\n            dispatch(submitOTPStudent({ email, otp, newPassword, confirmNewPassword }, history))\r\n        }\r\n        else if (user === \"faculty\") {\r\n            dispatch(submitOTPFaculty({ email, otp, newPassword, confirmNewPassword }, history))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 m-auto\">\r\n                    {!helper ? <>\r\n                        <form noValidate onSubmit={sendOTPHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\r\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\r\n                                    'is-invalid': errors.email\r\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide our registered email\" aria-describedby=\"emailHelp\" />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\r\n                                {errors.email && (\r\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\r\n                                )}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button>\r\n                        </form>\r\n                    </> : <>\r\n                        <form noValidate onSubmit={submitOTPHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail1\">OTP</label>\r\n                                <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\r\n                                    'is-invalid': errors.otp\r\n                                })} id=\"exampleInputEmail1\" />\r\n                                {errors.otp && (\r\n                                    <div className=\"invalid-feedback\">{errors.otp}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail2\">New Password</label>\r\n                                <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\r\n                                    'is-invalid': errors.newPassword\r\n                                })} id=\"exampleInputEmail2\" />\r\n                                {errors.newPassword && (\r\n                                    <div className=\"invalid-feedback\">{errors.newPassword}</div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\r\n                                <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\r\n                                    'is-invalid': errors.confirmNewPassword\r\n                                })} id=\"exampleInputEmail3\" />\r\n                                {errors.confirmNewPassword && (\r\n                                    <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\r\n                                )}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form>\r\n                    </>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ForgotPassword)\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getStudentByRegName } from '../redux/action/studentAction'\r\nimport HomeHelper from '../Components/HomeHelper'\r\n\r\nconst RecieverUserDetails = (props) => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [registrationNumber, setRegistrationNumber] = useState(\"\")\r\n  \r\n\r\n\r\n    useEffect(() => {\r\n        setRegistrationNumber(props.match.params.registrationNumber)\r\n        dispatch(getStudentByRegName(registrationNumber))\r\n        \r\n    }, [registrationNumber]) \r\n\r\n\r\n    return (\r\n        <div>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.student.regNumStudent.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.student.regNumStudent.name}</h5>\r\n                                            <h5 className=\"card-title\">{}</h5>\r\n                                            <Link to={`/chat/${store.student.regNumStudent.registrationNumber}.${store.student.student.student.registrationNumber}`}>CHAT</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <table className=\"table border\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.student.regNumStudent.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.student.regNumStudent.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.student.regNumStudent.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Year</td>\r\n                                                <td>{store.student.regNumStudent.year}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>classroom</td>\r\n                                                <td>{store.student.regNumStudent.classroom}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>division</td>\r\n                                                <td>{store.student.regNumStudent.division}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Batch</td>\r\n                                                <td>{store.student.regNumStudent.batch}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </> : (history.push('/'))}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RecieverUserDetails\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nimport { studentUpdate, studentLogout,newerChats, previousChats } from '../redux/action/studentAction'\r\nimport HomeHelper from '../Components/HomeHelper'\r\n\r\nimport { useHistory, withRouter } from 'react-router-dom'\r\n\r\nconst StudentUpdateProfile = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [gender, setGender] = useState('')\r\n    const [studentMobileNumber, setContactNumber] = useState('')\r\n    const [fatherName, setFatherName] = useState('')\r\n    const [fatherMobileNumber, setFatherContactNumber] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [avatar, setAvatar] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [modal, setModal] = useState(false)\r\n    const imagehandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setAvatar(img)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    const formHandler = async(e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"gender\", gender)\r\n        formData.append(\"studentMobileNumber\", studentMobileNumber)\r\n        formData.append(\"fatherName\", fatherName)\r\n        formData.append(\"fatherMobileNumber\", fatherMobileNumber)\r\n        formData.append(\"aadharCard\", aadharCard)\r\n        formData.append(\"avatar\", avatar)\r\n        formData.append(\"email\", store.student.student.student.email)\r\n        dispatch(studentUpdate(formData, history))\r\n        setModal(true)\r\n        alert(\"Kindly login again to see updates\")\r\n        dispatch(studentLogout())\r\n        history.push('/')\r\n    }\r\n        return (\r\n            <div>\r\n                {store.student.isAuthenticated ? <>\r\n                    <HomeHelper />\r\n                    <div className=\"container mt-5\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-md-5 w-100 m-auto\">\r\n                                <form onSubmit={formHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"inputId\">Profile Picture</label>\r\n                                        <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"genderId\">Gender</label>\r\n                                        <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"Male\">Male</option>\r\n                                            <option value=\"Female\">Female</option>\r\n                                            <option value=\"Other\">Other</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"numberId\">Contact Number</label>\r\n                                        <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fatherId\">Father Name</label>\r\n                                        <input onChange={(e) => setFatherName(e.target.value)} type=\"text\" className=\"form-control\" id=\"fatherId\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"fathercnId\">Father Contact Number</label>\r\n                                        <input onChange={(e) => setFatherContactNumber(e.target.value)} type=\"number\" className=\"form-control\" id=\"fathercnId\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                        <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\r\n                                    </div>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </> : (history.push('/'))}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default withRouter(StudentUpdateProfile)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllSubjects } from '../../redux/action/studentAction'\r\nimport HomeHelper from '../../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst StudentSubjectList = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAllSubjects())\r\n    }, [])\r\n    return (\r\n        <>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-6 m-auto\">\r\n                            <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Subject Code</th>\r\n                                        <th scope=\"col\">Subject Name</th>\r\n                                        <th scope=\"col\">Year</th>\r\n                                        <th scope=\"col\">Total Lectures</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.student.allSubjects.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.subjectCode}</td>\r\n                                                <td>{res.subjectName}</td>\r\n                                                <td>{res.year}</td>\r\n                                                <td>{res.totalLectures}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentSubjectList\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport { fetchStudents, uploadMarks } from '../../redux/action/facultyAction'\r\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nconst FacultyUploadMarks = () => {\r\n    const store = useSelector((store) => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch() \r\n    const [classroom, setDepartment] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [marks, setMarks] = useState([])\r\n    const [division, setSection] = useState(\"\")\r\n    const [subjectCode, setSubjectCode] = useState(\"\")\r\n    const [totalMarks, setTotalMarks] = useState()\r\n    const [exam ,setExam] = useState(\"\")\r\n    const [error, setError] = useState({})\r\n    const [errorHelper, setErrorHelper] = useState({})\r\n\r\n   \r\n\r\n\r\n    const handleInputChange = (value, _id) => {\r\n    \r\n        const newMarks = [...marks]\r\n        let index = newMarks.findIndex(m => m._id === _id)\r\n        if (index === -1) {\r\n            newMarks.push({ _id, value })\r\n        }\r\n        else {\r\n           newMarks[index].value = value\r\n        }\r\n        setMarks(newMarks)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n    }, [store.error])\r\n\r\n    useEffect(() => {\r\n        if (store.errorHelper) {\r\n            setErrorHelper(store.errorHelper)\r\n        }\r\n    }, [store.errorHelper])\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n    \r\n       dispatch(fetchStudents(classroom, year,  division))\r\n\r\n    }\r\n\r\n\r\n\r\n    const secondFormHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(uploadMarks(subjectCode, exam, totalMarks, marks, classroom, division\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                {store.faculty.fetchedStudentsHelper && <div className=\"row justify-content-center mt-4 \">\r\n                    <div className=\"col-md-4\">\r\n                        <form noValidate onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"branchId\">classroom</label>\r\n                                <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.classroom\r\n\r\n                                    })} id=\"bramchId\">\r\n                                    <option>Select</option>\r\n                                    <option value={store.faculty.faculty.faculty.classroom}>{store.faculty.faculty.faculty.classroom}</option>\r\n                                </select>\r\n                                {error.classroom && (<div classNameName=\"invalid-feedback\">{error.classroom}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"yearId\">Year</label>\r\n                                <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.year\r\n\r\n                                    })} id=\"yearId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                </select>\r\n\r\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\r\n                            </div>\r\n                            {/* <div className=\"form-group\">\r\n                                <label htmlFor=\"semesterId\">Semester</label>\r\n                                <select onChange={(e) => setSemester(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.semester\r\n\r\n                                    })} id=\"semesterId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                </select>\r\n                                {error.year && (<div classNameName=\"invalid-feedback\">{error.year}</div>)}\r\n                            </div> */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"sectionId\">division</label>\r\n                                <select onChange={(e) => setSection(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': error.division\r\n\r\n                                    })} id=\"sectionId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"A\">A</option>\r\n                                    <option value=\"B\">B</option>\r\n                                    <option value=\"C\">C</option>\r\n                                    <option value=\"D\">D</option>\r\n                                    <option value=\"E\">E</option>\r\n                                    <option value=\"F\">F</option>\r\n                                </select>\r\n                                {error.division && (<div classNameName=\"invalid-feedback\">{error.division}</div>)}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </div>}\r\n\r\n\r\n                {!store.faculty.fetchedStudentsHelper && <div className=\"row  justify-content-center mt-4\">\r\n                    <div className=\"col-md-4\">\r\n                        <form onSubmit={secondFormHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"subjectId\">Subject Code</label>\r\n                                <select onChange={(e) => setSubjectCode(e.target.value)} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errorHelper.subjectCode\r\n\r\n                                    })} id=\"subjectId\">\r\n                                    <option>Select</option>\r\n                                    {\r\n                                        store.faculty.allSubjectCodeList.map(subjectCodeName =>\r\n                                            <option>{subjectCodeName}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                                {errorHelper.subjectCode && (<div classNameName=\"invalid-feedback\">{errorHelper.subjectCode}</div>)}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"examId\">Exam</label>\r\n                                <select onChange={(e) => setExam(e.target.value)} value={exam} className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errorHelper.exam\r\n\r\n                                    })} id=\"examId\">\r\n                                    <option>Select</option>\r\n                                    <option value=\"CycleTest1\">Cycle Test 1</option>\r\n                                    <option value=\"CycleTest2\">Cylce Test 2</option>\r\n                                    <option value=\"Semester\">Semester</option>\r\n                                </select>\r\n                                {errorHelper.exam && (<div classNameName=\"invalid-feedback\">{errorHelper.exam}</div>)}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"marksId\">Total Marks</label>\r\n                                <input type=\"number\" className={classnames(\"form-control\",\r\n                                    {\r\n                                        'is-invalid': errorHelper.totalMarks\r\n\r\n                                    })} id=\"marksId\"\r\n                                    value={totalMarks} onChange={(e) => setTotalMarks(e.target.value)} />\r\n                                {errorHelper.totalMarks && (<div classNameName=\"invalid-feedback\">{errorHelper.totalMarks}</div>)}\r\n                            </div>\r\n\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Student Name</th>\r\n                                        <th scope=\"col\">Marks</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.faculty.fetchedStudents.map((obj, index) =>\r\n                                            <tr key={index}>\r\n                                                <td>{obj.registrationNumber}</td>\r\n                                                <td>{obj.name}</td>\r\n                                                <td><div className=\"form-check\">\r\n                                                    <input className=\"form-control\" required type=\"number\" value={obj.marks} onChange={(e) => handleInputChange(e.target.value, obj._id)} id=\"defaultCheck1\" />\r\n                                                </div></td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            <button type=\"submit\" className=\"btn btn-primary ml-1\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FacultyUploadMarks\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory, withRouter } from 'react-router-dom'\r\n\r\n\r\nimport { facultyUpdate, facultyLogout} from '../../redux/action/facultyAction'\r\nimport FacultyHomeHelper from '../../Components/FacultyHomeHelper'\r\n\r\n\r\nconst FacultyUpdateProfile = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [gender, setGender] = useState('')\r\n    const [facultyMobileNumber, setContactNumber] = useState('')\r\n    const [aadharCard, setAadharCard] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const imagehandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setAvatar(img)\r\n        }\r\n    }\r\n\r\n\r\n    const formHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"gender\", gender)\r\n        formData.append(\"facultyMobileNumber\", facultyMobileNumber)\r\n        formData.append(\"aadharCard\", aadharCard)\r\n        formData.append(\"avatar\", avatar)\r\n        formData.append(\"email\", store.faculty.faculty.faculty.email)\r\n        setIsLoading(true)\r\n        dispatch(facultyUpdate(formData, history))\r\n        alert(\"Kindly login again to see updates\")\r\n        dispatch(facultyLogout())\r\n        history.push('/')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.faculty.updateProfileFlag) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [store.faculty.updateProfileFlag])\r\n    return (\r\n        <div>\r\n            {store.faculty.isAuthenticated ? <>\r\n                <FacultyHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col-md-5 w-100 m-auto\">\r\n                            <form onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"inputId\">Profile Picture</label>\r\n                                    <input required className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"genderId\">Gender</label>\r\n                                    <select onChange={(e) => setGender(e.target.value)} className=\"form-control\" id=\"genderId\">\r\n                                        <option>Select</option>\r\n                                        <option value=\"Male\">Male</option>\r\n                                        <option value=\"Female\">Female</option>\r\n                                        <option value=\"Other\">Other</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"numberId\">Contact Number</label>\r\n                                    <input onChange={(e) => setContactNumber(e.target.value)} required type=\"number\" className=\"form-control\" id=\"numberId\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"aadharId\">Aadhar Card Number</label>\r\n                                    <input onChange={(e) => setAadharCard(e.target.value)} type=\"number\" className=\"form-control\" id=\"aadharId\" />\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info\">Update</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></> : (history.push('/'))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FacultyUpdateProfile)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getMarks } from '../../redux/action/studentAction'\r\nimport HomeHelper from '../../Components/HomeHelper'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport '../../stylesheets/test.css'\r\nimport { BarChart, Bar, CartesianGrid, XAxis, YAxis } from 'recharts';\r\n\r\n\r\n\r\nconst StudentTestPerformance = () => {\r\n    const store = useSelector(store => store)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    let sum1 = 0;\r\n    let Total_sum1 = 0;\r\n    let sum2 = 0;\r\n    let Total_sum2 = 0;\r\n    let sum = 0;\r\n    let Total_sum = 0;\r\n    useEffect(() => {\r\n        dispatch(getMarks())\r\n\r\n    }, [])\r\n    if (store.student.allMarks.CycleTest1) {\r\n        for (let i = 0; i < store.student.allMarks.CycleTest1.length; i++) {\r\n            sum1 += store.student.allMarks.CycleTest1[i].marks;\r\n            Total_sum1 += store.student.allMarks.CycleTest1[i].totalMarks;\r\n        }\r\n        // console.log(sum1);\r\n        // console.log(Total_sum1);\r\n    }\r\n    if (store.student.allMarks.CycleTest2) {\r\n        for (let i = 0; i < store.student.allMarks.CycleTest2.length; i++) {\r\n            sum2 += store.student.allMarks.CycleTest2[i].marks;\r\n            Total_sum2 += store.student.allMarks.CycleTest2[i].totalMarks;\r\n        }\r\n        // console.log(sum2);\r\n        // console.log(Total_sum2);\r\n    }\r\n    if (store.student.allMarks.Semester) {\r\n        for (let i = 0; i < store.student.allMarks.Semester.length; i++) {\r\n            sum += store.student.allMarks.Semester[i].marks;\r\n            Total_sum += store.student.allMarks.Semester[i].totalMarks;\r\n        }\r\n        // console.log(sum);\r\n        // console.log(Total_sum);\r\n    }\r\n    console.log(\"harshal\")\r\n    console.log(store.student.allMarks.Semester)\r\n\r\n\r\n    // Graphical Representation\r\n    const data1 = [];\r\n    console.log(store.student.allMarks.CycleTest1)\r\n    if (store.student.allMarks.CycleTest1) {\r\n        for (let i = 0; i < store.student.allMarks.CycleTest1.length; i++) {\r\n            data1.push({ 'Subject': store.student.allMarks.CycleTest1[i].subject.subjectName, \"Marks\": store.student.allMarks.CycleTest1[i].marks });\r\n        }\r\n\r\n    }\r\n    const data2 = [];\r\n    if (store.student.allMarks.CycleTest2) {\r\n        for (let i = 0; i < store.student.allMarks.CycleTest2.length; i++) {\r\n            data2.push({ 'Subject': store.student.allMarks.CycleTest2[i].subject.subjectName, \"Marks\": store.student.allMarks.CycleTest2[i].marks });\r\n        }\r\n\r\n    }\r\n    const data3 = [];\r\n    if (store.student.allMarks.Semester) {\r\n        for (let i = 0; i < store.student.allMarks.Semester.length; i++) {\r\n            data3.push({ 'Subject': store.student.allMarks.Semester[i].subject.subjectName, \"Marks\": store.student.allMarks.Semester[i].marks });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {store.student.isAuthenticated ? <>\r\n                <HomeHelper />\r\n\r\n                <div className=\"container\">\r\n\r\n                    {store.student.allMarks.CycleTest1 &&\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                {store.student.allMarks.CycleTest1.length !== 0 ? <>\r\n                                    <div class=\"eleven\">\r\n                                        <h2>Unit Test 1</h2>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <table className=\"table border\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">S.No</th>\r\n                                                <th scope=\"col\">Subject Code</th>\r\n                                                <th scope=\"col\">Subject Name</th>\r\n                                                <th scope=\"col\">Obtained Marks</th>\r\n                                                <th scope=\"col\">Total Marks</th>\r\n                                                {/* <th scope=\"col\">Percentage</th> */}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                store.student.allMarks.CycleTest1.map((res, index) =>\r\n\r\n                                                    <tr key={index}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{res.subject.subjectCode}</td>\r\n                                                        <td>{res.subject.subjectName}</td>\r\n                                                        <td>{res.marks}</td>\r\n                                                        <td>{res.totalMarks}</td>\r\n                                                        {/* <td>{(res.marks / res.totalMarks) * 100}%</td> */}\r\n\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table></> : null}\r\n                                <p style={{ color: \"black\" }}>Total Percentage: {((sum1) * 100 / Total_sum1)}%</p>\r\n                            </div>\r\n                            <BarChart width={200} height={300} data={data1}>\r\n                            <Bar dataKey=\"Marks\" fill=\"#344D67\" />\r\n                            <CartesianGrid stroke=\"#ccc\" />\r\n                            <XAxis dataKey=\"Subject\" />\r\n                            <YAxis />\r\n                            </BarChart>\r\n                        </div>\r\n                        \r\n\r\n\r\n                    }\r\n\r\n                    {store.student.allMarks.CycleTest2 &&\r\n                        <div className=\" row mt-3\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                {store.student.allMarks.CycleTest2.length !== 0 ? <>\r\n                                    <div class=\"eleven\">\r\n                                        <h2>Unit Test 2</h2>\r\n                                    </div>\r\n                                    <table className=\"table border\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">S.No</th>\r\n                                                <th scope=\"col\">Subject Code</th>\r\n                                                <th scope=\"col\">Subject Name</th>\r\n                                                <th scope=\"col\">Obtained Marks</th>\r\n                                                <th scope=\"col\">Total Marks</th>\r\n                                                {/* <th scope=\"col\">Percentage</th> */}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                store.student.allMarks.CycleTest2.map((res, index) =>\r\n                                                    <tr key={index}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{res.subject.subjectCode}</td>\r\n                                                        <td>{res.subject.subjectName}</td>\r\n                                                        <td>{res.marks}</td>\r\n                                                        <td>{res.totalMarks}</td>\r\n                                                        {/* <td>{(res.marks / res.totalMarks) * 100}%</td> */}\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table></> : null}\r\n                                <p style={{ color: \"black\" }}>Total Percentage: {((sum2) * 100 / Total_sum2)}%</p>\r\n                            </div>\r\n                            <BarChart width={200} height={300} data={data2}>\r\n                            <Bar dataKey=\"Marks\" fill=\"green\" />\r\n                            <CartesianGrid stroke=\"#ccc\" />\r\n                            <XAxis dataKey=\"Subject\" />\r\n                            <YAxis />\r\n                            </BarChart>\r\n                        </div>\r\n                    }\r\n\r\n                    {store.student.allMarks.Semester &&\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                {store.student.allMarks.Semester.length !== 0 ? <>\r\n                                    <h2>End Semester Exam</h2>\r\n                                    <table className=\"table border\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">S.No</th>\r\n                                                <th scope=\"col\">Subject Code</th>\r\n                                                <th scope=\"col\">Subject Name</th>\r\n                                                <th scope=\"col\">Obtained Marks</th>\r\n                                                <th scope=\"col\">Total Marks</th>\r\n                                                {/* <th scope=\"col\">Percentage</th> */}\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n\r\n                                                store.student.allMarks.Semester.map((res, index) =>\r\n                                                    <tr key={index}>\r\n                                                        <th scope=\"row\">{index + 1}</th>\r\n                                                        <td>{res.subject.subjectCode}</td>\r\n                                                        <td>{res.subject.subjectName}</td>\r\n                                                        <td>{res.marks}</td>\r\n                                                        <td>{res.totalMarks}</td>\r\n                                                        {/* <td>{((res.marks / res.totalMarks) * 100).toFixed(2)}%</td> */}\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table></> : null}\r\n                                <p style={{ color: \"black\" }}>Total Percentage: {((sum) * 100 / Total_sum)}%</p>\r\n                            </div>\r\n                            <BarChart width={200} height={300} data={data3}>\r\n                            <Bar dataKey=\"Marks\" fill=\"#344D67\" />\r\n                            <CartesianGrid stroke=\"#ccc\" />\r\n                            <XAxis dataKey=\"Subject\" />\r\n                            <YAxis />\r\n                            </BarChart>\r\n                        </div>\r\n\r\n                    }\r\n                </div>\r\n                \r\n\r\n                \r\n\r\n                \r\n            </> : (history.push('/'))}\r\n\r\n        </>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default StudentTestPerformance\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\nimport { adminAddAdmin } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\n\r\n\r\n\r\nconst AdminAddAdmin = () => {\r\n    const store = useSelector((state) => state)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [classroom, setDepartment] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [contactNumber, setContactNumber] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (store.error) {\r\n            setError(store.error)\r\n        }\r\n        else {\r\n            setError({})\r\n        }\r\n    }, [store.error])\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminAddAdmin({\r\n            name,\r\n            email,\r\n            classroom,\r\n            contactNumber,\r\n            dob: dob.split(\"-\").reverse().join(\"-\")\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.adminAddAdminFlag) {\r\n            setError({})\r\n        }\r\n    }, [store.admin.adminAddAdminFlag])\r\n\r\n    useEffect(() => {\r\n        if (store.error || store.admin.adminAddAdminFlag) {\r\n            setIsLoading(false)\r\n        }\r\n        else {\r\n            setIsLoading(true)\r\n        }\r\n    }, [store.error, store.admin.adminAddAdminFlag])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {store.admin.isAuthenticated ? (<><AdminHomeHelper />\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"nameId\">Admin Name</label>\r\n                                            <input onChange={(e) => setName(e.target.value)} type=\"text\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.name\r\n                                                })} id=\"nameId\" />\r\n                                            {error.name && (<div className=\"invalid-feedback\">{error.name}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"emailId\">Email</label>\r\n                                            <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.email\r\n                                                })} id=\"emailId\" />\r\n                                            {error.email && (<div className=\"invalid-feedback\">{error.email}</div>)}\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"departmentId\">classroom</label>\r\n                                            <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.classroom\r\n                                                })} id=\"departmentId\">\r\n                                                <option>Select</option>\r\n                                                \r\n                                                \r\n                                                <option value=\"five\">Five</option>\r\n                                                <option value=\"six\">Six</option>\r\n                                                <option value=\"seven\">Seven</option>\r\n                                                <option value=\"eight\">Eight</option>\r\n                                                <option value=\"nine\">Nine</option>\r\n                                                <option value=\"ten\">Ten</option>\r\n                                                \r\n                                            </select>\r\n                                            {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dobId\">DOB</label>\r\n                                            <input onChange={(e) => setDob(e.target.value)} type=\"date\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.dob\r\n                                                })} id=\"dobId\" />\r\n                                            {error.dob && (<div className=\"invalid-feedback\">{error.dob}</div>)}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberId\">Contact Number</label>\r\n                                            <input onChange={(e) => setContactNumber(e.target.value)} type=\"number\" className={classnames(\"form-control\",\r\n                                                {\r\n                                                    'is-invalid': error.contactNumber\r\n                                                })} id=\"numberId\" />\r\n                                            {error.contactNumber && (<div className=\"invalid-feedback\">{error.contactNumber}</div>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info  \">Add Admin</button>}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div></>) : (history.push('/'))}\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AdminAddAdmin\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminGetAllFaculty } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\nimport classnames from 'classnames'\r\n\r\nconst AdminGetAllFaculty = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const [classroom, setDepartment] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminGetAllFaculty({ classroom }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.allFaculty.length !== 0) {\r\n            setIsLoading(false)\r\n        }\r\n        \r\n    }, [store.admin.allFaculty.length])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <>\r\n                <AdminHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-4\">\r\n                            <form form-inline noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"departmentId\">classroom</label>\r\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.classroom\r\n                                        })} id=\"departmentId\">\r\n                                        <option>Select</option>\r\n                                        \r\n\r\n                                        <option value=\"five\">Five</option>\r\n                                        <option value=\"six\">Six</option>\r\n                                        <option value=\"seven\">Seven</option>\r\n                                        <option value=\"eight\">Eight</option>\r\n                                        <option value=\"nine\">Nine</option>\r\n                                        <option value=\"ten\">Ten</option>\r\n\r\n                                    </select>\r\n                                    {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            \r\n                            {store.admin.allFaculty.length !== 0 && <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                        <th scope=\"col\">Joining Year</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.admin.allFaculty.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.registrationNumber}</td>\r\n                                                <td>{res.name}</td>\r\n                                                <td>{res.email}</td>\r\n                                                <td>{res.joiningYear}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>}\r\n                           \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminGetAllFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminGetAllStudent } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\nimport classnames from 'classnames'\r\n\r\nconst AdminGetAllFaculty = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const [classroom, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    \r\n    \r\n\r\n    const [error, setError] = useState({})\r\n    const history = useHistory()\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminGetAllStudent({ classroom, year }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (store.admin.allStudent.length !== 0) {\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }, [store.admin.allStudent.length])\r\n    return (\r\n        <div>\r\n            {store.admin.isAuthenticated ? <>\r\n                <AdminHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-md-4\">\r\n                            <form noValidate onSubmit={formHandler}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"departmentId\">Standard</label>\r\n                                    {/* <label htmlFor=\"departmentId\">classroom</label> */}\r\n                                    <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.classroom\r\n                                        })} id=\"departmentId\">\r\n                                        <option>Select</option>\r\n                                        \r\n                                        <option value=\"five\">five</option>\r\n                                                <option value=\"six\">Six</option>\r\n                                                <option value=\"seven\">Seven</option>\r\n                                                <option value=\"eight\">Eight</option>\r\n                                                <option value=\"nine\">Nine</option>\r\n                                                <option value=\"ten\">Ten</option>\r\n                                    </select>\r\n                                    {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"yearId\">Batch</label>\r\n                                    {/* <label htmlFor=\"yearId\">Year</label> */}\r\n                                    <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                        {\r\n                                            'is-invalid': error.year\r\n                                        })} id=\"yearId\">\r\n                                        <option>Select</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                    </select>\r\n                                    {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                </div>\r\n                                <div class=\"row justify-content-center\">\r\n                                    <div class=\"col-md-1\">\r\n                                        {\r\n                                            isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                <span class=\"sr-only\">Loading...</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\r\n                              \r\n                               \r\n                            </form>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n\r\n                            {store.admin.allStudent.length !== 0 && <table className=\"table border\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">S.No</th>\r\n                                        <th scope=\"col\">Registration Number</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Email</th>\r\n                                        <th scope=\"col\">division</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        store.admin.allStudent.map((res, index) =>\r\n                                            <tr key={index}>\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{res.registrationNumber}</td>\r\n                                                <td>{res.name}</td>\r\n                                                <td>{res.email}</td>\r\n                                                <td>{res.division}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </> : (history.push('/'))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminGetAllFaculty\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { adminGetAllSubject } from '../../redux/action/adminAction'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\nimport classnames from 'classnames'\r\n\r\nconst AdminGetAllSubjects = () => {\r\n    const store = useSelector((store) => store)\r\n    const dispatch = useDispatch()\r\n    const [classroom, setDepartment] = useState('')\r\n    const [year, setYear] = useState('')\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        dispatch(adminGetAllSubject({ classroom, year }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (store.admin.allSubject.length !== 0) {\r\n            setIsLoading(false)\r\n        }\r\n\r\n    }, [store.admin.allSubject.length])\r\n    console.log(store.admin.allSubject)\r\n    return (\r\n        <div>\r\n            <div>\r\n                {store.admin.isAuthenticated ? <>\r\n                    <AdminHomeHelper />\r\n                    <div className=\"container\">\r\n                        <div className=\"row mt-5\">\r\n                            <div className=\"col-md-4\">\r\n                                <form noValidate onSubmit={formHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"departmentId\">classroom</label>\r\n                                        <select onChange={(e) => setDepartment(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.classroom\r\n                                            })} id=\"departmentId\">\r\n                                            <option>Select</option>\r\n\r\n\r\n                                            <option value=\"five\">Five</option>\r\n                                            <option value=\"six\">Six</option>\r\n                                            <option value=\"seven\">Seven</option>\r\n                                            <option value=\"eight\">Eight</option>\r\n                                            <option value=\"nine\">Nine</option>\r\n                                            <option value=\"ten\">Ten</option>\r\n\r\n                                        </select>\r\n                                        {error.classroom && (<div className=\"invalid-feedback\">{error.classroom}</div>)}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"yearId\">Year</label>\r\n                                        <select onChange={(e) => setYear(e.target.value)} className={classnames(\"form-control\",\r\n                                            {\r\n                                                'is-invalid': error.year\r\n                                            })} id=\"yearId\">\r\n                                            <option>Select</option>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                        </select>\r\n                                        {error.year && (<div className=\"invalid-feedback\">{error.year}</div>)}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-center\">\r\n                                        <div class=\"col-md-1\">\r\n                                            {\r\n                                                isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\r\n                                                    <span class=\"sr-only\">Loading...</span>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block  \">Search</button>}\r\n\r\n                                </form>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n\r\n                                {store.admin.allSubject.length !== 0 && <table className=\"table border\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">S.No</th>\r\n                                            <th scope=\"col\">Subject Code</th>\r\n                                            <th scope=\"col\">Subject Name</th>\r\n                                            <th scope=\"col\">Total Lectures</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            store.admin.allSubject.map((res, index) =>\r\n                                                <tr key={index}>\r\n                                                    <th scope=\"row\">{index + 1}</th>\r\n                                                    <td>{res.subjectCode}</td>\r\n                                                    <td>{res.subjectName}</td>\r\n                                                    <td>{res.totalLectures}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </> : (history.push('/'))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminGetAllSubjects\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport AdminHomeHelper from '../../Components/AdminHomeHelper'\r\n\r\nconst AdminHome = () => {\r\n    const store = useSelector((store) => store)\r\n\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n           \r\n            {store.admin.isAuthenticated ? <>\r\n                <AdminHomeHelper />\r\n                <div className=\"container\">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-2\">\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"card\" style={{ width: \"18rem\" }}>\r\n                                        <img className=\"card-img-top\" src={store.admin.admin.avatar} alt=\"Card image cap\" />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">{store.admin.admin.name}</h5>\r\n                                            <h5 className=\"card-title\">{store.admin.admin.registrationNumber}</h5>\r\n                                            {/* <Link to='/faculty/updateProfile'>UPDATE PROFILE</Link> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-7\">\r\n                                    <table className=\"table border\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Name</td>\r\n                                                <td>{store.admin.admin.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Email</td>\r\n                                                <td>{store.admin.admin.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Registration Number</td>\r\n                                                <td>{store.admin.admin.registrationNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Joining Year</td>\r\n                                                <td>{store.admin.admin.joiningYear}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>classroom</td>\r\n                                                <td>{store.admin.admin.classroom}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Contact Number</td>\r\n                                                <td>{store.admin.admin.contactNumber ?\r\n                                                    store.admin.admin.contactNumber : \"NA\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </> : (history.push('/'))}\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminHome\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './redux/utils/setAuthToken'\r\nimport store from './redux/store'\r\n\r\nimport { setFacultyUser, facultyLogout } from './redux/action/facultyAction'\r\n\r\nimport { setAdminUser, adminLogout, adminGetAllStudent } from './redux/action/adminAction'\r\n\r\nimport { setStudentUser, studentLogout } from './redux/action/studentAction'\r\n\r\n\r\nimport LoginPage from './Pages/LoginPage'\r\nimport Home from './Pages/StudentHome'\r\n\r\n\r\nimport StudentDetails from './Pages/StudentDetails'\r\nimport facultyInterface from './Pages/FacultyInterface'\r\nimport AttendenceFaculty from './Pages/AttendenceFaculty'\r\n\r\nimport AdminAddStudent from './Pages/AdminAddStudent'\r\nimport AdminAddFaculty from './Pages/AdminAddFaculty'\r\nimport AdminAddSubject from './Pages/AdminAddSubject'\r\nimport StudentAttendencePage from './Pages/StudentAttendencePage'\r\nimport FacultyStudentLoginPags from './Pages/FacultyStudentLoginPags'\r\nimport StudentUpdatePassword from './Pages/StudentUpdatePassword'\r\nimport FacultyUpdatePassword from './Pages/FacultyUpdatePassword'\r\nimport ForgotPassword from './Pages/ForgotPassword'\r\nimport Chat from './Pages/Chat'\r\nimport RecieverUserDetails from './Pages/RecieverUserDetails'\r\nimport StudentUpdateProfile from './Pages/StudentUpdateProfile'\r\n \r\nimport StudentSubjectList from './Pages/Student/StudentSubjectList'\r\n\r\nimport FacultyUploadMarks from './Pages/Faculty/FacultyUploadMarks'\r\n\r\nimport FacultyUpdateProfile from './Pages/Faculty/FacultyUpdateProfile'\r\n\r\nimport StudentTestPerformace from './Pages/Student/StudentTestPerformance'\r\n\r\nimport AdminAddAdmin from './Pages/Admin/AdminAddAdmin'\r\n\r\nimport AdminGetAllFaculty from './Pages/Admin/AdminGetAllFaculty'\r\n\r\nimport AdminGetAllStudent from './Pages/Admin/AdminGetAllStudents'\r\n\r\nimport AdminGetAllSubject from './Pages/Admin/AdminGetAllSubjects'\r\n\r\nimport AdminHome from './Pages/Admin/AdminHome'\r\nimport 'font-awesome/css/font-awesome.min.css'; \r\nimport Libarary from './Pages/Student/Libarary';\r\n\r\n\r\n\r\nif (window.localStorage.facultyJwtToken) {\r\n  setAuthToken(localStorage.facultyJwtToken);\r\n  const decoded = jwt_decode(localStorage.facultyJwtToken);\r\n \r\n  store.dispatch(setFacultyUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(facultyLogout());\r\n    window.location.href = '/';\r\n  }\r\n}\r\nelse if (window.localStorage.studentJwtToken) {\r\n  setAuthToken(localStorage.studentJwtToken);\r\n  const decoded = jwt_decode(localStorage.studentJwtToken);\r\n\r\n  store.dispatch(setStudentUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(studentLogout());\r\n    window.location.href = '/';\r\n  } \r\n}\r\nelse if (window.localStorage.adminJwtToken) {\r\n  setAuthToken(localStorage.adminJwtToken);\r\n  const decoded = jwt_decode(localStorage.adminJwtToken);\r\n\r\n  store.dispatch(setAdminUser(decoded));\r\n\r\n  // Check for expired token\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    store.dispatch(adminLogout());\r\n    window.location.href = '/';\r\n  } \r\n}\r\n\r\nfunction App() {\r\n  const store = useSelector((store)=>store)\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={FacultyStudentLoginPags} />\r\n          <Route exact path='/adminLogin' component={LoginPage} />\r\n          <Route exact path='/home' component={Home} />\r\n          <Route exact path='/student/updateProfile' component={StudentUpdateProfile} />\r\n          <Route exact path=\"/studentDetails\" component={StudentDetails} />\r\n          <Route exact path='/faculty' component={facultyInterface} />\r\n          <Route exact path='/attendenceFaculty' component={AttendenceFaculty} />\r\n          <Route exact path='/admin' component={AdminHome} />\r\n          <Route exact path=\"/admin/addStudent\" component={AdminAddStudent} />\r\n          <Route exact path=\"/admin/addFaculty\" component={AdminAddFaculty} />\r\n          <Route exact path=\"/admin/addSubject\" component={AdminAddSubject} />\r\n          <Route exact path=\"/admin/addAdmin\" component={AdminAddAdmin} />\r\n          <Route exact path=\"/admin/allFaculties\" component={AdminGetAllFaculty} />\r\n          <Route exact path=\"/admin/allStudents\" component={AdminGetAllStudent} />\r\n          <Route exact path=\"/admin/allSubject\" component={AdminGetAllSubject} />\r\n          <Route exact path=\"/student/attendence\" component={StudentAttendencePage} />\r\n          <Route exact path=\"/student/updatePassword\" component={StudentUpdatePassword} />\r\n          <Route exact path=\"/student/testPerformance\" component={StudentTestPerformace} />\r\n          <Route exact path=\"/faculty/updatePassword\" component={FacultyUpdatePassword} />\r\n          <Route exact path=\"/faculty/uploadMarks\" component={FacultyUploadMarks} />\r\n          <Route exact path=\"/faculty/updateProfile\" component={FacultyUpdateProfile} />\r\n          <Route exact path=\"/student/getAllSubjects\" component={StudentSubjectList} />\r\n          <Route exact path=\"/forgotPassword/:user\" component={ForgotPassword} />\r\n          <Route exact path=\"/chat/:room\" component={Chat} />\r\n          <Route exact path=\"/student/:registrationNumber\" component={RecieverUserDetails} />\r\n          <Route exact path=\"/books\" component={Libarary} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}